{"ast":null,"code":"var _jsxFileName = \"/Users/lawrence/Documents/Projects/theWeakestLink/client/src/main_pages/gameFunctional.js\",\n  _s = $RefreshSig$();\nimport Chessboard from \"chessboardjsx\";\nimport { Chess } from \"chess.js\";\nimport { useState, useEffect, useRef } from \"react\";\nimport { SettingButton } from \"../styled_components/settingButton\";\nimport { Logo } from \"../styled_components\";\nimport { GameWrapper, RoomCode as RoomCodeButton, TeamName, GameplaySection, NonChessboard } from \"../styled_components/gameComponents\";\nimport { TeamSection } from \"../styled_components/gameComponents\";\nimport { Teams, Ratings, Gameover } from \"../items/display_components.js\";\nimport { GameControls } from \"../items/interactive_components\";\nimport { CountdownTimer } from \"../items/client_clock.js\";\nimport { usePlayerContext } from '../contexts/PlayerContext';\nimport { begin_game_handler, next_turn_handler, room_joined_handler, timer_handler, update_teams_handler } from \"../handlers/socket_handlers.js\";\nimport { sendRating, squareStyling } from \"../handlers/helpers.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconsole.log(\"Game functional loaded\");\nconst engine = new Worker(\"stockfish.js\");\nconst game = new Chess();\nconst Game = () => {\n  _s();\n  const [fen, setFen] = useState(\"start\");\n  const [turn, setTurn] = useState(false);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [canSubmitMove, setCanSubmitMove] = useState(false);\n  const [whiteTurn, setWhiteTurn] = useState(false);\n  const [isCheckmate, setIsCheckmate] = useState(false);\n  const [timeOut, setTimeOut] = useState(false);\n  const [whiteTime, setWhiteTime] = useState(50);\n  const [blackTime, setBlackTime] = useState(50);\n  const [whiteTeam, setWhiteTeam] = useState(new Map());\n  const [blackTeam, setBlackTeam] = useState(new Map());\n  const [history, setHistory] = useState([]);\n  const [squareStyles, setSquareStyles] = useState({});\n  const proposedMove = useRef(\"\");\n  const target = useRef(\"\");\n  const source = useRef(\"\");\n  const {\n    socket,\n    roomCode,\n    setRoomCode,\n    host,\n    isWhite,\n    setIsWhite,\n    username\n  } = usePlayerContext();\n\n  // core logic handler mounts\n  useEffect(() => {\n    room_joined_handler(socket, setRoomCode, setIsWhite);\n    next_turn_handler(socket, game, setFen, setIsCheckmate, setGameStarted, setWhiteTurn, setTurn, isWhite, setCanSubmitMove, roomCode, setHistory, setSquareStyles);\n    update_teams_handler(socket, setWhiteTeam, setBlackTeam);\n    begin_game_handler(socket, game, setWhiteTurn, setGameStarted, setFen, setIsCheckmate, setTimeOut, isWhite, setTurn, setCanSubmitMove, setSquareStyles);\n    timer_handler(socket, setGameStarted, setTimeOut, setTurn, setCanSubmitMove, roomCode, setWhiteTime, setBlackTime);\n    return () => {\n      socket.removeAllListeners();\n    };\n  }, [isWhite, roomCode, setIsWhite, setRoomCode, socket]);\n  const engineGame = () => {\n    const evalMove = () => {\n      engine.postMessage(\"ucinewgame\");\n      console.log(\"proposedMove.current:\" + proposedMove.current);\n      engine.postMessage(\"position fen \" + proposedMove.current);\n      engine.postMessage(\"go depth 5\");\n\n      // engine.postMessage(\"eval\");\n      // if (!game.isGameOver()) {\n      //   engine.postMessage(\"ucinewgame\");\n      //   console.log(\"proposedMove.current:\" + proposedMove.current)\n      //   engine.postMessage(\"position fen \" + proposedMove.current);\n      //   engine.postMessage(\"eval\");\n      // }\n    };\n\n    engine.onmessage = event => {\n      let line;\n      console.log(\"trigger\");\n      if (event && typeof event === \"object\") {\n        line = event.data;\n      } else {\n        line = event;\n      }\n      console.log(line);\n      if (line.substring(0, 8) === \"bestmove\") {\n        let score = line.substring(line.indexOf(\"score\") + 6);\n        console.log(score);\n        // if (!isWhite) score = score * -1;\n        sendRating(socket, score, proposedMove.current, roomCode, isWhite, username, target, source);\n      }\n    };\n    return {\n      start: function () {\n        console.log(\"starting\");\n        engine.postMessage(\"ucinewgame\");\n        engine.postMessage(\"isready\");\n        // announced_game_over = false;\n      },\n\n      evalMove: function () {\n        evalMove();\n      }\n    };\n  };\n  const onDrop = _ref => {\n    let {\n      sourceSquare,\n      targetSquare\n    } = _ref;\n    if (!turn || !canSubmitMove) return;\n    const move = game.move({\n      from: sourceSquare,\n      to: targetSquare\n    });\n    if (move === null) return; // illegal move  \n    console.log(game.fen());\n    // grab player proposed position and show it\n    proposedMove.current = game.fen();\n    target.current = targetSquare;\n    source.current = sourceSquare;\n    setFen(proposedMove.current);\n    setCanSubmitMove(false);\n\n    // game.undo();\n\n    // highlight the move made\n    setSquareStyles(squareStyling(sourceSquare, targetSquare));\n    return new Promise(resolve => {\n      resolve();\n    }).then(() => engineGame().evalMove());\n  };\n  return /*#__PURE__*/_jsxDEV(GameWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Chessboard, {\n      id: \"board!\",\n      position: fen,\n      onDrop: onDrop,\n      boardStyle: boardStyle,\n      orientation: isWhite ? \"white\" : \"black\",\n      calcWidth: screen => Math.min(screen.screenHeight * .9, screen.screenWidth * .53),\n      squareStyles: squareStyles\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NonChessboard, {\n      children: [/*#__PURE__*/_jsxDEV(Logo, {\n        style: {\n          width: \"50%\",\n          height: \"auto\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          \"flex-flow\": \"row wrap\",\n          \"justify-content\": \"center\",\n          height: \"fit-content\",\n          width: \"100%\",\n          \"margin-top\": \"17%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(TeamSection, {\n          children: [/*#__PURE__*/_jsxDEV(TeamName, {\n            color: \"white\",\n            children: \"WHITE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Teams, {\n            team: whiteTeam,\n            isWhite: true,\n            gameStarted: gameStarted\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TeamSection, {\n          children: [/*#__PURE__*/_jsxDEV(TeamName, {\n            children: \"BLACK\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Teams, {\n            team: blackTeam,\n            isWhite: false,\n            gameStarted: gameStarted\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Ratings, {\n        team: isWhite ? whiteTeam : blackTeam,\n        gameStarted: gameStarted\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this), !gameStarted && /*#__PURE__*/_jsxDEV(GameControls, {\n        socket: socket,\n        roomCode: roomCode,\n        host: host,\n        isWhite: isWhite,\n        username: username,\n        setIsWhite: setIsWhite\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: \"#FFFFFF\"\n        },\n        children: [turn ? \"Your\" : \"Not Your\", \" Turn\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: \"#FFFFFF\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Gameover, {\n          isCheckmate: isCheckmate,\n          timeOut: timeOut,\n          whiteTurn: whiteTurn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          height: \"8%\",\n          width: \"30%\",\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(CountdownTimer, {\n          totalSeconds: whiteTime,\n          isRunning: whiteTurn && gameStarted\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CountdownTimer, {\n          totalSeconds: blackTime,\n          isRunning: !whiteTurn && gameStarted\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        id: \"footer\",\n        style: {\n          display: \"flex\",\n          width: \"100%\",\n          margin: \"0 0 34px 34px\",\n          'justify-content': 'start'\n        },\n        children: [/*#__PURE__*/_jsxDEV(SettingButton, {\n          setWhiteTime: setWhiteTime,\n          setBlackTime: setBlackTime,\n          socket: socket\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RoomCodeButton, {\n          children: [\"ROOM: \", roomCode]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"tj5tzfPE9ASYpo60jyKYdWPziUE=\", false, function () {\n  return [usePlayerContext];\n});\n_c = Game;\nexport default Game;\nconst boardStyle = {\n  border: \"10px solid #868BAC\",\n  boxShadow: `0 5px 15px rgba(0, 0, 0, 0.5)`,\n  \"border-radius\": \"5px\",\n  position: \"relative\",\n  left: \"5%\"\n};\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["Chessboard","Chess","useState","useEffect","useRef","SettingButton","Logo","GameWrapper","RoomCode","RoomCodeButton","TeamName","GameplaySection","NonChessboard","TeamSection","Teams","Ratings","Gameover","GameControls","CountdownTimer","usePlayerContext","begin_game_handler","next_turn_handler","room_joined_handler","timer_handler","update_teams_handler","sendRating","squareStyling","console","log","engine","Worker","game","Game","fen","setFen","turn","setTurn","gameStarted","setGameStarted","canSubmitMove","setCanSubmitMove","whiteTurn","setWhiteTurn","isCheckmate","setIsCheckmate","timeOut","setTimeOut","whiteTime","setWhiteTime","blackTime","setBlackTime","whiteTeam","setWhiteTeam","Map","blackTeam","setBlackTeam","history","setHistory","squareStyles","setSquareStyles","proposedMove","target","source","socket","roomCode","setRoomCode","host","isWhite","setIsWhite","username","removeAllListeners","engineGame","evalMove","postMessage","current","onmessage","event","line","data","substring","score","indexOf","start","onDrop","sourceSquare","targetSquare","move","from","to","Promise","resolve","then","boardStyle","screen","Math","min","screenHeight","screenWidth","width","height","display","color","justifyContent","alignItems","margin","border","boxShadow","position","left"],"sources":["/Users/lawrence/Documents/Projects/theWeakestLink/client/src/main_pages/gameFunctional.js"],"sourcesContent":["import Chessboard from \"chessboardjsx\";\nimport { Chess } from \"chess.js\";\nimport { useState, useEffect, useRef } from \"react\";\nimport { SettingButton } from \"../styled_components/settingButton\";\nimport { Logo } from \"../styled_components\"\nimport { GameWrapper, RoomCode as RoomCodeButton, TeamName, GameplaySection, NonChessboard } from \"../styled_components/gameComponents\"\nimport { TeamSection } from \"../styled_components/gameComponents\";\nimport { Teams, Ratings, Gameover } from \"../items/display_components.js\";\nimport { GameControls } from \"../items/interactive_components\";\nimport { CountdownTimer } from \"../items/client_clock.js\";\nimport { usePlayerContext } from '../contexts/PlayerContext';\nimport {\n  begin_game_handler, next_turn_handler, room_joined_handler,\n  timer_handler, update_teams_handler\n} from \"../handlers/socket_handlers.js\";\nimport { sendRating, squareStyling } from \"../handlers/helpers.js\"\n\nconsole.log(\"Game functional loaded\")\n\nconst engine = new Worker(\"stockfish.js\");\nconst game = new Chess();\n\nconst Game = () => {\n  const [fen, setFen] = useState(\"start\");\n  const [turn, setTurn] = useState(false);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [canSubmitMove, setCanSubmitMove] = useState(false);\n  const [whiteTurn, setWhiteTurn] = useState(false);\n  const [isCheckmate, setIsCheckmate] = useState(false);\n  const [timeOut, setTimeOut] = useState(false);\n  const [whiteTime, setWhiteTime] = useState(50);\n  const [blackTime, setBlackTime] = useState(50);\n  const [whiteTeam, setWhiteTeam] = useState(new Map());\n  const [blackTeam, setBlackTeam] = useState(new Map());\n  const [history, setHistory] = useState([]);\n  const [squareStyles, setSquareStyles] = useState({});\n  const proposedMove = useRef(\"\");\n  const target = useRef(\"\");\n  const source = useRef(\"\");\n\n\n  const { socket,\n    roomCode,\n    setRoomCode,\n    host,\n    isWhite,\n    setIsWhite,\n    username,\n  } = usePlayerContext();\n\n  // core logic handler mounts\n  useEffect(() => {\n    room_joined_handler(socket, setRoomCode, setIsWhite);\n\n    next_turn_handler(socket, game, setFen, setIsCheckmate, setGameStarted,\n      setWhiteTurn, setTurn, isWhite, setCanSubmitMove, roomCode, setHistory, setSquareStyles);\n\n    update_teams_handler(socket, setWhiteTeam, setBlackTeam);\n\n    begin_game_handler(socket, game, setWhiteTurn, setGameStarted, setFen, setIsCheckmate,\n      setTimeOut, isWhite, setTurn, setCanSubmitMove, setSquareStyles);\n\n    timer_handler(socket, setGameStarted, setTimeOut, setTurn, setCanSubmitMove, roomCode, setWhiteTime, setBlackTime);\n\n    return () => {\n      socket.removeAllListeners();\n    }\n\n  }, [isWhite, roomCode, setIsWhite, setRoomCode, socket]);\n\n  \n\n  const engineGame = () => {\n  \n    const evalMove = () => {\n      engine.postMessage(\"ucinewgame\");\n      console.log(\"proposedMove.current:\" + proposedMove.current)\n      engine.postMessage(\"position fen \" + proposedMove.current);\n      engine.postMessage(\"go depth 5\")\n\n      // engine.postMessage(\"eval\");\n      // if (!game.isGameOver()) {\n      //   engine.postMessage(\"ucinewgame\");\n      //   console.log(\"proposedMove.current:\" + proposedMove.current)\n      //   engine.postMessage(\"position fen \" + proposedMove.current);\n      //   engine.postMessage(\"eval\");\n      // }\n    };\n  \n    engine.onmessage = (event) => {\n      let line;\n      console.log(\"trigger\")\n  \n      if (event && typeof event === \"object\") {\n        line = event.data;\n      } else {\n        line = event;\n      }\n      console.log(line);\n      if (line.substring(0, 8) === \"bestmove\") {\n\n        let score = line.substring(line.indexOf(\"score\")+6);\n        console.log(score)\n        // if (!isWhite) score = score * -1;\n        sendRating(socket, score, proposedMove.current, roomCode, isWhite, username, target, source);\n      }\n    };\n  \n    return {\n      start: function () {\n        console.log(\"starting\")\n        engine.postMessage(\"ucinewgame\");\n        engine.postMessage(\"isready\");\n        // announced_game_over = false;\n      },\n      evalMove: function () {\n        evalMove();\n      },\n    };\n  };\n\n  const onDrop = ({ sourceSquare, targetSquare }) => {\n\n    if (!turn || !canSubmitMove) return;\n    const move = game.move({ from: sourceSquare, to: targetSquare })\n    if (move === null) return; // illegal move  \n    console.log(game.fen());\n    // grab player proposed position and show it\n    proposedMove.current = game.fen();\n    target.current = targetSquare;\n    source.current = sourceSquare\n    setFen(proposedMove.current);\n    setCanSubmitMove(false);\n\n    // game.undo();\n\n    // highlight the move made\n    setSquareStyles(squareStyling(sourceSquare, targetSquare));\n\n    return new Promise((resolve) => {\n      resolve();\n    }).then(() => engineGame().evalMove());\n  };\n\n  return (\n\n    <GameWrapper>\n      <Chessboard\n        id=\"board!\"\n        position={fen}\n        onDrop={onDrop}\n        boardStyle={boardStyle}\n        orientation={isWhite ? \"white\" : \"black\"}\n        calcWidth={(screen) => Math.min(screen.screenHeight * .9, screen.screenWidth * .53)}\n        squareStyles={squareStyles}\n      />\n\n      <NonChessboard>\n\n        <Logo style={{ width: \"50%\", height: \"auto\" }}></Logo>\n\n          <div style={{ display: \"flex\", \"flex-flow\": \"row wrap\", \"justify-content\": \"center\", height: \"fit-content\", width: \"100%\", \"margin-top\": \"17%\" }}>\n            <TeamSection>\n              <TeamName color=\"white\">WHITE</TeamName>\n              <Teams team={whiteTeam} isWhite={true} gameStarted={gameStarted} />\n            </TeamSection>\n            <TeamSection>\n              <TeamName>BLACK</TeamName>\n              <Teams team={blackTeam} isWhite={false} gameStarted={gameStarted} />\n            </TeamSection>\n          </div>\n\n\n          <Ratings team={isWhite ? whiteTeam : blackTeam} gameStarted={gameStarted} />\n\n          {!gameStarted && <GameControls socket={socket} roomCode={roomCode} host={host}\n            isWhite={isWhite} username={username} setIsWhite={setIsWhite} />}\n\n          <h1 style={{ color: \"#FFFFFF\" }}>{turn ? \"Your\" : \"Not Your\"} Turn</h1>\n          <h1 style={{ color: \"#FFFFFF\" }}>\n            <Gameover isCheckmate={isCheckmate} timeOut={timeOut} whiteTurn={whiteTurn} />\n          </h1>\n\n          <div style={{ display: \"flex\", height: \"8%\", width: \"30%\", justifyContent: \"center\", alignItems: \"center\" }}>\n            <CountdownTimer totalSeconds={whiteTime} isRunning={(whiteTurn && gameStarted)} />\n            <CountdownTimer totalSeconds={blackTime} isRunning={(!whiteTurn && gameStarted)} />\n          </div>\n        \n\n        <section id=\"footer\" style={{ display: \"flex\", width: \"100%\", margin: \"0 0 34px 34px\", 'justify-content': 'start' }}>\n          <SettingButton setWhiteTime={setWhiteTime} setBlackTime={setBlackTime} socket={socket} />\n          <RoomCodeButton>ROOM: {roomCode}</RoomCodeButton>\n        </section>\n\n      </NonChessboard>\n\n    </GameWrapper>\n\n\n  );\n}\n\nexport default Game;\n\nconst boardStyle = {\n  border: \"10px solid #868BAC\",\n  boxShadow: `0 5px 15px rgba(0, 0, 0, 0.5)`,\n  \"border-radius\": \"5px\",\n  position: \"relative\",\n  left: \"5%\"\n};\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}