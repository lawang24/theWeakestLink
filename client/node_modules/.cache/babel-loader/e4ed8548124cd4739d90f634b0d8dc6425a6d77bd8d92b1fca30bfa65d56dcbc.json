{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\catas\\\\Desktop\\\\Basic Chess Game\\\\client\\\\src\\\\components\\\\game.js\";\nimport Chessboard from \"chessboardjsx\";\nimport { React, Component } from \"react\";\nimport styled from \"styled-components\";\nimport { Logo, SettingButton } from \"../StyledComponents\";\nimport { GameWrapper, RoomCode, TeamButton, TeamName, TeamsStyled } from \"../StyledComponents/gameComponents\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst STOCKFISH = window.STOCKFISH;\nconst Teams = _ref => {\n  let {\n    players,\n    isWhite\n  } = _ref;\n  const team = isWhite ? 0 : 1;\n  const color = isWhite ? \"#FFFFFF\" : \"#000000\";\n  if (Object.keys(players).length === 0) return;else return /*#__PURE__*/_jsxDEV(\"ul\", {\n    style: {\n      color: {\n        color\n      }\n    },\n    children: players[team].map((player, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [\" \", player, \" \"]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 39\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 4\n  }, this);\n};\n_c = Teams;\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n    this.sendRating = (rating, position) => {\n      this.props.socket.emit(\"send_rating\", rating, position, this.props.roomCode, this.props.isWhite);\n    };\n    this.changeTeam = desiredTeam => {\n      if (desiredTeam !== this.props.isWhite) {\n        this.props.socket.emit(\"change_team\", this.props.isWhite, this.props.roomCode, this.props.username);\n        this.props.setisWhite(desiredTeam);\n      }\n    };\n    this.onDrop = _ref2 => {\n      let {\n        sourceSquare,\n        targetSquare\n      } = _ref2;\n      if (!this.state.turn) return;\n      const move = this.props.game.move({\n        from: sourceSquare,\n        to: targetSquare\n      });\n      if (move === null) return; // illegal move  \n\n      // grab player proposed position and show it\n      this.setState({\n        fen: this.props.game.fen()\n      });\n      this.props.game.undo();\n      return new Promise(resolve => {\n        resolve();\n      }).then(() => this.engineGame().evalMove());\n    };\n    this.engineGame = options => {\n      options = options || {};\n\n      /// We can load Stockfish via Web Workers or via STOCKFISH() if loaded from a <script> tag.\n      let engine = typeof STOCKFISH === \"function\" ? STOCKFISH() : new Worker(options.stockfishjs || \"stockfish.js\");\n      let announced_game_over;\n      setInterval(() => {\n        if (announced_game_over) {\n          return;\n        }\n        if (this.props.game.isGameOver()) {\n          announced_game_over = true;\n        }\n      }, 500);\n      const evalMove = () => {\n        if (!this.props.game.isGameOver()) {\n          engine.postMessage(\"ucinewgame\");\n          engine.postMessage(\"position fen \" + this.state.fen);\n          engine.postMessage(\"eval\");\n        }\n      };\n      engine.onmessage = event => {\n        let line;\n        if (event && typeof event === \"object\") {\n          line = event.data;\n        } else {\n          line = event;\n        }\n        if (line.substr(0, \"Total Evaluation\".length) === \"Total Evaluation\") {\n          let score = parseFloat(line.substr(18).substr(0, 4));\n          if (this.state.team === \"black\") score = score * -1;\n          this.sendRating(score, this.state.fen);\n        }\n      };\n      return {\n        start: function () {\n          engine.postMessage(\"ucinewgame\");\n          engine.postMessage(\"isready\");\n          announced_game_over = false;\n        },\n        evalMove: function () {\n          evalMove();\n        }\n      };\n    };\n    this.state = {\n      fen: \"start\",\n      turn: false,\n      players: {}\n    };\n  }\n  componentDidMount() {\n    this.props.socket.on(\"weakest_position\", weakest => {\n      this.setState({\n        fen: weakest\n      });\n      this.props.game.load(weakest);\n    });\n    this.props.socket.on(\"nextTurn\", isWhiteTurn => {\n      if (this.props.isWhite) this.setState({\n        turn: isWhiteTurn\n      });else this.setState({\n        turn: !isWhiteTurn\n      });\n    });\n    this.props.socket.on(\"update_players\", teams => {\n      let newTeams = JSON.parse(teams);\n      this.setState({\n        players: newTeams\n      }); // it is this one\n    });\n  }\n\n  render() {\n    let status = this.state.turn ? \"Your\" : \"Not Your\";\n    const startGame = isHost => {\n      if (isHost) return /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.props.socket.emit(\"start_game\"),\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 27\n      }, this);\n    };\n    let team = this.props.isWhite ? \"white\" : \"black\";\n    return /*#__PURE__*/_jsxDEV(GameWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(Chessboard, {\n        id: \"board!\",\n        position: this.state.fen,\n        onDrop: this.onDrop,\n        boardStyle: boardStyle,\n        orientation: team,\n        calcWidth: screen => screen.screenHeight * .9\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          \"flex-direction\": 'column',\n          \"justify-content\": \"space-between\",\n          height: \"100vh\",\n          width: \"33vw\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Logo, {\n          style: {\n            width: \"50%\",\n            height: \"auto\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          id: \"gameplay\",\n          style: {\n            \"display\": \"flex\",\n            \"flex-flow\": \"column\",\n            \"justify-content\": \"center\",\n            \"align-items\": \"center\",\n            height: \"70vh\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              \"flex-flow\": \"row wrap\",\n              \"justify-content\": \"center\",\n              width: \"50%\",\n              height: \"25%\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(TeamName, {\n              color: \"white\",\n              children: \"WHITE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TeamName, {\n              children: \"BLACK\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TeamButton, {\n              team: \"white\",\n              onClick: e => this.changeTeam(true),\n              children: \"JOIN\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TeamButton, {\n              onClick: e => this.changeTeam(false),\n              children: \"JOIN\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: startGame(this.props.host)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [this.props.isWhite ? \"White\" : \"Black\", \" Player\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [status, \" Turn \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Teams, {\n            players: this.state.players,\n            isWhite: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          id: \"footer\",\n          style: {\n            display: \"flex\",\n            width: \"100%\",\n            margin: \"0 0 34px 34px\",\n            'justify-content': 'start'\n          },\n          children: [/*#__PURE__*/_jsxDEV(SettingButton, {\n            style: {\n              height: \"48px\",\n              width: \"48px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(RoomCode, {\n            children: [\"ROOM: \", this.props.roomCode]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Game;\nconst boardStyle = {\n  border: \"10px solid #868BAC\",\n  boxShadow: `0 5px 15px rgba(0, 0, 0, 0.5)`,\n  \"border-radius\": \"5px\",\n  position: \"relative\",\n  left: \"5%\"\n};\nvar _c;\n$RefreshReg$(_c, \"Teams\");","map":{"version":3,"names":["Chessboard","React","Component","styled","Logo","SettingButton","GameWrapper","RoomCode","TeamButton","TeamName","TeamsStyled","STOCKFISH","window","Teams","players","isWhite","team","color","Object","keys","length","map","player","i","Game","constructor","props","sendRating","rating","position","socket","emit","roomCode","changeTeam","desiredTeam","username","setisWhite","onDrop","sourceSquare","targetSquare","state","turn","move","game","from","to","setState","fen","undo","Promise","resolve","then","engineGame","evalMove","options","engine","Worker","stockfishjs","announced_game_over","setInterval","isGameOver","postMessage","onmessage","event","line","data","substr","score","parseFloat","start","componentDidMount","on","weakest","load","isWhiteTurn","teams","newTeams","JSON","parse","render","status","startGame","isHost","boardStyle","screen","screenHeight","display","height","width","e","host","margin","border","boxShadow","left"],"sources":["C:/Users/catas/Desktop/Basic Chess Game/client/src/components/game.js"],"sourcesContent":["import Chessboard from \"chessboardjsx\";\r\nimport { React, Component } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Logo, SettingButton } from \"../StyledComponents\"\r\nimport {GameWrapper,RoomCode,TeamButton,TeamName,TeamsStyled} from \"../StyledComponents/gameComponents\"\r\n\r\nconst STOCKFISH = window.STOCKFISH;\r\n\r\nconst Teams = ({players,isWhite}) =>{\r\n  const team = isWhite? 0:1;\r\n  const color = isWhite? \"#FFFFFF\": \"#000000\";\r\n\r\n if (Object.keys(players).length === 0) return;\r\n else return(\r\n   <ul style={{color:{color}}}>\r\n     {players[team].map((player,i) => <li key = {i}> {player} </li>)}\r\n   </ul>\r\n )\r\n}\r\n\r\nclass Game extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      fen: \"start\",\r\n      turn: false,\r\n      players: {}\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.socket.on(\"weakest_position\", (weakest) => {\r\n      this.setState({ fen: weakest });\r\n      this.props.game.load(weakest);\r\n    });\r\n    this.props.socket.on(\"nextTurn\", (isWhiteTurn) => {\r\n      if (this.props.isWhite) this.setState({ turn: isWhiteTurn });\r\n      else this.setState({ turn: !isWhiteTurn });\r\n    });\r\n    this.props.socket.on(\"update_players\", (teams) => {\r\n      let newTeams = JSON.parse(teams);\r\n      this.setState({ players: newTeams }); // it is this one\r\n    });\r\n  };\r\n\r\n  sendRating = (rating, position) => {\r\n    this.props.socket.emit(\"send_rating\", rating, position, this.props.roomCode, this.props.isWhite );\r\n  };\r\n\r\n  changeTeam = (desiredTeam) => {\r\n    if (desiredTeam !== this.props.isWhite) {\r\n      this.props.socket.emit(\"change_team\", this.props.isWhite, this.props.roomCode, this.props.username);\r\n      this.props.setisWhite(desiredTeam)\r\n    }\r\n  }\r\n\r\n  onDrop = ({ sourceSquare, targetSquare }) => {\r\n    if (!this.state.turn) return;\r\n    const move = this.props.game.move({ from: sourceSquare, to: targetSquare })\r\n    if (move === null) return; // illegal move  \r\n\r\n    // grab player proposed position and show it\r\n    this.setState({ fen: this.props.game.fen() })\r\n\r\n    this.props.game.undo();\r\n\r\n    return new Promise((resolve) => {\r\n      resolve();\r\n    }).then(() => this.engineGame().evalMove());\r\n  };\r\n\r\n  engineGame = (options) => {\r\n    options = options || {};\r\n\r\n    /// We can load Stockfish via Web Workers or via STOCKFISH() if loaded from a <script> tag.\r\n    let engine =\r\n      typeof STOCKFISH === \"function\"\r\n        ? STOCKFISH()\r\n        : new Worker(options.stockfishjs || \"stockfish.js\");\r\n    let announced_game_over;\r\n\r\n    setInterval(() => {\r\n      if (announced_game_over) {\r\n        return;\r\n      }\r\n      if (this.props.game.isGameOver()) {\r\n        announced_game_over = true;\r\n      }\r\n    }, 500);\r\n\r\n    const evalMove = () => {\r\n      if (!this.props.game.isGameOver()) {\r\n        engine.postMessage(\"ucinewgame\");\r\n        engine.postMessage(\"position fen \" + this.state.fen);\r\n        engine.postMessage(\"eval\");\r\n      }\r\n    };\r\n\r\n    engine.onmessage = (event) => {\r\n      let line;\r\n\r\n      if (event && typeof event === \"object\") {\r\n        line = event.data;\r\n      } else {\r\n        line = event;\r\n      }\r\n      if (line.substr(0, \"Total Evaluation\".length) === \"Total Evaluation\") {\r\n        let score = parseFloat(line.substr(18).substr(0, 4));\r\n        if (this.state.team === \"black\") score = score * -1;\r\n        this.sendRating(score, this.state.fen);\r\n      }\r\n    };\r\n\r\n    return {\r\n      start: function () {\r\n        engine.postMessage(\"ucinewgame\");\r\n        engine.postMessage(\"isready\");\r\n        announced_game_over = false;\r\n      },\r\n      evalMove: function () {\r\n        evalMove();\r\n      },\r\n    };\r\n  };\r\n\r\n\r\n  render() {\r\n\r\n    let status = (this.state.turn ? \"Your\" : \"Not Your\")\r\n\r\n    const startGame = (isHost) => {\r\n      if (isHost) return (<button onClick={()=>this.props.socket.emit(\"start_game\")}>Start</button>);\r\n    }\r\n\r\n    let team = this.props.isWhite ? \"white\" : \"black\"\r\n\r\n    return (\r\n      <GameWrapper>\r\n        <Chessboard\r\n          id=\"board!\"\r\n          position={this.state.fen}\r\n          onDrop={this.onDrop}\r\n          boardStyle={boardStyle}\r\n          orientation={team}\r\n          calcWidth={(screen) => screen.screenHeight * .9}\r\n        />\r\n\r\n        <div style={{ display: \"flex\", \"flex-direction\": 'column', \"justify-content\": \"space-between\", height: \"100vh\", width: \"33vw\" }}>\r\n\r\n          <Logo style={{ width: \"50%\", height: \"auto\" }}></Logo>\r\n\r\n\r\n          <section id=\"gameplay\" style={{\r\n            \"display\": \"flex\", \"flex-flow\": \"column\", \"justify-content\": \"center\", \"align-items\": \"center\", height: \"70vh\"\r\n          }}>\r\n            <div style={{ display: \"flex\", \"flex-flow\": \"row wrap\", \"justify-content\": \"center\", width: \"50%\", height: \"25%\" }}>\r\n              <TeamName color=\"white\">WHITE</TeamName>\r\n              <TeamName>BLACK</TeamName>\r\n              <TeamButton team=\"white\" onClick={e => this.changeTeam(true)} >JOIN</TeamButton>\r\n              <TeamButton onClick={e => this.changeTeam(false)} >JOIN</TeamButton>\r\n            </div>\r\n            <div>{startGame(this.props.host)}</div>\r\n            <h1>{this.props.isWhite ? \"White\" : \"Black\"} Player</h1>\r\n            <h1>{status} Turn </h1>\r\n            <Teams players = {this.state.players} isWhite = {true}/>\r\n          </section>\r\n\r\n          <section id=\"footer\" style={{ display: \"flex\", width: \"100%\", margin: \"0 0 34px 34px\", 'justify-content': 'start' }}>\r\n            <SettingButton style={{ height: \"48px\", width: \"48px\", }}></SettingButton>\r\n            <RoomCode>ROOM: {this.props.roomCode}</RoomCode>\r\n          </section>\r\n\r\n        </div>\r\n      </GameWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Game;\r\n\r\nconst boardStyle = {\r\n  border: \"10px solid #868BAC\",\r\n  boxShadow: `0 5px 15px rgba(0, 0, 0, 0.5)`,\r\n  \"border-radius\": \"5px\",\r\n  position: \"relative\",\r\n  left: \"5%\"\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}