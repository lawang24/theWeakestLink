{"ast":null,"code":"import _slicedToArray from\"C:/Users/catas/Desktop/Basic Chess Game/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import Chessboard from\"chessboardjsx\";import{useState,useEffect}from\"react\";import{Logo,SettingButton}from\"../StyledComponents\";import{GameWrapper,RoomCode as RoomCodeButton,ChangeTeam,TeamName,StartGame,GameplaySection}from\"../StyledComponents/gameComponents\";import{TeamSection}from\"../StyledComponents/gameComponents\";import{Chess}from\"chess.js\";import{Teams,Ratings,CountdownTimer}from\"../items/displayItems\";import{usePlayerContext}from'../contexts/PlayerContext';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var STOCKFISH=window.STOCKFISH;var game=new Chess();var Game=function Game(){var _useState=useState(\"start\"),_useState2=_slicedToArray(_useState,2),fen=_useState2[0],setFen=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),turn=_useState4[0],setTurn=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),gameStarted=_useState6[0],setGameStarted=_useState6[1];var _useState7=useState({}),_useState8=_slicedToArray(_useState7,2),players=_useState8[0],setPlayers=_useState8[1];var _useState9=useState({}),_useState10=_slicedToArray(_useState9,2),scorecard=_useState10[0],setScorecard=_useState10[1];var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),canSubmitMove=_useState12[0],setCanSubmitMove=_useState12[1];var _useState13=useState(false),_useState14=_slicedToArray(_useState13,2),whiteTurn=_useState14[0],setWhiteTurn=_useState14[1];var _useState15=useState(false),_useState16=_slicedToArray(_useState15,2),isCheckmate=_useState16[0],setIsCheckmate=_useState16[1];var _useState17=useState(false),_useState18=_slicedToArray(_useState17,2),timeOut=_useState18[0],setTimeOut=_useState18[1];var _useState19=useState([]),_useState20=_slicedToArray(_useState19,2),ratings=_useState20[0],setRatings=_useState20[1];var _useState21=useState(600),_useState22=_slicedToArray(_useState21,2),whiteTime=_useState22[0],setWhiteTime=_useState22[1];var _useState23=useState(600),_useState24=_slicedToArray(_useState23,2),blackTime=_useState24[0],setBlackTime=_useState24[1];var _usePlayerContext=usePlayerContext(),socket=_usePlayerContext.socket,roomCode=_usePlayerContext.roomCode,setRoomCode=_usePlayerContext.setRoomCode,host=_usePlayerContext.host,isWhite=_usePlayerContext.isWhite,setIsWhite=_usePlayerContext.setIsWhite,username=_usePlayerContext.username;var proposedMove;useEffect(function(){socket.on(\"room_joined\",function(roomCode,isWhite){setRoomCode(roomCode);setIsWhite(isWhite);});socket.on(\"nextTurn\",function(weakest,isWhiteTurn,ratings,scorecard){console.log(weakest);console.log(scorecard);setFen(weakest);setScorecard(scorecard);game.load(weakest);// if no longer your turn, update last turn's ratings so you can see who's the bum\nif(isWhite!==isWhiteTurn)setRatings(ratings);// check if checkmate\nif(game.isCheckmate()===true){setGameStarted(false);setIsCheckmate(true);}else{setWhiteTurn(function(whiteTurn){return!whiteTurn;});setTurn(function(turn){return!turn;});if(isWhite===isWhiteTurn)setCanSubmitMove(true);}});socket.on(\"update_players\",function(teams){setPlayers(JSON.parse(teams));});socket.on(\"begin_game\",function(scorecard){var Scorecard=JSON.parse(scorecard);setWhiteTurn(true);setGameStarted(true);setScorecard(Scorecard);setFen(\"start\");setIsCheckmate(false);setTimeOut(false);setWhiteTime(600);setBlackTime(600);if(isWhite){setTurn(true);setCanSubmitMove(true);}game.reset();// restart the game\n});socket.on(\"time_out\",function(){setGameStarted(false);setTimeOut(true);});socket.on(\"update_timer\",function(timer){setWhiteTime(timer[0]);setBlackTime(timer[1]);});return function(){socket.removeAllListeners();};},[isWhite,setIsWhite,setRoomCode,socket]);// send the client's rating to the server\nvar sendRating=function sendRating(rating,position){socket.emit(\"send_rating\",rating,position,roomCode,isWhite,username);};var changeTeam=function changeTeam(){console.log(roomCode);socket.emit(\"change_team\",isWhite,roomCode,username);setIsWhite(function(isWhite){return!isWhite;});};var onDrop=function onDrop(_ref){var sourceSquare=_ref.sourceSquare,targetSquare=_ref.targetSquare;if(!turn||!canSubmitMove)return;var move=game.move({from:sourceSquare,to:targetSquare});if(move===null)return;// illegal move  \nconsole.log(game.fen());// grab player proposed position and show it\nproposedMove=game.fen();setFen(proposedMove);setCanSubmitMove(false);game.undo();return new Promise(function(resolve){resolve();}).then(function(){return engineGame().evalMove();});};var engineGame=function engineGame(options){options=options||{};/// We can load Stockfish via Web Workers or via STOCKFISH() if loaded from a <script> tag.\nvar engine=typeof STOCKFISH===\"function\"?STOCKFISH():new Worker(options.stockfishjs||\"stockfish.js\");//let announced_game_over;\n// setInterval(() => {\n//   if (announced_game_over) {\n//     return;\n//   }\n//   if (game.isGameOver()) {\n//     announced_game_over = true;\n//   }\n// }, 500);\nvar _evalMove=function evalMove(){if(!game.isGameOver()){engine.postMessage(\"ucinewgame\");console.log(\"proposedMove:\"+proposedMove);engine.postMessage(\"position fen \"+proposedMove);engine.postMessage(\"eval\");}};engine.onmessage=function(event){var line;if(event&&typeof event===\"object\"){line=event.data;}else{line=event;}if(line.substr(0,\"Total Evaluation\".length)===\"Total Evaluation\"){var score=parseFloat(line.substr(18).substr(0,4));if(!isWhite)score=score*-1;sendRating(score,proposedMove);}};return{start:function start(){engine.postMessage(\"ucinewgame\");engine.postMessage(\"isready\");// announced_game_over = false;\n},evalMove:function evalMove(){_evalMove();}};};// increment_whitetime = (time) => {\n//   this.setState( {white_time : time } ) \n// }\n// increment_blacktime = () => {\n//   this.setState((state) => ({\n//     black_time: state.black_time - 1\n//   }));\n// };\nvar StartGameButton=function StartGameButton(){if(host)return/*#__PURE__*/_jsx(StartGame,{onClick:function onClick(){return socket.emit(\"start_game\",roomCode);},children:\"START\"});};var GameControls=function GameControls(){if(!gameStarted){return/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",justifyContent:\"space-evenly\",width:\"70%\",height:\"9%\"},children:[/*#__PURE__*/_jsx(StartGameButton,{}),/*#__PURE__*/_jsx(ChangeTeam,{team:\"white\",onClick:function onClick(e){return changeTeam(true);},children:\"CHANGE TEAM\"})]});}};var Gameover=function Gameover(){if(isCheckmate){return/*#__PURE__*/_jsx(\"div\",{children:\"CHECKMATE BUCKO\"});}else if(timeOut){return/*#__PURE__*/_jsxs(\"div\",{children:[isWhite?\"WHITE\":\"BLACK\",\" WINS ON TIME\"]});}};return/*#__PURE__*/_jsxs(GameWrapper,{children:[/*#__PURE__*/_jsx(Chessboard,{id:\"board!\",position:fen,onDrop:onDrop,boardStyle:boardStyle,orientation:isWhite?\"white\":\"black\",calcWidth:function calcWidth(screen){return Math.min(screen.screenHeight*.9,screen.screenWidth*.53);}}),/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",\"flex-direction\":'column',\"justify-content\":\"space-between\",height:\"100vh\",width:\"33vw\"},children:[/*#__PURE__*/_jsx(Logo,{style:{width:\"50%\",height:\"auto\"}}),/*#__PURE__*/_jsxs(GameplaySection,{children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",\"flex-flow\":\"row wrap\",\"justify-content\":\"center\",height:\"fit-content\",width:\"100%\",\"margin-top\":\"17%\"},children:[/*#__PURE__*/_jsxs(TeamSection,{children:[/*#__PURE__*/_jsx(TeamName,{color:\"white\",children:\"WHITE\"}),/*#__PURE__*/_jsx(Teams,{players:players,isWhite:true,scorecard:scorecard,gameStarted:gameStarted})]}),/*#__PURE__*/_jsxs(TeamSection,{children:[/*#__PURE__*/_jsx(TeamName,{children:\"BLACK\"}),/*#__PURE__*/_jsx(Teams,{players:players,isWhite:false,scorecard:scorecard,gameStarted:gameStarted})]})]}),/*#__PURE__*/_jsx(Ratings,{ratings:ratings}),/*#__PURE__*/_jsx(GameControls,{gameStarted:gameStarted}),/*#__PURE__*/_jsxs(\"h1\",{style:{color:\"#FFFFFF\"},children:[turn?\"Your\":\"Not Your\",\" Turn\"]}),/*#__PURE__*/_jsx(\"h1\",{style:{color:\"#FFFFFF\"},children:/*#__PURE__*/_jsx(Gameover,{})}),/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",height:\"8%\",width:\"30%\",justifyContent:\"center\",alignItems:\"center\"},children:[/*#__PURE__*/_jsx(CountdownTimer,{totalSeconds:whiteTime,isRunning:whiteTurn}),/*#__PURE__*/_jsx(CountdownTimer,{totalSeconds:blackTime,isRunning:!whiteTurn&&gameStarted})]})]}),/*#__PURE__*/_jsxs(\"section\",{id:\"footer\",style:{display:\"flex\",width:\"100%\",margin:\"0 0 34px 34px\",'justify-content':'start'},children:[/*#__PURE__*/_jsx(SettingButton,{style:{height:\"48px\",width:\"48px\"}}),/*#__PURE__*/_jsxs(RoomCodeButton,{children:[\"ROOM: \",roomCode]})]})]})]});};export default Game;var boardStyle={border:\"10px solid #868BAC\",boxShadow:\"0 5px 15px rgba(0, 0, 0, 0.5)\",\"border-radius\":\"5px\",position:\"relative\",left:\"5%\"};","map":{"version":3,"names":["Chessboard","useState","useEffect","Logo","SettingButton","GameWrapper","RoomCode","RoomCodeButton","ChangeTeam","TeamName","StartGame","GameplaySection","TeamSection","Chess","Teams","Ratings","CountdownTimer","usePlayerContext","STOCKFISH","window","game","Game","fen","setFen","turn","setTurn","gameStarted","setGameStarted","players","setPlayers","scorecard","setScorecard","canSubmitMove","setCanSubmitMove","whiteTurn","setWhiteTurn","isCheckmate","setIsCheckmate","timeOut","setTimeOut","ratings","setRatings","whiteTime","setWhiteTime","blackTime","setBlackTime","socket","roomCode","setRoomCode","host","isWhite","setIsWhite","username","proposedMove","on","weakest","isWhiteTurn","console","log","load","teams","JSON","parse","Scorecard","reset","timer","removeAllListeners","sendRating","rating","position","emit","changeTeam","onDrop","sourceSquare","targetSquare","move","from","to","undo","Promise","resolve","then","engineGame","evalMove","options","engine","Worker","stockfishjs","isGameOver","postMessage","onmessage","event","line","data","substr","length","score","parseFloat","start","StartGameButton","GameControls","display","justifyContent","width","height","e","Gameover","boardStyle","screen","Math","min","screenHeight","screenWidth","color","alignItems","margin","border","boxShadow","left"],"sources":["C:/Users/catas/Desktop/Basic Chess Game/client/src/pages/gameFunctional.js"],"sourcesContent":["import Chessboard from \"chessboardjsx\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Logo, SettingButton } from \"../StyledComponents\"\r\nimport { GameWrapper, RoomCode as RoomCodeButton, ChangeTeam, TeamName, StartGame, GameplaySection } from \"../StyledComponents/gameComponents\"\r\nimport { TeamSection } from \"../StyledComponents/gameComponents\";\r\nimport { Chess } from \"chess.js\";\r\nimport { Teams, Ratings, CountdownTimer } from \"../items/displayItems\";\r\nimport { usePlayerContext } from '../contexts/PlayerContext';\r\n\r\nconst STOCKFISH = window.STOCKFISH;\r\nconst game = new Chess();\r\n\r\nconst Game = () => {\r\n  const [fen, setFen] = useState(\"start\");\r\n  const [turn, setTurn] = useState(false);\r\n  const [gameStarted, setGameStarted] = useState(false);\r\n  const [players, setPlayers] = useState({});\r\n  const [scorecard, setScorecard] = useState({});\r\n  const [canSubmitMove, setCanSubmitMove] = useState(false);\r\n  const [whiteTurn, setWhiteTurn] = useState(false);\r\n  const [isCheckmate, setIsCheckmate] = useState(false);\r\n  const [timeOut, setTimeOut] = useState(false);\r\n  const [ratings, setRatings] = useState([]);\r\n  const [whiteTime, setWhiteTime] = useState(600);\r\n  const [blackTime, setBlackTime] = useState(600);\r\n\r\n  const { socket,\r\n    roomCode,\r\n    setRoomCode,\r\n    host,\r\n    isWhite,\r\n    setIsWhite,\r\n    username,\r\n  } = usePlayerContext();\r\n\r\n  let proposedMove;\r\n\r\n  useEffect(() => {\r\n\r\n    socket.on(\"room_joined\", (roomCode, isWhite) => {\r\n      setRoomCode(roomCode);\r\n      setIsWhite(isWhite);\r\n    });\r\n  \r\n    socket.on(\"nextTurn\", (weakest, isWhiteTurn, ratings, scorecard) => {\r\n      console.log(weakest);\r\n      console.log(scorecard);\r\n      setFen(weakest);\r\n      setScorecard(scorecard);\r\n      game.load(weakest);\r\n\r\n      // if no longer your turn, update last turn's ratings so you can see who's the bum\r\n      if (isWhite !== isWhiteTurn) setRatings(ratings);\r\n\r\n      // check if checkmate\r\n      if (game.isCheckmate() === true) {\r\n        setGameStarted(false);\r\n        setIsCheckmate(true);\r\n      } else {\r\n        setWhiteTurn((whiteTurn) => !whiteTurn);\r\n        setTurn((turn) => !turn);\r\n        if (isWhite === isWhiteTurn) setCanSubmitMove(true);\r\n      }\r\n\r\n    });\r\n\r\n    socket.on(\"update_players\", (teams) => {\r\n      setPlayers(JSON.parse(teams));\r\n    });\r\n\r\n    socket.on(\"begin_game\", (scorecard) => {\r\n      const Scorecard = JSON.parse(scorecard);\r\n      setWhiteTurn(true);\r\n      setGameStarted(true);\r\n      setScorecard(Scorecard);\r\n      setFen(\"start\");\r\n      setIsCheckmate(false);\r\n      setTimeOut(false);\r\n      setWhiteTime(600);\r\n      setBlackTime(600);\r\n\r\n      if (isWhite) {\r\n        setTurn(true);\r\n        setCanSubmitMove(true);\r\n      }\r\n\r\n      game.reset(); // restart the game\r\n    });\r\n\r\n    socket.on(\"time_out\", () => {\r\n      setGameStarted(false);\r\n      setTimeOut(true);\r\n    });\r\n\r\n    socket.on(\"update_timer\", (timer) => {\r\n      setWhiteTime(timer[0]);\r\n      setBlackTime(timer[1]);\r\n    });\r\n\r\n    return () => {\r\n      socket.removeAllListeners();\r\n    }\r\n\r\n  }, [isWhite, setIsWhite, setRoomCode, socket]);\r\n\r\n  // send the client's rating to the server\r\n  const sendRating = (rating, position) => {\r\n    socket.emit(\"send_rating\", rating, position, roomCode, isWhite, username);\r\n  };\r\n\r\n  const changeTeam = () => {\r\n    console.log(roomCode);\r\n    socket.emit(\"change_team\", isWhite, roomCode, username);\r\n    setIsWhite((isWhite) => !isWhite);\r\n  }\r\n\r\n  const onDrop =  ({ sourceSquare, targetSquare }) => {\r\n\r\n    if (!turn || !canSubmitMove) return;\r\n    const move = game.move({ from: sourceSquare, to: targetSquare })\r\n    if (move === null) return; // illegal move  \r\n    console.log(game.fen());\r\n    // grab player proposed position and show it\r\n    proposedMove = game.fen();\r\n    setFen(proposedMove);\r\n    setCanSubmitMove(false);\r\n\r\n    game.undo();\r\n\r\n    return new Promise((resolve) => {\r\n      resolve();\r\n    }).then(() => engineGame().evalMove());\r\n  };\r\n\r\n  const engineGame = (options) => {\r\n    options = options || {};\r\n\r\n    /// We can load Stockfish via Web Workers or via STOCKFISH() if loaded from a <script> tag.\r\n    let engine =\r\n      typeof STOCKFISH === \"function\"\r\n        ? STOCKFISH()\r\n        : new Worker(options.stockfishjs || \"stockfish.js\");\r\n\r\n    //let announced_game_over;\r\n\r\n    // setInterval(() => {\r\n    //   if (announced_game_over) {\r\n    //     return;\r\n    //   }\r\n    //   if (game.isGameOver()) {\r\n    //     announced_game_over = true;\r\n    //   }\r\n    // }, 500);\r\n\r\n    const evalMove = () => {\r\n      if (!game.isGameOver()) {\r\n        engine.postMessage(\"ucinewgame\");\r\n        console.log(\"proposedMove:\"+ proposedMove)\r\n        engine.postMessage(\"position fen \" + proposedMove);\r\n        engine.postMessage(\"eval\");\r\n      }\r\n    };\r\n\r\n    engine.onmessage = (event) => {\r\n      let line;\r\n\r\n      if (event && typeof event === \"object\") {\r\n        line = event.data;\r\n      } else {\r\n        line = event;\r\n      }\r\n      if (line.substr(0, \"Total Evaluation\".length) === \"Total Evaluation\") {\r\n        let score = parseFloat(line.substr(18).substr(0, 4));\r\n        if (!isWhite) score = score * -1;\r\n        sendRating(score, proposedMove);\r\n      }\r\n    };\r\n\r\n    return {\r\n      start: function () {\r\n        engine.postMessage(\"ucinewgame\");\r\n        engine.postMessage(\"isready\");\r\n       // announced_game_over = false;\r\n      },\r\n      evalMove: function () {\r\n        evalMove();\r\n      },\r\n    };\r\n  };\r\n\r\n  // increment_whitetime = (time) => {\r\n  //   this.setState( {white_time : time } ) \r\n  // }\r\n\r\n  // increment_blacktime = () => {\r\n  //   this.setState((state) => ({\r\n  //     black_time: state.black_time - 1\r\n  //   }));\r\n  // };\r\n\r\n  const StartGameButton = () => {\r\n    if (host)\r\n      return (<StartGame onClick={() => socket.emit(\"start_game\", roomCode)}>START</StartGame>);\r\n  };\r\n\r\n  const GameControls = () => {\r\n    if (!gameStarted) {\r\n      return (\r\n        <div style={{ display: \"flex\", justifyContent: \"space-evenly\", width: \"70%\", height: \"9%\" }}>\r\n          <StartGameButton />\r\n          <ChangeTeam team=\"white\" onClick={(e) => changeTeam(true)} >CHANGE TEAM</ChangeTeam>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  const Gameover = () => {\r\n    if (isCheckmate) {\r\n      return (<div>CHECKMATE BUCKO</div>)\r\n    }\r\n    else if (timeOut) {\r\n      return (<div>{isWhite ? \"WHITE\" : \"BLACK\"} WINS ON TIME</div>)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <GameWrapper>\r\n      <Chessboard\r\n        id=\"board!\"\r\n        position={fen}\r\n        onDrop={onDrop}\r\n        boardStyle={boardStyle}\r\n        orientation={isWhite ? \"white\" : \"black\"}\r\n        calcWidth={(screen) => Math.min(screen.screenHeight * .9, screen.screenWidth * .53)}\r\n      />\r\n\r\n      <div style={{ display: \"flex\", \"flex-direction\": 'column', \"justify-content\": \"space-between\", height: \"100vh\", width: \"33vw\" }}>\r\n\r\n        <Logo style={{ width: \"50%\", height: \"auto\" }}></Logo>\r\n\r\n\r\n        <GameplaySection>\r\n          <div style={{ display: \"flex\", \"flex-flow\": \"row wrap\", \"justify-content\": \"center\", height: \"fit-content\", width: \"100%\", \"margin-top\": \"17%\" }}>\r\n            <TeamSection>\r\n              <TeamName color=\"white\">WHITE</TeamName>\r\n              <Teams players={players} isWhite={true} scorecard={scorecard} gameStarted={gameStarted} />\r\n            </TeamSection>\r\n            <TeamSection>\r\n              <TeamName>BLACK</TeamName>\r\n              <Teams players={players} isWhite={false} scorecard={scorecard} gameStarted={gameStarted} />\r\n            </TeamSection>\r\n          </div>\r\n\r\n          <Ratings ratings={ratings} />\r\n\r\n          <GameControls gameStarted={gameStarted} />\r\n\r\n          <h1 style={{ color: \"#FFFFFF\" }}>{turn ? \"Your\" : \"Not Your\"} Turn</h1>\r\n          <h1 style={{ color: \"#FFFFFF\" }}>\r\n            <Gameover />\r\n          </h1>\r\n\r\n          <div style={{ display: \"flex\", height: \"8%\", width: \"30%\", justifyContent: \"center\", alignItems: \"center\" }}>\r\n            <CountdownTimer totalSeconds={whiteTime} isRunning={whiteTurn} />\r\n            <CountdownTimer totalSeconds={blackTime} isRunning={(!whiteTurn && gameStarted)} />\r\n          </div>\r\n        </GameplaySection>\r\n\r\n        <section id=\"footer\" style={{ display: \"flex\", width: \"100%\", margin: \"0 0 34px 34px\", 'justify-content': 'start' }}>\r\n          <SettingButton style={{ height: \"48px\", width: \"48px\", }}></SettingButton>\r\n          <RoomCodeButton>ROOM: {roomCode}</RoomCodeButton>\r\n        </section>\r\n\r\n      </div>\r\n    </GameWrapper>\r\n  );\r\n}\r\n\r\nexport default Game;\r\n\r\nconst boardStyle = {\r\n  border: \"10px solid #868BAC\",\r\n  boxShadow: `0 5px 15px rgba(0, 0, 0, 0.5)`,\r\n  \"border-radius\": \"5px\",\r\n  position: \"relative\",\r\n  left: \"5%\"\r\n};"],"mappings":"oIAAA,MAAOA,WAAU,KAAM,eAAe,CACtC,OAASC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC3C,OAASC,IAAI,CAAEC,aAAa,KAAQ,qBAAqB,CACzD,OAASC,WAAW,CAAEC,QAAQ,GAAIC,eAAc,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,SAAS,CAAEC,eAAe,KAAQ,oCAAoC,CAC9I,OAASC,WAAW,KAAQ,oCAAoC,CAChE,OAASC,KAAK,KAAQ,UAAU,CAChC,OAASC,KAAK,CAAEC,OAAO,CAAEC,cAAc,KAAQ,uBAAuB,CACtE,OAASC,gBAAgB,KAAQ,2BAA2B,CAAC,wFAE7D,GAAMC,UAAS,CAAGC,MAAM,CAACD,SAAS,CAClC,GAAME,KAAI,CAAG,GAAIP,MAAK,EAAE,CAExB,GAAMQ,KAAI,CAAG,QAAPA,KAAI,EAAS,CACjB,cAAsBpB,QAAQ,CAAC,OAAO,CAAC,wCAAhCqB,GAAG,eAAEC,MAAM,eAClB,eAAwBtB,QAAQ,CAAC,KAAK,CAAC,yCAAhCuB,IAAI,eAAEC,OAAO,eACpB,eAAsCxB,QAAQ,CAAC,KAAK,CAAC,yCAA9CyB,WAAW,eAAEC,cAAc,eAClC,eAA8B1B,QAAQ,CAAC,CAAC,CAAC,CAAC,yCAAnC2B,OAAO,eAAEC,UAAU,eAC1B,eAAkC5B,QAAQ,CAAC,CAAC,CAAC,CAAC,0CAAvC6B,SAAS,gBAAEC,YAAY,gBAC9B,gBAA0C9B,QAAQ,CAAC,KAAK,CAAC,2CAAlD+B,aAAa,gBAAEC,gBAAgB,gBACtC,gBAAkChC,QAAQ,CAAC,KAAK,CAAC,2CAA1CiC,SAAS,gBAAEC,YAAY,gBAC9B,gBAAsClC,QAAQ,CAAC,KAAK,CAAC,2CAA9CmC,WAAW,gBAAEC,cAAc,gBAClC,gBAA8BpC,QAAQ,CAAC,KAAK,CAAC,2CAAtCqC,OAAO,gBAAEC,UAAU,gBAC1B,gBAA8BtC,QAAQ,CAAC,EAAE,CAAC,2CAAnCuC,OAAO,gBAAEC,UAAU,gBAC1B,gBAAkCxC,QAAQ,CAAC,GAAG,CAAC,2CAAxCyC,SAAS,gBAAEC,YAAY,gBAC9B,gBAAkC1C,QAAQ,CAAC,GAAG,CAAC,2CAAxC2C,SAAS,gBAAEC,YAAY,gBAE9B,sBAOI5B,gBAAgB,EAAE,CAPd6B,MAAM,mBAANA,MAAM,CACZC,QAAQ,mBAARA,QAAQ,CACRC,WAAW,mBAAXA,WAAW,CACXC,IAAI,mBAAJA,IAAI,CACJC,OAAO,mBAAPA,OAAO,CACPC,UAAU,mBAAVA,UAAU,CACVC,QAAQ,mBAARA,QAAQ,CAGV,GAAIC,aAAY,CAEhBnD,SAAS,CAAC,UAAM,CAEd4C,MAAM,CAACQ,EAAE,CAAC,aAAa,CAAE,SAACP,QAAQ,CAAEG,OAAO,CAAK,CAC9CF,WAAW,CAACD,QAAQ,CAAC,CACrBI,UAAU,CAACD,OAAO,CAAC,CACrB,CAAC,CAAC,CAEFJ,MAAM,CAACQ,EAAE,CAAC,UAAU,CAAE,SAACC,OAAO,CAAEC,WAAW,CAAEhB,OAAO,CAAEV,SAAS,CAAK,CAClE2B,OAAO,CAACC,GAAG,CAACH,OAAO,CAAC,CACpBE,OAAO,CAACC,GAAG,CAAC5B,SAAS,CAAC,CACtBP,MAAM,CAACgC,OAAO,CAAC,CACfxB,YAAY,CAACD,SAAS,CAAC,CACvBV,IAAI,CAACuC,IAAI,CAACJ,OAAO,CAAC,CAElB;AACA,GAAIL,OAAO,GAAKM,WAAW,CAAEf,UAAU,CAACD,OAAO,CAAC,CAEhD;AACA,GAAIpB,IAAI,CAACgB,WAAW,EAAE,GAAK,IAAI,CAAE,CAC/BT,cAAc,CAAC,KAAK,CAAC,CACrBU,cAAc,CAAC,IAAI,CAAC,CACtB,CAAC,IAAM,CACLF,YAAY,CAAC,SAACD,SAAS,QAAK,CAACA,SAAS,GAAC,CACvCT,OAAO,CAAC,SAACD,IAAI,QAAK,CAACA,IAAI,GAAC,CACxB,GAAI0B,OAAO,GAAKM,WAAW,CAAEvB,gBAAgB,CAAC,IAAI,CAAC,CACrD,CAEF,CAAC,CAAC,CAEFa,MAAM,CAACQ,EAAE,CAAC,gBAAgB,CAAE,SAACM,KAAK,CAAK,CACrC/B,UAAU,CAACgC,IAAI,CAACC,KAAK,CAACF,KAAK,CAAC,CAAC,CAC/B,CAAC,CAAC,CAEFd,MAAM,CAACQ,EAAE,CAAC,YAAY,CAAE,SAACxB,SAAS,CAAK,CACrC,GAAMiC,UAAS,CAAGF,IAAI,CAACC,KAAK,CAAChC,SAAS,CAAC,CACvCK,YAAY,CAAC,IAAI,CAAC,CAClBR,cAAc,CAAC,IAAI,CAAC,CACpBI,YAAY,CAACgC,SAAS,CAAC,CACvBxC,MAAM,CAAC,OAAO,CAAC,CACfc,cAAc,CAAC,KAAK,CAAC,CACrBE,UAAU,CAAC,KAAK,CAAC,CACjBI,YAAY,CAAC,GAAG,CAAC,CACjBE,YAAY,CAAC,GAAG,CAAC,CAEjB,GAAIK,OAAO,CAAE,CACXzB,OAAO,CAAC,IAAI,CAAC,CACbQ,gBAAgB,CAAC,IAAI,CAAC,CACxB,CAEAb,IAAI,CAAC4C,KAAK,EAAE,CAAE;AAChB,CAAC,CAAC,CAEFlB,MAAM,CAACQ,EAAE,CAAC,UAAU,CAAE,UAAM,CAC1B3B,cAAc,CAAC,KAAK,CAAC,CACrBY,UAAU,CAAC,IAAI,CAAC,CAClB,CAAC,CAAC,CAEFO,MAAM,CAACQ,EAAE,CAAC,cAAc,CAAE,SAACW,KAAK,CAAK,CACnCtB,YAAY,CAACsB,KAAK,CAAC,CAAC,CAAC,CAAC,CACtBpB,YAAY,CAACoB,KAAK,CAAC,CAAC,CAAC,CAAC,CACxB,CAAC,CAAC,CAEF,MAAO,WAAM,CACXnB,MAAM,CAACoB,kBAAkB,EAAE,CAC7B,CAAC,CAEH,CAAC,CAAE,CAAChB,OAAO,CAAEC,UAAU,CAAEH,WAAW,CAAEF,MAAM,CAAC,CAAC,CAE9C;AACA,GAAMqB,WAAU,CAAG,QAAbA,WAAU,CAAIC,MAAM,CAAEC,QAAQ,CAAK,CACvCvB,MAAM,CAACwB,IAAI,CAAC,aAAa,CAAEF,MAAM,CAAEC,QAAQ,CAAEtB,QAAQ,CAAEG,OAAO,CAAEE,QAAQ,CAAC,CAC3E,CAAC,CAED,GAAMmB,WAAU,CAAG,QAAbA,WAAU,EAAS,CACvBd,OAAO,CAACC,GAAG,CAACX,QAAQ,CAAC,CACrBD,MAAM,CAACwB,IAAI,CAAC,aAAa,CAAEpB,OAAO,CAAEH,QAAQ,CAAEK,QAAQ,CAAC,CACvDD,UAAU,CAAC,SAACD,OAAO,QAAK,CAACA,OAAO,GAAC,CACnC,CAAC,CAED,GAAMsB,OAAM,CAAI,QAAVA,OAAM,MAAwC,IAAjCC,aAAY,MAAZA,YAAY,CAAEC,YAAY,MAAZA,YAAY,CAE3C,GAAI,CAAClD,IAAI,EAAI,CAACQ,aAAa,CAAE,OAC7B,GAAM2C,KAAI,CAAGvD,IAAI,CAACuD,IAAI,CAAC,CAAEC,IAAI,CAAEH,YAAY,CAAEI,EAAE,CAAEH,YAAa,CAAC,CAAC,CAChE,GAAIC,IAAI,GAAK,IAAI,CAAE,OAAQ;AAC3BlB,OAAO,CAACC,GAAG,CAACtC,IAAI,CAACE,GAAG,EAAE,CAAC,CACvB;AACA+B,YAAY,CAAGjC,IAAI,CAACE,GAAG,EAAE,CACzBC,MAAM,CAAC8B,YAAY,CAAC,CACpBpB,gBAAgB,CAAC,KAAK,CAAC,CAEvBb,IAAI,CAAC0D,IAAI,EAAE,CAEX,MAAO,IAAIC,QAAO,CAAC,SAACC,OAAO,CAAK,CAC9BA,OAAO,EAAE,CACX,CAAC,CAAC,CAACC,IAAI,CAAC,iBAAMC,WAAU,EAAE,CAACC,QAAQ,EAAE,GAAC,CACxC,CAAC,CAED,GAAMD,WAAU,CAAG,QAAbA,WAAU,CAAIE,OAAO,CAAK,CAC9BA,OAAO,CAAGA,OAAO,EAAI,CAAC,CAAC,CAEvB;AACA,GAAIC,OAAM,CACR,MAAOnE,UAAS,GAAK,UAAU,CAC3BA,SAAS,EAAE,CACX,GAAIoE,OAAM,CAACF,OAAO,CAACG,WAAW,EAAI,cAAc,CAAC,CAEvD;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,GAAMJ,UAAQ,CAAG,QAAXA,SAAQ,EAAS,CACrB,GAAI,CAAC/D,IAAI,CAACoE,UAAU,EAAE,CAAE,CACtBH,MAAM,CAACI,WAAW,CAAC,YAAY,CAAC,CAChChC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAEL,YAAY,CAAC,CAC1CgC,MAAM,CAACI,WAAW,CAAC,eAAe,CAAGpC,YAAY,CAAC,CAClDgC,MAAM,CAACI,WAAW,CAAC,MAAM,CAAC,CAC5B,CACF,CAAC,CAEDJ,MAAM,CAACK,SAAS,CAAG,SAACC,KAAK,CAAK,CAC5B,GAAIC,KAAI,CAER,GAAID,KAAK,EAAI,MAAOA,MAAK,GAAK,QAAQ,CAAE,CACtCC,IAAI,CAAGD,KAAK,CAACE,IAAI,CACnB,CAAC,IAAM,CACLD,IAAI,CAAGD,KAAK,CACd,CACA,GAAIC,IAAI,CAACE,MAAM,CAAC,CAAC,CAAE,kBAAkB,CAACC,MAAM,CAAC,GAAK,kBAAkB,CAAE,CACpE,GAAIC,MAAK,CAAGC,UAAU,CAACL,IAAI,CAACE,MAAM,CAAC,EAAE,CAAC,CAACA,MAAM,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,CACpD,GAAI,CAAC5C,OAAO,CAAE8C,KAAK,CAAGA,KAAK,CAAG,CAAC,CAAC,CAChC7B,UAAU,CAAC6B,KAAK,CAAE3C,YAAY,CAAC,CACjC,CACF,CAAC,CAED,MAAO,CACL6C,KAAK,CAAE,gBAAY,CACjBb,MAAM,CAACI,WAAW,CAAC,YAAY,CAAC,CAChCJ,MAAM,CAACI,WAAW,CAAC,SAAS,CAAC,CAC9B;AACD,CAAC,CACDN,QAAQ,CAAE,mBAAY,CACpBA,SAAQ,EAAE,CACZ,CACF,CAAC,CACH,CAAC,CAED;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA,GAAMgB,gBAAe,CAAG,QAAlBA,gBAAe,EAAS,CAC5B,GAAIlD,IAAI,CACN,mBAAQ,KAAC,SAAS,EAAC,OAAO,CAAE,yBAAMH,OAAM,CAACwB,IAAI,CAAC,YAAY,CAAEvB,QAAQ,CAAC,EAAC,mBAAkB,CAC5F,CAAC,CAED,GAAMqD,aAAY,CAAG,QAAfA,aAAY,EAAS,CACzB,GAAI,CAAC1E,WAAW,CAAE,CAChB,mBACE,aAAK,KAAK,CAAE,CAAE2E,OAAO,CAAE,MAAM,CAAEC,cAAc,CAAE,cAAc,CAAEC,KAAK,CAAE,KAAK,CAAEC,MAAM,CAAE,IAAK,CAAE,wBAC1F,KAAC,eAAe,IAAG,cACnB,KAAC,UAAU,EAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAE,iBAACC,CAAC,QAAKlC,WAAU,CAAC,IAAI,CAAC,EAAC,yBAA0B,GAChF,CAEV,CACF,CAAC,CAED,GAAMmC,SAAQ,CAAG,QAAXA,SAAQ,EAAS,CACrB,GAAItE,WAAW,CAAE,CACf,mBAAQ,wCAA0B,CACpC,CAAC,IACI,IAAIE,OAAO,CAAE,CAChB,mBAAQ,uBAAMY,OAAO,CAAG,OAAO,CAAG,OAAO,mBAAoB,CAC/D,CACF,CAAC,CAED,mBACE,MAAC,WAAW,yBACV,KAAC,UAAU,EACT,EAAE,CAAC,QAAQ,CACX,QAAQ,CAAE5B,GAAI,CACd,MAAM,CAAEkD,MAAO,CACf,UAAU,CAAEmC,UAAW,CACvB,WAAW,CAAEzD,OAAO,CAAG,OAAO,CAAG,OAAQ,CACzC,SAAS,CAAE,mBAAC0D,MAAM,QAAKC,KAAI,CAACC,GAAG,CAACF,MAAM,CAACG,YAAY,CAAG,EAAE,CAAEH,MAAM,CAACI,WAAW,CAAG,GAAG,CAAC,EAAC,EACpF,cAEF,aAAK,KAAK,CAAE,CAAEX,OAAO,CAAE,MAAM,CAAE,gBAAgB,CAAE,QAAQ,CAAE,iBAAiB,CAAE,eAAe,CAAEG,MAAM,CAAE,OAAO,CAAED,KAAK,CAAE,MAAO,CAAE,wBAE9H,KAAC,IAAI,EAAC,KAAK,CAAE,CAAEA,KAAK,CAAE,KAAK,CAAEC,MAAM,CAAE,MAAO,CAAE,EAAQ,cAGtD,MAAC,eAAe,yBACd,aAAK,KAAK,CAAE,CAAEH,OAAO,CAAE,MAAM,CAAE,WAAW,CAAE,UAAU,CAAE,iBAAiB,CAAE,QAAQ,CAAEG,MAAM,CAAE,aAAa,CAAED,KAAK,CAAE,MAAM,CAAE,YAAY,CAAE,KAAM,CAAE,wBAC/I,MAAC,WAAW,yBACV,KAAC,QAAQ,EAAC,KAAK,CAAC,OAAO,mBAAiB,cACxC,KAAC,KAAK,EAAC,OAAO,CAAE3E,OAAQ,CAAC,OAAO,CAAE,IAAK,CAAC,SAAS,CAAEE,SAAU,CAAC,WAAW,CAAEJ,WAAY,EAAG,GAC9E,cACd,MAAC,WAAW,yBACV,KAAC,QAAQ,oBAAiB,cAC1B,KAAC,KAAK,EAAC,OAAO,CAAEE,OAAQ,CAAC,OAAO,CAAE,KAAM,CAAC,SAAS,CAAEE,SAAU,CAAC,WAAW,CAAEJ,WAAY,EAAG,GAC/E,GACV,cAEN,KAAC,OAAO,EAAC,OAAO,CAAEc,OAAQ,EAAG,cAE7B,KAAC,YAAY,EAAC,WAAW,CAAEd,WAAY,EAAG,cAE1C,YAAI,KAAK,CAAE,CAAEuF,KAAK,CAAE,SAAU,CAAE,WAAEzF,IAAI,CAAG,MAAM,CAAG,UAAU,WAAW,cACvE,WAAI,KAAK,CAAE,CAAEyF,KAAK,CAAE,SAAU,CAAE,uBAC9B,KAAC,QAAQ,IAAG,EACT,cAEL,aAAK,KAAK,CAAE,CAAEZ,OAAO,CAAE,MAAM,CAAEG,MAAM,CAAE,IAAI,CAAED,KAAK,CAAE,KAAK,CAAED,cAAc,CAAE,QAAQ,CAAEY,UAAU,CAAE,QAAS,CAAE,wBAC1G,KAAC,cAAc,EAAC,YAAY,CAAExE,SAAU,CAAC,SAAS,CAAER,SAAU,EAAG,cACjE,KAAC,cAAc,EAAC,YAAY,CAAEU,SAAU,CAAC,SAAS,CAAG,CAACV,SAAS,EAAIR,WAAa,EAAG,GAC/E,GACU,cAElB,iBAAS,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAE,CAAE2E,OAAO,CAAE,MAAM,CAAEE,KAAK,CAAE,MAAM,CAAEY,MAAM,CAAE,eAAe,CAAE,iBAAiB,CAAE,OAAQ,CAAE,wBAClH,KAAC,aAAa,EAAC,KAAK,CAAE,CAAEX,MAAM,CAAE,MAAM,CAAED,KAAK,CAAE,MAAQ,CAAE,EAAiB,cAC1E,MAAC,cAAc,qBAAQxD,QAAQ,GAAkB,GACzC,GAEN,GACM,CAElB,CAAC,CAED,cAAe1B,KAAI,CAEnB,GAAMsF,WAAU,CAAG,CACjBS,MAAM,CAAE,oBAAoB,CAC5BC,SAAS,gCAAiC,CAC1C,eAAe,CAAE,KAAK,CACtBhD,QAAQ,CAAE,UAAU,CACpBiD,IAAI,CAAE,IACR,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}