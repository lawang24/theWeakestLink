{"ast":null,"code":"import { squareStyling } from \"./helpers\";\nexport const room_joined_handler = (socket, setRoomCode, setIsWhite) => {\n  socket.on(\"room_joined\", (roomCode, isWhite) => {\n    setRoomCode(roomCode);\n    setIsWhite(isWhite);\n  });\n};\nexport const next_turn_handler = (socket, game, setFen, setIsCheckmate, setGameStarted, setWhiteTurn, setTurn, isWhite, setCanSubmitMove, roomCode, setHistory, setSquareStyles) => {\n  socket.on(\"next_turn\", (worst_fen, nowWhiteTurn) => {\n    setFen(worst_fen);\n    game.load(worst_fen);\n    setSquareStyles(squareStyling(game.history({\n      verbose: true\n    })));\n\n    // check game conditions\n    if (game.isCheckmate() === true) {\n      setIsCheckmate(true);\n      setGameStarted(false);\n      setTurn(false);\n      setCanSubmitMove(false);\n      socket.emit(\"stop_game\", roomCode);\n    }\n    // allow the proper players to move \n    else {\n      setWhiteTurn(whiteTurn => !whiteTurn);\n      setTurn(turn => !turn);\n      if (isWhite === nowWhiteTurn) setCanSubmitMove(true);\n    }\n  });\n};\nexport const update_teams_handler = (socket, setWhiteTeam, setBlackTeam) => {\n  socket.on(\"update_white_team\", white_team => {\n    setWhiteTeam(new Map(JSON.parse(white_team)));\n  });\n  socket.on(\"update_black_team\", black_team => {\n    setBlackTeam(new Map(JSON.parse(black_team)));\n  });\n};\nexport const begin_game_handler = (socket, game, setWhiteTurn, setGameStarted, setFen, setIsCheckmate, setTimeOut, isWhite, setTurn, setCanSubmitMove) => {\n  socket.on(\"begin_game\", () => {\n    setWhiteTurn(true);\n    setGameStarted(true);\n    setFen(\"start\");\n    setIsCheckmate(false);\n    setTimeOut(false);\n    if (isWhite) {\n      setTurn(true);\n      setCanSubmitMove(true);\n    }\n    game.reset(); // restart the game\n  });\n};\n\nexport const timer_handler = (socket, setGameStarted, setTimeOut, setTurn, setCanSubmitMove, roomCode, setWhiteTime, setBlackTime) => {\n  socket.on(\"time_out\", () => {\n    setGameStarted(false);\n    setTimeOut(true);\n    setTurn(false);\n    setCanSubmitMove(false);\n    socket.emit(\"stop_game\", roomCode);\n  });\n  socket.on(\"update_timer\", timer => {\n    setWhiteTime(timer[0]);\n    setBlackTime(timer[1]);\n    console.log(timer);\n  });\n};\nexport function roomListeners(socket, setisHomescreen) {\n  socket.on(\"yes_room\", () => {\n    setisHomescreen(false);\n  });\n  socket.on(\"no_room\", () => {\n    alert(\"Game Not Found\");\n    console.log(\"alert!\");\n  });\n}\n;","map":{"version":3,"names":["squareStyling","room_joined_handler","socket","setRoomCode","setIsWhite","on","roomCode","isWhite","next_turn_handler","game","setFen","setIsCheckmate","setGameStarted","setWhiteTurn","setTurn","setCanSubmitMove","setHistory","setSquareStyles","worst_fen","nowWhiteTurn","load","history","verbose","isCheckmate","emit","whiteTurn","turn","update_teams_handler","setWhiteTeam","setBlackTeam","white_team","Map","JSON","parse","black_team","begin_game_handler","setTimeOut","reset","timer_handler","setWhiteTime","setBlackTime","timer","console","log","roomListeners","setisHomescreen","alert"],"sources":["C:/Users/catas/Desktop/Basic Chess Game/client/src/handlers/socket_handlers.js"],"sourcesContent":["import { squareStyling } from \"./helpers\";\r\n\r\nexport const room_joined_handler = (socket, setRoomCode, setIsWhite) => {\r\n  socket.on(\"room_joined\", (roomCode, isWhite) => {\r\n    setRoomCode(roomCode);\r\n    setIsWhite(isWhite);\r\n  });\r\n};\r\n\r\nexport const next_turn_handler = (socket, game, setFen, setIsCheckmate, setGameStarted,\r\n  setWhiteTurn, setTurn, isWhite, setCanSubmitMove, roomCode, setHistory, setSquareStyles) => {\r\n\r\n  socket.on(\"next_turn\", (worst_fen, nowWhiteTurn) => {\r\n    setFen(worst_fen);\r\n    game.load(worst_fen);\r\n\r\n    setSquareStyles(squareStyling(game.history({ verbose: true })));\r\n\r\n    // check game conditions\r\n    if (game.isCheckmate() === true) {\r\n      setIsCheckmate(true);\r\n      setGameStarted(false);\r\n      setTurn(false);\r\n      setCanSubmitMove(false);\r\n      socket.emit(\"stop_game\", roomCode);\r\n\r\n    }\r\n    // allow the proper players to move \r\n    else {\r\n      setWhiteTurn((whiteTurn) => !whiteTurn);\r\n      setTurn((turn) => !turn);\r\n      if (isWhite === nowWhiteTurn) setCanSubmitMove(true);\r\n    }\r\n\r\n  });\r\n};\r\n\r\nexport const update_teams_handler = (socket, setWhiteTeam, setBlackTeam) => {\r\n  socket.on(\"update_white_team\", (white_team) => {\r\n    setWhiteTeam(new Map(JSON.parse(white_team)));\r\n  });\r\n\r\n  socket.on(\"update_black_team\", (black_team) => {\r\n    setBlackTeam(new Map(JSON.parse(black_team)));\r\n  });\r\n};\r\n\r\nexport const begin_game_handler = (socket, game, setWhiteTurn, setGameStarted, setFen, setIsCheckmate,\r\n  setTimeOut, isWhite, setTurn, setCanSubmitMove) => {\r\n\r\n  socket.on(\"begin_game\", () => {\r\n    setWhiteTurn(true);\r\n    setGameStarted(true);\r\n    setFen(\"start\");\r\n    setIsCheckmate(false);\r\n    setTimeOut(false);\r\n    if (isWhite) {\r\n      setTurn(true);\r\n      setCanSubmitMove(true);\r\n    }\r\n    game.reset(); // restart the game\r\n  });\r\n\r\n};\r\n\r\nexport const timer_handler = (socket, setGameStarted, setTimeOut, setTurn, setCanSubmitMove,\r\n  roomCode, setWhiteTime, setBlackTime) => {\r\n\r\n  socket.on(\"time_out\", () => {\r\n    setGameStarted(false);\r\n    setTimeOut(true);\r\n    setTurn(false);\r\n    setCanSubmitMove(false);\r\n    socket.emit(\"stop_game\", roomCode);\r\n  });\r\n\r\n  socket.on(\"update_timer\", (timer) => {\r\n    setWhiteTime(timer[0]);\r\n    setBlackTime(timer[1]);\r\n    console.log(timer);\r\n  });\r\n\r\n};\r\n\r\nexport function roomListeners(socket, setisHomescreen) {\r\n\r\n  socket.on(\"yes_room\", () => {\r\n    setisHomescreen(false);\r\n  });\r\n\r\n  socket.on(\"no_room\", () => {\r\n    alert(\"Game Not Found\");\r\n    console.log(\"alert!\");\r\n  });\r\n\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}