{"ast":null,"code":"// send the client's rating to the server\nexport const sendRating = (socket, rating, position, roomCode, isWhite, username, target, source) => {\n  socket.emit(\"send_rating\", rating, position, roomCode, isWhite, username, target, source);\n};\nexport const changeTeam = (socket, isWhite, roomCode, username, setIsWhite) => {\n  socket.emit(\"change_team\", isWhite, roomCode, username);\n  setIsWhite(isWhite => !isWhite);\n};\nexport const squareStyling = (sourceSquare, targetSquare, kingSquare) => {\n  const styling = {\n    [sourceSquare]: {\n      backgroundColor: \"rgba(255, 255, 0, 0.4)\"\n    },\n    [targetSquare]: {\n      backgroundColor: \"rgba(255, 255, 0, 0.4)\"\n    }\n  };\n\n  // if (kingSquare) styling[kingSquare.square] = { backgroundColor: \"rgba(255, 255, 0, 0.4)\" }\n\n  return styling;\n};","map":{"version":3,"names":["sendRating","socket","rating","position","roomCode","isWhite","username","target","source","emit","changeTeam","setIsWhite","squareStyling","sourceSquare","targetSquare","kingSquare","styling","backgroundColor"],"sources":["C:/Users/catas/Desktop/Basic Chess Game/client/src/handlers/helpers.js"],"sourcesContent":["// send the client's rating to the server\r\nexport const sendRating = (socket, rating, position, roomCode, isWhite, username, target, source) => {\r\n  socket.emit(\"send_rating\", rating, position, roomCode, isWhite, username, target, source);\r\n};\r\n\r\nexport const changeTeam = (socket, isWhite, roomCode, username, setIsWhite) => {\r\n  socket.emit(\"change_team\", isWhite, roomCode, username);\r\n  setIsWhite((isWhite) => !isWhite);\r\n}\r\n\r\nexport const squareStyling = ( sourceSquare, targetSquare, kingSquare ) => {\r\n  const styling = {\r\n    [sourceSquare]: {\r\n      backgroundColor: \"rgba(255, 255, 0, 0.4)\"\r\n    },\r\n    [targetSquare]: {\r\n      backgroundColor: \"rgba(255, 255, 0, 0.4)\"\r\n    }\r\n  }\r\n\r\n  // if (kingSquare) styling[kingSquare.square] = { backgroundColor: \"rgba(255, 255, 0, 0.4)\" }\r\n\r\n  return styling\r\n\r\n};"],"mappings":"AAAA;AACA,OAAO,MAAMA,UAAU,GAAG,CAACC,MAAM,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,OAAO,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,MAAM,KAAK;EACnGP,MAAM,CAACQ,IAAI,CAAC,aAAa,EAAEP,MAAM,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,OAAO,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,MAAM,CAAC;AAC3F,CAAC;AAED,OAAO,MAAME,UAAU,GAAG,CAACT,MAAM,EAAEI,OAAO,EAAED,QAAQ,EAAEE,QAAQ,EAAEK,UAAU,KAAK;EAC7EV,MAAM,CAACQ,IAAI,CAAC,aAAa,EAAEJ,OAAO,EAAED,QAAQ,EAAEE,QAAQ,CAAC;EACvDK,UAAU,CAAEN,OAAO,IAAK,CAACA,OAAO,CAAC;AACnC,CAAC;AAED,OAAO,MAAMO,aAAa,GAAG,CAAEC,YAAY,EAAEC,YAAY,EAAEC,UAAU,KAAM;EACzE,MAAMC,OAAO,GAAG;IACd,CAACH,YAAY,GAAG;MACdI,eAAe,EAAE;IACnB,CAAC;IACD,CAACH,YAAY,GAAG;MACdG,eAAe,EAAE;IACnB;EACF,CAAC;;EAED;;EAEA,OAAOD,OAAO;AAEhB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}