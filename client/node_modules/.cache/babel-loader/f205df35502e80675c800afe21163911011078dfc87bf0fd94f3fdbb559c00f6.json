{"ast":null,"code":"import _classCallCheck from\"C:/Users/catas/Desktop/Basic Chess Game/client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"C:/Users/catas/Desktop/Basic Chess Game/client/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _assertThisInitialized from\"C:/Users/catas/Desktop/Basic Chess Game/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";import _inherits from\"C:/Users/catas/Desktop/Basic Chess Game/client/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"C:/Users/catas/Desktop/Basic Chess Game/client/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import Chessboard from\"chessboardjsx\";import{React,Component}from\"react\";import{Logo,SettingButton}from\"../StyledComponents\";import{GameWrapper,RoomCode as RoomCodeButton,ChangeTeam,TeamName,StartGame,GameplaySection}from\"../StyledComponents/gameComponents\";import{TeamSection}from\"../StyledComponents/gameComponents\";import{Chess}from\"chess.js\";import{Teams,Ratings,CountdownTimer}from\"../items/displayItems\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var STOCKFISH=window.STOCKFISH;var game=new Chess();var Game=/*#__PURE__*/function(_Component){_inherits(Game,_Component);var _super=_createSuper(Game);function Game(props){var _this;_classCallCheck(this,Game);_this=_super.call(this,props);_this.sendRating=function(rating,position){_this.props.socket.emit(\"send_rating\",rating,position,_this.props.roomCode,_this.props.isWhite,_this.props.username);};_this.changeTeam=function(){_this.props.socket.emit(\"change_team\",_this.props.isWhite,_this.props.roomCode,_this.props.username);_this.props.setisWhite(!_this.props.isWhite);};_this.onDrop=function(_ref){var sourceSquare=_ref.sourceSquare,targetSquare=_ref.targetSquare;console.log(_this.state.canSubmitMove);if(!_this.state.turn||!_this.state.canSubmitMove)return;var move=game.move({from:sourceSquare,to:targetSquare});if(move===null)return;// illegal move  \n// grab player proposed position and show it\n_this.setState({fen:game.fen()});_this.setState({canSubmitMove:false});game.undo();return new Promise(function(resolve){resolve();}).then(function(){return _this.engineGame().evalMove();});};_this.engineGame=function(options){options=options||{};/// We can load Stockfish via Web Workers or via STOCKFISH() if loaded from a <script> tag.\nvar engine=typeof STOCKFISH===\"function\"?STOCKFISH():new Worker(options.stockfishjs||\"stockfish.js\");var announced_game_over;setInterval(function(){if(announced_game_over){return;}if(game.isGameOver()){announced_game_over=true;}},500);var _evalMove=function evalMove(){if(!game.isGameOver()){engine.postMessage(\"ucinewgame\");engine.postMessage(\"position fen \"+_this.state.fen);engine.postMessage(\"eval\");}};engine.onmessage=function(event){var line;if(event&&typeof event===\"object\"){line=event.data;}else{line=event;}if(line.substr(0,\"Total Evaluation\".length)===\"Total Evaluation\"){var score=parseFloat(line.substr(18).substr(0,4));if(!_this.props.isWhite)score=score*-1;_this.sendRating(score,_this.state.fen);}};return{start:function start(){engine.postMessage(\"ucinewgame\");engine.postMessage(\"isready\");announced_game_over=false;},evalMove:function evalMove(){_evalMove();}};};_this.increment_whitetime=function(){_this.setState(function(state){return{white_time:state.white_time-1};});};_this.increment_blacktime=function(){_this.setState(function(state){return{black_time:state.black_time-1};});};_this.state={fen:\"start\",turn:false,gameStarted:false,players:{},scorecard:{},canSubmitMove:false,whiteTurn:false,isCheckmate:false,timeOut:false,ratings:[],white_time:600,black_time:600};_this.increment_whitetime=_this.increment_whitetime.bind(_assertThisInitialized(_this));_this.increment_blacktime=_this.increment_blacktime.bind(_assertThisInitialized(_this));return _this;}_createClass(Game,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;this.props.socket.on(\"nextTurn\",function(weakest,isWhiteTurn,ratings,scorecard){console.log(weakest);console.log(scorecard);_this2.setState({fen:weakest,scorecard:scorecard});game.load(weakest);// if no longer your turn, update last turn's ratings so you can see who's the bum\nif(_this2.props.isWhite!==isWhiteTurn)_this2.setState({ratings:ratings});// check if checkmate\nif(game.isCheckmate()===true)_this2.setState({gameStarted:false,isCheckmate:true});else{_this2.setState({whiteTurn:!_this2.state.whiteTurn,turn:!_this2.state.turn});if(_this2.props.isWhite===isWhiteTurn)_this2.setState({canSubmitMove:true});};});this.props.socket.on(\"update_players\",function(teams){_this2.setState({players:JSON.parse(teams)});});this.props.socket.on(\"begin_game\",function(scorecard){var Scorecard=JSON.parse(scorecard);_this2.setState({whiteTurn:true,gameStarted:true,scorecard:Scorecard,fen:\"start\",isCheckmate:false,timeOut:false,white_time:600,black_time:600});if(_this2.props.isWhite)_this2.setState({turn:true,canSubmitMove:true});game.reset();// restart the game\n});this.props.socket.on(\"time_out\",function(){_this2.setState({gameStarted:false,timeOut:true});});}},{key:\"render\",value:function render(){var _this3=this;var startGame=function startGame(){if(_this3.props.host)return/*#__PURE__*/_jsx(StartGame,{onClick:function onClick(){return _this3.props.socket.emit(\"start_game\",_this3.props.roomCode);},children:\"START\"});};var GameControls=function GameControls(){if(!_this3.state.gameStarted){return/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",justifyContent:\"space-evenly\",width:\"70%\",height:\"9%\"},children:[startGame(),/*#__PURE__*/_jsx(ChangeTeam,{team:\"white\",onClick:function onClick(e){return _this3.changeTeam(true);},children:\"CHANGE TEAM\"})]});}};var Gameover=function Gameover(){if(_this3.state.isCheckmate){return/*#__PURE__*/_jsx(\"div\",{children:\"CHECKMATE BUCKO\"});}else if(_this3.state.timeOut){return/*#__PURE__*/_jsxs(\"div\",{children:[team.toUpperCase(),\" WINS ON TIME\"]});}};var team=this.props.isWhite?\"white\":\"black\";var status=this.state.turn?\"Your\":\"Not Your\";return/*#__PURE__*/_jsxs(GameWrapper,{children:[/*#__PURE__*/_jsx(Chessboard,{id:\"board!\",position:this.state.fen,onDrop:this.onDrop,boardStyle:boardStyle,orientation:team,calcWidth:function calcWidth(screen){return Math.min(screen.screenHeight*.9,screen.screenWidth*.53);}}),/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",\"flex-direction\":'column',\"justify-content\":\"space-between\",height:\"100vh\",width:\"33vw\"},children:[/*#__PURE__*/_jsx(Logo,{style:{width:\"50%\",height:\"auto\"}}),/*#__PURE__*/_jsxs(GameplaySection,{children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",\"flex-flow\":\"row wrap\",\"justify-content\":\"center\",height:\"fit-content\",width:\"100%\",\"margin-top\":\"17%\"},children:[/*#__PURE__*/_jsxs(TeamSection,{children:[/*#__PURE__*/_jsx(TeamName,{color:\"white\",children:\"WHITE\"}),/*#__PURE__*/_jsx(Teams,{players:this.state.players,isWhite:true,scorecard:this.state.scorecard,gameStarted:this.state.gameStarted})]}),/*#__PURE__*/_jsxs(TeamSection,{children:[/*#__PURE__*/_jsx(TeamName,{children:\"BLACK\"}),/*#__PURE__*/_jsx(Teams,{players:this.state.players,isWhite:false,scorecard:this.state.scorecard,gameStarted:this.state.gameStarted})]})]}),/*#__PURE__*/_jsx(Ratings,{ratings:this.state.ratings}),/*#__PURE__*/_jsx(GameControls,{gameStarted:this.state.gameStarted}),/*#__PURE__*/_jsxs(\"h1\",{style:{color:\"#FFFFFF\"},children:[status,\" Turn\"]}),/*#__PURE__*/_jsx(\"h1\",{style:{color:\"#FFFFFF\"},children:Gameover()}),/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",height:\"8%\",width:\"30%\",justifyContent:\"center\",alignItems:\"center\"},children:[/*#__PURE__*/_jsx(CountdownTimer,{totalSeconds:this.state.white_time,increment:this.increment_whitetime,isRunning:this.state.whiteTurn}),/*#__PURE__*/_jsx(CountdownTimer,{totalSeconds:this.state.black_time,increment:this.increment_blacktime,isRunning:!this.state.whiteTurn&&this.state.gameStarted})]})]}),/*#__PURE__*/_jsxs(\"section\",{id:\"footer\",style:{display:\"flex\",width:\"100%\",margin:\"0 0 34px 34px\",'justify-content':'start'},children:[/*#__PURE__*/_jsx(SettingButton,{style:{height:\"48px\",width:\"48px\"}}),/*#__PURE__*/_jsxs(RoomCodeButton,{children:[\"ROOM: \",this.props.roomCode]})]})]})]});}}]);return Game;}(Component);export default Game;var boardStyle={border:\"10px solid #868BAC\",boxShadow:\"0 5px 15px rgba(0, 0, 0, 0.5)\",\"border-radius\":\"5px\",position:\"relative\",left:\"5%\"};","map":{"version":3,"names":["Chessboard","React","Component","Logo","SettingButton","GameWrapper","RoomCode","RoomCodeButton","ChangeTeam","TeamName","StartGame","GameplaySection","TeamSection","Chess","Teams","Ratings","CountdownTimer","STOCKFISH","window","game","Game","props","sendRating","rating","position","socket","emit","roomCode","isWhite","username","changeTeam","setisWhite","onDrop","sourceSquare","targetSquare","console","log","state","canSubmitMove","turn","move","from","to","setState","fen","undo","Promise","resolve","then","engineGame","evalMove","options","engine","Worker","stockfishjs","announced_game_over","setInterval","isGameOver","postMessage","onmessage","event","line","data","substr","length","score","parseFloat","start","increment_whitetime","white_time","increment_blacktime","black_time","gameStarted","players","scorecard","whiteTurn","isCheckmate","timeOut","ratings","bind","on","weakest","isWhiteTurn","load","teams","JSON","parse","Scorecard","reset","startGame","host","GameControls","display","justifyContent","width","height","e","Gameover","team","toUpperCase","status","boardStyle","screen","Math","min","screenHeight","screenWidth","color","alignItems","margin","border","boxShadow","left"],"sources":["C:/Users/catas/Desktop/Basic Chess Game/client/src/pages/game.js"],"sourcesContent":["import Chessboard from \"chessboardjsx\";\r\nimport { React, Component } from \"react\";\r\nimport { Logo, SettingButton } from \"../StyledComponents\"\r\nimport { GameWrapper, RoomCode as RoomCodeButton, ChangeTeam, TeamName, StartGame, GameplaySection } from \"../StyledComponents/gameComponents\"\r\nimport { TeamSection } from \"../StyledComponents/gameComponents\";\r\nimport { Chess } from \"chess.js\";\r\nimport { Teams, Ratings, CountdownTimer } from \"../items/displayItems\";\r\n\r\nconst STOCKFISH = window.STOCKFISH;\r\nconst game = new Chess();\r\n\r\nclass Game extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      fen: \"start\",\r\n      turn: false,\r\n      gameStarted: false,\r\n      players: {},\r\n      scorecard: {}, \r\n      canSubmitMove: false,\r\n      whiteTurn: false,\r\n      isCheckmate: false,\r\n      timeOut: false,\r\n      ratings: [],\r\n      white_time: 600,\r\n      black_time: 600,\r\n    }\r\n    this.increment_whitetime = this.increment_whitetime.bind(this);\r\n    this.increment_blacktime = this.increment_blacktime.bind(this);\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.socket.on(\"nextTurn\", (weakest, isWhiteTurn, ratings, scorecard) => {\r\n      console.log(weakest);\r\n      console.log(scorecard);\r\n      this.setState({ fen: weakest, scorecard: scorecard });\r\n      game.load(weakest);\r\n\r\n      // if no longer your turn, update last turn's ratings so you can see who's the bum\r\n      if (this.props.isWhite !== isWhiteTurn) this.setState({ ratings: ratings }); \r\n\r\n      // check if checkmate\r\n      if (game.isCheckmate() === true) this.setState({ gameStarted: false, isCheckmate: true })\r\n      else {\r\n        this.setState({ whiteTurn: !this.state.whiteTurn, turn: !this.state.turn });\r\n        if (this.props.isWhite === isWhiteTurn) this.setState({ canSubmitMove: true });\r\n      };\r\n    });\r\n\r\n    this.props.socket.on(\"update_players\", (teams) => {\r\n      this.setState({ players: JSON.parse(teams) });\r\n    });\r\n\r\n    this.props.socket.on(\"begin_game\", (scorecard) => {\r\n      const Scorecard = JSON.parse(scorecard);\r\n      this.setState({ \r\n      whiteTurn: true, \r\n      gameStarted: true, \r\n      scorecard: Scorecard, \r\n      fen: \"start\", \r\n      isCheckmate: false,\r\n      timeOut: false,\r\n      white_time: 600,\r\n      black_time: 600,\r\n    });\r\n      if (this.props.isWhite) this.setState({ turn: true, canSubmitMove: true });\r\n\r\n      game.reset(); // restart the game\r\n      \r\n    })\r\n\r\n    this.props.socket.on(\"time_out\", () => {\r\n      this.setState({ gameStarted: false, timeOut: true });\r\n    })\r\n\r\n  };\r\n\r\n  sendRating = (rating, position) => {\r\n    this.props.socket.emit(\"send_rating\", rating, position, this.props.roomCode, this.props.isWhite, this.props.username);\r\n  };\r\n\r\n  changeTeam = () => {\r\n    this.props.socket.emit(\"change_team\", this.props.isWhite, this.props.roomCode, this.props.username);\r\n    this.props.setisWhite(!this.props.isWhite);\r\n  }\r\n\r\n  onDrop = ({ sourceSquare, targetSquare }) => {\r\n    console.log(this.state.canSubmitMove);\r\n    if (!this.state.turn || !this.state.canSubmitMove) return;\r\n    const move = game.move({ from: sourceSquare, to: targetSquare })\r\n    if (move === null) return; // illegal move  \r\n\r\n    // grab player proposed position and show it\r\n    this.setState({ fen: game.fen() })\r\n    this.setState({ canSubmitMove: false });\r\n\r\n    game.undo();\r\n\r\n    return new Promise((resolve) => {\r\n      resolve();\r\n    }).then(() => this.engineGame().evalMove());\r\n  };\r\n\r\n  engineGame = (options) => {\r\n    options = options || {};\r\n\r\n    /// We can load Stockfish via Web Workers or via STOCKFISH() if loaded from a <script> tag.\r\n    let engine =\r\n      typeof STOCKFISH === \"function\"\r\n        ? STOCKFISH()\r\n        : new Worker(options.stockfishjs || \"stockfish.js\");\r\n    let announced_game_over;\r\n\r\n    setInterval(() => {\r\n      if (announced_game_over) {\r\n        return;\r\n      }\r\n      if (game.isGameOver()) {\r\n        announced_game_over = true;\r\n      }\r\n    }, 500);\r\n\r\n    const evalMove = () => {\r\n      if (!game.isGameOver()) {\r\n        engine.postMessage(\"ucinewgame\");\r\n        engine.postMessage(\"position fen \" + this.state.fen);\r\n        engine.postMessage(\"eval\");\r\n      }\r\n    };\r\n\r\n    engine.onmessage = (event) => {\r\n      let line;\r\n\r\n      if (event && typeof event === \"object\") {\r\n        line = event.data;\r\n      } else {\r\n        line = event;\r\n      }\r\n      if (line.substr(0, \"Total Evaluation\".length) === \"Total Evaluation\") {\r\n        let score = parseFloat(line.substr(18).substr(0, 4));\r\n        if (!this.props.isWhite) score = score * -1;\r\n        this.sendRating(score, this.state.fen);\r\n      }\r\n    };\r\n\r\n    return {\r\n      start: function () {\r\n        engine.postMessage(\"ucinewgame\");\r\n        engine.postMessage(\"isready\");\r\n        announced_game_over = false;\r\n      },\r\n      evalMove: function () {\r\n        evalMove();\r\n      },\r\n    };\r\n  };\r\n\r\n  increment_whitetime = () => {\r\n    this.setState((state) => ({\r\n      white_time: state.white_time - 1\r\n    }));\r\n  };\r\n\r\n  increment_blacktime = () => {\r\n    this.setState((state) => ({\r\n      black_time: state.black_time - 1\r\n    }));\r\n  };\r\n\r\n\r\n  render() {\r\n\r\n    const startGame = () => {\r\n      if (this.props.host) return (<StartGame onClick={() => this.props.socket.emit(\"start_game\", this.props.roomCode)}>START</StartGame>);\r\n    };\r\n\r\n    const GameControls = () => {\r\n      if (!this.state.gameStarted) {\r\n        return (\r\n          <div style={{ display: \"flex\", justifyContent: \"space-evenly\", width: \"70%\", height: \"9%\" }}>\r\n            {startGame()}\r\n            <ChangeTeam team=\"white\" onClick={e => this.changeTeam(true)} >CHANGE TEAM</ChangeTeam>\r\n          </div>\r\n        )\r\n      }\r\n    }\r\n\r\n    const Gameover = () => {\r\n      if (this.state.isCheckmate) {\r\n        return (\r\n          <div>CHECKMATE BUCKO</div>\r\n        )\r\n      }\r\n      else if (this.state.timeOut) {\r\n        return (\r\n          <div>{team.toUpperCase()} WINS ON TIME</div>\r\n        )\r\n      }\r\n    }\r\n\r\n    let team = this.props.isWhite ? \"white\" : \"black\"\r\n    let status = (this.state.turn ? \"Your\" : \"Not Your\");\r\n\r\n\r\n    return (\r\n      <GameWrapper>\r\n        <Chessboard\r\n          id=\"board!\"\r\n          position={this.state.fen}\r\n          onDrop={this.onDrop}\r\n          boardStyle={boardStyle}\r\n          orientation={team}\r\n          calcWidth={(screen) => Math.min(screen.screenHeight * .9, screen.screenWidth * .53)}\r\n        />\r\n\r\n        <div style={{ display: \"flex\", \"flex-direction\": 'column', \"justify-content\": \"space-between\", height: \"100vh\", width: \"33vw\" }}>\r\n\r\n          <Logo style={{ width: \"50%\", height: \"auto\" }}></Logo>\r\n\r\n\r\n          <GameplaySection>\r\n            <div style={{ display: \"flex\", \"flex-flow\": \"row wrap\", \"justify-content\": \"center\", height: \"fit-content\", width: \"100%\", \"margin-top\": \"17%\" }}>\r\n              <TeamSection>\r\n                <TeamName color=\"white\">WHITE</TeamName>\r\n                <Teams players={this.state.players} isWhite={true} scorecard={this.state.scorecard} gameStarted={this.state.gameStarted} />\r\n              </TeamSection>\r\n              <TeamSection>\r\n                <TeamName>BLACK</TeamName>\r\n                <Teams players={this.state.players} isWhite={false} scorecard={this.state.scorecard} gameStarted={this.state.gameStarted} />\r\n              </TeamSection>\r\n            </div>\r\n\r\n            <Ratings ratings={this.state.ratings} />\r\n\r\n            <GameControls gameStarted={this.state.gameStarted} />\r\n\r\n            <h1 style={{ color: \"#FFFFFF\" }}>{status} Turn</h1>\r\n            <h1 style={{ color: \"#FFFFFF\" }}>{Gameover()}</h1>\r\n            <div style={{ display: \"flex\", height: \"8%\", width: \"30%\", justifyContent: \"center\", alignItems: \"center\" }}>\r\n\r\n              <CountdownTimer totalSeconds={this.state.white_time} increment={this.increment_whitetime} isRunning={this.state.whiteTurn} />\r\n              <CountdownTimer totalSeconds={this.state.black_time} increment={this.increment_blacktime}\r\n                isRunning={(!this.state.whiteTurn && this.state.gameStarted)} />\r\n\r\n            </div>\r\n          </GameplaySection>\r\n\r\n          <section id=\"footer\" style={{ display: \"flex\", width: \"100%\", margin: \"0 0 34px 34px\", 'justify-content': 'start' }}>\r\n            <SettingButton style={{ height: \"48px\", width: \"48px\", }}></SettingButton>\r\n            <RoomCodeButton>ROOM: {this.props.roomCode}</RoomCodeButton>\r\n          </section>\r\n\r\n        </div>\r\n      </GameWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Game;\r\n\r\nconst boardStyle = {\r\n  border: \"10px solid #868BAC\",\r\n  boxShadow: `0 5px 15px rgba(0, 0, 0, 0.5)`,\r\n  \"border-radius\": \"5px\",\r\n  position: \"relative\",\r\n  left: \"5%\"\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}