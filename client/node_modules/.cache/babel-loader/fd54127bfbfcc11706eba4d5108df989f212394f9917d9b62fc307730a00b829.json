{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\catas\\\\Desktop\\\\Basic Chess Game\\\\client\\\\src\\\\components\\\\game.js\";\nimport Chessboard from \"chessboardjsx\";\nimport { React, Component } from \"react\";\nimport styled from \"styled-components\";\nimport { Logo, SettingButton } from \"../StyledComponents\";\nimport { GameWrapper, RoomCode, ChangeTeam, TeamName, StartGame, Members, Tower, GameplaySection } from \"../StyledComponents/gameComponents\";\nimport { TeamSection } from \"../StyledComponents/gameComponents\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst STOCKFISH = window.STOCKFISH;\nconst Teams = _ref => {\n  let {\n    players,\n    isWhite\n  } = _ref;\n  const team = isWhite ? 0 : 1;\n  if (Object.keys(players).length === 0) return;else return /*#__PURE__*/_jsxDEV(Members, {\n    children: players[team].map((player, i) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          width: \"100%\",\n          justifyContent: \"start\",\n          height: \"fit-content\",\n          marginBottom: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Tower, {\n          isWhite: isWhite,\n          style: {\n            height: \"22px\",\n            paddingRight: \"8px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            color: \"#FFFFFF\",\n            height: \"fit-content\"\n          },\n          children: [\" \", player, \" \"]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_c = Teams;\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n    this.sendRating = (rating, position) => {\n      this.props.socket.emit(\"send_rating\", rating, position, this.props.roomCode, this.props.isWhite);\n    };\n    this.changeTeam = () => {\n      this.props.socket.emit(\"change_team\", this.props.isWhite, this.props.roomCode, this.props.username);\n      this.props.setisWhite(!this.props.isWhite);\n    };\n    this.onDrop = _ref2 => {\n      let {\n        sourceSquare,\n        targetSquare\n      } = _ref2;\n      if (!this.state.turn) return;\n      const move = this.props.game.move({\n        from: sourceSquare,\n        to: targetSquare\n      });\n      if (move === null) return; // illegal move  \n\n      // grab player proposed position and show it\n      this.setState({\n        fen: this.props.game.fen()\n      });\n      this.props.game.undo();\n      return new Promise(resolve => {\n        resolve();\n      }).then(() => this.engineGame().evalMove());\n    };\n    this.engineGame = options => {\n      options = options || {};\n\n      /// We can load Stockfish via Web Workers or via STOCKFISH() if loaded from a <script> tag.\n      let engine = typeof STOCKFISH === \"function\" ? STOCKFISH() : new Worker(options.stockfishjs || \"stockfish.js\");\n      let announced_game_over;\n      setInterval(() => {\n        if (announced_game_over) {\n          return;\n        }\n        if (this.props.game.isGameOver()) {\n          announced_game_over = true;\n        }\n      }, 500);\n      const evalMove = () => {\n        if (!this.props.game.isGameOver()) {\n          engine.postMessage(\"ucinewgame\");\n          engine.postMessage(\"position fen \" + this.state.fen);\n          engine.postMessage(\"eval\");\n        }\n      };\n      engine.onmessage = event => {\n        let line;\n        if (event && typeof event === \"object\") {\n          line = event.data;\n        } else {\n          line = event;\n        }\n        if (line.substr(0, \"Total Evaluation\".length) === \"Total Evaluation\") {\n          let score = parseFloat(line.substr(18).substr(0, 4));\n          if (this.state.team === \"black\") score = score * -1;\n          this.sendRating(score, this.state.fen);\n        }\n      };\n      return {\n        start: function () {\n          engine.postMessage(\"ucinewgame\");\n          engine.postMessage(\"isready\");\n          announced_game_over = false;\n        },\n        evalMove: function () {\n          evalMove();\n        }\n      };\n    };\n    this.state = {\n      fen: \"start\",\n      turn: false,\n      players: {}\n    };\n  }\n  componentDidMount() {\n    this.props.socket.on(\"weakest_position\", weakest => {\n      this.setState({\n        fen: weakest\n      });\n      this.props.game.load(weakest);\n    });\n    this.props.socket.on(\"nextTurn\", isWhiteTurn => {\n      if (this.props.isWhite) this.setState({\n        turn: isWhiteTurn\n      });else this.setState({\n        turn: !isWhiteTurn\n      });\n    });\n    this.props.socket.on(\"update_players\", teams => {\n      let newTeams = JSON.parse(teams);\n      this.setState({\n        players: newTeams\n      }); // it is this one\n    });\n\n    this.props.socket.on(\"start_game\", () => {\n      if (this.props.isWhite) this.setState({\n        turn: true\n      });\n    });\n  }\n  render() {\n    let status = this.state.turn ? \"Your\" : \"Not Your\";\n    const startGame = isHost => {\n      if (isHost) return /*#__PURE__*/_jsxDEV(StartGame, {\n        onClick: () => this.props.socket.emit(\"start_game\"),\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 27\n      }, this);\n    };\n    let team = this.props.isWhite ? \"white\" : \"black\";\n    return /*#__PURE__*/_jsxDEV(GameWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(Chessboard, {\n        id: \"board!\",\n        position: this.state.fen,\n        onDrop: this.onDrop,\n        boardStyle: boardStyle,\n        orientation: team,\n        calcWidth: screen => Math.min(screen.screenHeight * .9, screen.screenWidth * .53)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          \"flex-direction\": 'column',\n          \"justify-content\": \"space-between\",\n          height: \"100vh\",\n          width: \"33vw\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Logo, {\n          style: {\n            width: \"50%\",\n            height: \"auto\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GameplaySection, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              \"flex-flow\": \"row wrap\",\n              \"justify-content\": \"center\",\n              height: \"fit-content\",\n              width: \"100%\",\n              \"margin-top\": \"17%\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(TeamSection, {\n              children: [/*#__PURE__*/_jsxDEV(TeamName, {\n                color: \"white\",\n                children: \"WHITE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Teams, {\n                players: this.state.players,\n                isWhite: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TeamSection, {\n              children: [/*#__PURE__*/_jsxDEV(TeamName, {\n                children: \"BLACK\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Teams, {\n                players: this.state.players,\n                isWhite: false\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              justifyContent: \"space-evenly\",\n              width: \"70%\",\n              height: \"9%\"\n            },\n            children: [startGame(this.props.host), /*#__PURE__*/_jsxDEV(ChangeTeam, {\n              team: \"white\",\n              onClick: e => this.changeTeam(true),\n              children: \"CHANGE TEAM\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [status, \" Turn\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          id: \"footer\",\n          style: {\n            display: \"flex\",\n            width: \"100%\",\n            margin: \"0 0 34px 34px\",\n            'justify-content': 'start'\n          },\n          children: [/*#__PURE__*/_jsxDEV(SettingButton, {\n            style: {\n              height: \"48px\",\n              width: \"48px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(RoomCode, {\n            children: [\"ROOM: \", this.props.roomCode]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Game;\nconst boardStyle = {\n  border: \"10px solid #868BAC\",\n  boxShadow: `0 5px 15px rgba(0, 0, 0, 0.5)`,\n  \"border-radius\": \"5px\",\n  position: \"relative\",\n  left: \"5%\"\n};\nvar _c;\n$RefreshReg$(_c, \"Teams\");","map":{"version":3,"names":["Chessboard","React","Component","styled","Logo","SettingButton","GameWrapper","RoomCode","ChangeTeam","TeamName","StartGame","Members","Tower","GameplaySection","TeamSection","STOCKFISH","window","Teams","players","isWhite","team","Object","keys","length","map","player","i","display","width","justifyContent","height","marginBottom","paddingRight","color","Game","constructor","props","sendRating","rating","position","socket","emit","roomCode","changeTeam","username","setisWhite","onDrop","sourceSquare","targetSquare","state","turn","move","game","from","to","setState","fen","undo","Promise","resolve","then","engineGame","evalMove","options","engine","Worker","stockfishjs","announced_game_over","setInterval","isGameOver","postMessage","onmessage","event","line","data","substr","score","parseFloat","start","componentDidMount","on","weakest","load","isWhiteTurn","teams","newTeams","JSON","parse","render","status","startGame","isHost","boardStyle","screen","Math","min","screenHeight","screenWidth","host","e","margin","border","boxShadow","left"],"sources":["C:/Users/catas/Desktop/Basic Chess Game/client/src/components/game.js"],"sourcesContent":["import Chessboard from \"chessboardjsx\";\r\nimport { React, Component } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Logo, SettingButton } from \"../StyledComponents\"\r\nimport { GameWrapper, RoomCode, ChangeTeam, TeamName, StartGame, Members, Tower, GameplaySection } from \"../StyledComponents/gameComponents\"\r\nimport { TeamSection } from \"../StyledComponents/gameComponents\"\r\n\r\n\r\n\r\nconst STOCKFISH = window.STOCKFISH;\r\n\r\nconst Teams = ({ players, isWhite }) => {\r\n  const team = isWhite ? 0 : 1;\r\n\r\n  if (Object.keys(players).length === 0) return;\r\n  else return (\r\n    <Members>\r\n      {players[team].map((player, i) => {\r\n        return (\r\n          <div style={{ display: \"flex\", width: \"100%\", justifyContent: \"start\", height: \"fit-content\", marginBottom: \"10px\" }}>\r\n            <Tower isWhite={isWhite} style={{ height: \"22px\", paddingRight: \"8px\" }} />\r\n            <li style={{ color: \"#FFFFFF\", height: \"fit-content\" }} key={i}> {player} </li>\r\n          </div>\r\n        )\r\n      })}\r\n    </Members>\r\n  )\r\n}\r\n\r\nclass Game extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      fen: \"start\",\r\n      turn: false,\r\n      players: {}\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.socket.on(\"weakest_position\", (weakest) => {\r\n      this.setState({ fen: weakest });\r\n      this.props.game.load(weakest);\r\n    });\r\n    this.props.socket.on(\"nextTurn\", (isWhiteTurn) => {\r\n      if (this.props.isWhite) this.setState({ turn: isWhiteTurn });\r\n      else this.setState({ turn: !isWhiteTurn });\r\n    });\r\n    this.props.socket.on(\"update_players\", (teams) => {\r\n      let newTeams = JSON.parse(teams);\r\n      this.setState({ players: newTeams }); // it is this one\r\n    });\r\n    this.props.socket.on(\"start_game\", () => {\r\n      if (this.props.isWhite) this.setState({ turn: true } );\r\n\r\n    })\r\n  };\r\n\r\n  sendRating = (rating, position) => {\r\n    this.props.socket.emit(\"send_rating\", rating, position, this.props.roomCode, this.props.isWhite);\r\n  };\r\n\r\n  changeTeam = () => {\r\n    this.props.socket.emit(\"change_team\", this.props.isWhite, this.props.roomCode, this.props.username);\r\n    this.props.setisWhite(!this.props.isWhite);\r\n  }\r\n\r\n  onDrop = ({ sourceSquare, targetSquare }) => {\r\n    if (!this.state.turn) return;\r\n    const move = this.props.game.move({ from: sourceSquare, to: targetSquare })\r\n    if (move === null) return; // illegal move  \r\n\r\n    // grab player proposed position and show it\r\n    this.setState({ fen: this.props.game.fen() })\r\n\r\n    this.props.game.undo();\r\n\r\n    return new Promise((resolve) => {\r\n      resolve();\r\n    }).then(() => this.engineGame().evalMove());\r\n  };\r\n\r\n  engineGame = (options) => {\r\n    options = options || {};\r\n\r\n    /// We can load Stockfish via Web Workers or via STOCKFISH() if loaded from a <script> tag.\r\n    let engine =\r\n      typeof STOCKFISH === \"function\"\r\n        ? STOCKFISH()\r\n        : new Worker(options.stockfishjs || \"stockfish.js\");\r\n    let announced_game_over;\r\n\r\n    setInterval(() => {\r\n      if (announced_game_over) {\r\n        return;\r\n      }\r\n      if (this.props.game.isGameOver()) {\r\n        announced_game_over = true;\r\n      }\r\n    }, 500);\r\n\r\n    const evalMove = () => {\r\n      if (!this.props.game.isGameOver()) {\r\n        engine.postMessage(\"ucinewgame\");\r\n        engine.postMessage(\"position fen \" + this.state.fen);\r\n        engine.postMessage(\"eval\");\r\n      }\r\n    };\r\n\r\n    engine.onmessage = (event) => {\r\n      let line;\r\n\r\n      if (event && typeof event === \"object\") {\r\n        line = event.data;\r\n      } else {\r\n        line = event;\r\n      }\r\n      if (line.substr(0, \"Total Evaluation\".length) === \"Total Evaluation\") {\r\n        let score = parseFloat(line.substr(18).substr(0, 4));\r\n        if (this.state.team === \"black\") score = score * -1;\r\n        this.sendRating(score, this.state.fen);\r\n      }\r\n    };\r\n\r\n    return {\r\n      start: function () {\r\n        engine.postMessage(\"ucinewgame\");\r\n        engine.postMessage(\"isready\");\r\n        announced_game_over = false;\r\n      },\r\n      evalMove: function () {\r\n        evalMove();\r\n      },\r\n    };\r\n  };\r\n\r\n\r\n  render() {\r\n\r\n    let status = (this.state.turn ? \"Your\" : \"Not Your\")\r\n\r\n    const startGame = (isHost) => {\r\n      if (isHost) return (<StartGame onClick={() => this.props.socket.emit(\"start_game\")}>Start</StartGame>);\r\n    }\r\n\r\n    let team = this.props.isWhite ? \"white\" : \"black\"\r\n\r\n    return (\r\n      <GameWrapper>\r\n        <Chessboard\r\n          id=\"board!\"\r\n          position={this.state.fen}\r\n          onDrop={this.onDrop}\r\n          boardStyle={boardStyle}\r\n          orientation={team}\r\n          calcWidth={(screen) => Math.min(screen.screenHeight * .9, screen.screenWidth * .53)}\r\n        />\r\n\r\n        <div style={{ display: \"flex\", \"flex-direction\": 'column', \"justify-content\": \"space-between\", height: \"100vh\", width: \"33vw\" }}>\r\n\r\n          <Logo style={{ width: \"50%\", height: \"auto\" }}></Logo>\r\n\r\n\r\n          <GameplaySection>\r\n            <div style={{ display: \"flex\", \"flex-flow\": \"row wrap\", \"justify-content\": \"center\", height: \"fit-content\", width: \"100%\", \"margin-top\": \"17%\" }}>\r\n              <TeamSection>\r\n                <TeamName color=\"white\">WHITE</TeamName>\r\n                <Teams players={this.state.players} isWhite={true} />\r\n              </TeamSection>\r\n              <TeamSection>\r\n                <TeamName>BLACK</TeamName>\r\n                <Teams players={this.state.players} isWhite={false} />\r\n              </TeamSection>\r\n            </div>\r\n\r\n            <div style={{ display: \"flex\", justifyContent: \"space-evenly\", width: \"70%\", height: \"9%\" }}>\r\n              {startGame(this.props.host)}\r\n              <ChangeTeam team=\"white\" onClick={e => this.changeTeam(true)} >CHANGE TEAM</ChangeTeam>\r\n            </div>\r\n\r\n            <h1>{status} Turn</h1>\r\n          </GameplaySection>\r\n\r\n          <section id=\"footer\" style={{ display: \"flex\", width: \"100%\", margin: \"0 0 34px 34px\", 'justify-content': 'start' }}>\r\n            <SettingButton style={{ height: \"48px\", width: \"48px\", }}></SettingButton>\r\n            <RoomCode>ROOM: {this.props.roomCode}</RoomCode>\r\n          </section>\r\n\r\n        </div>\r\n      </GameWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Game;\r\n\r\nconst boardStyle = {\r\n  border: \"10px solid #868BAC\",\r\n  boxShadow: `0 5px 15px rgba(0, 0, 0, 0.5)`,\r\n  \"border-radius\": \"5px\",\r\n  position: \"relative\",\r\n  left: \"5%\"\r\n};"],"mappings":";AAAA,OAAOA,UAAU,MAAM,eAAe;AACtC,SAASC,KAAK,EAAEC,SAAS,QAAQ,OAAO;AACxC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,IAAI,EAAEC,aAAa,QAAQ,qBAAqB;AACzD,SAASC,WAAW,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,OAAO,EAAEC,KAAK,EAAEC,eAAe,QAAQ,oCAAoC;AAC5I,SAASC,WAAW,QAAQ,oCAAoC;AAAA;AAIhE,MAAMC,SAAS,GAAGC,MAAM,CAACD,SAAS;AAElC,MAAME,KAAK,GAAG,QAA0B;EAAA,IAAzB;IAAEC,OAAO;IAAEC;EAAQ,CAAC;EACjC,MAAMC,IAAI,GAAGD,OAAO,GAAG,CAAC,GAAG,CAAC;EAE5B,IAAIE,MAAM,CAACC,IAAI,CAACJ,OAAO,CAAC,CAACK,MAAM,KAAK,CAAC,EAAE,OAAO,KACzC,oBACH,QAAC,OAAO;IAAA,UACLL,OAAO,CAACE,IAAI,CAAC,CAACI,GAAG,CAAC,CAACC,MAAM,EAAEC,CAAC,KAAK;MAChC,oBACE;QAAK,KAAK,EAAE;UAAEC,OAAO,EAAE,MAAM;UAAEC,KAAK,EAAE,MAAM;UAAEC,cAAc,EAAE,OAAO;UAAEC,MAAM,EAAE,aAAa;UAAEC,YAAY,EAAE;QAAO,CAAE;QAAA,wBACnH,QAAC,KAAK;UAAC,OAAO,EAAEZ,OAAQ;UAAC,KAAK,EAAE;YAAEW,MAAM,EAAE,MAAM;YAAEE,YAAY,EAAE;UAAM;QAAE;UAAA;UAAA;UAAA;QAAA,QAAG,eAC3E;UAAI,KAAK,EAAE;YAAEC,KAAK,EAAE,SAAS;YAAEH,MAAM,EAAE;UAAc,CAAE;UAAA,gBAAWL,MAAM;QAAA,GAAXC,CAAC;UAAA;UAAA;UAAA;QAAA,QAAiB;MAAA;QAAA;QAAA;QAAA;MAAA,QAC3E;IAEV,CAAC;EAAC;IAAA;IAAA;IAAA;EAAA,QACM;AAEd,CAAC;AAAA,KAhBKT,KAAK;AAkBX,MAAMiB,IAAI,SAAShC,SAAS,CAAC;EAC3BiC,WAAW,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IAAC,KA2BfC,UAAU,GAAG,CAACC,MAAM,EAAEC,QAAQ,KAAK;MACjC,IAAI,CAACH,KAAK,CAACI,MAAM,CAACC,IAAI,CAAC,aAAa,EAAEH,MAAM,EAAEC,QAAQ,EAAE,IAAI,CAACH,KAAK,CAACM,QAAQ,EAAE,IAAI,CAACN,KAAK,CAACjB,OAAO,CAAC;IAClG,CAAC;IAAA,KAEDwB,UAAU,GAAG,MAAM;MACjB,IAAI,CAACP,KAAK,CAACI,MAAM,CAACC,IAAI,CAAC,aAAa,EAAE,IAAI,CAACL,KAAK,CAACjB,OAAO,EAAE,IAAI,CAACiB,KAAK,CAACM,QAAQ,EAAE,IAAI,CAACN,KAAK,CAACQ,QAAQ,CAAC;MACnG,IAAI,CAACR,KAAK,CAACS,UAAU,CAAC,CAAC,IAAI,CAACT,KAAK,CAACjB,OAAO,CAAC;IAC5C,CAAC;IAAA,KAED2B,MAAM,GAAG,SAAoC;MAAA,IAAnC;QAAEC,YAAY;QAAEC;MAAa,CAAC;MACtC,IAAI,CAAC,IAAI,CAACC,KAAK,CAACC,IAAI,EAAE;MACtB,MAAMC,IAAI,GAAG,IAAI,CAACf,KAAK,CAACgB,IAAI,CAACD,IAAI,CAAC;QAAEE,IAAI,EAAEN,YAAY;QAAEO,EAAE,EAAEN;MAAa,CAAC,CAAC;MAC3E,IAAIG,IAAI,KAAK,IAAI,EAAE,OAAO,CAAC;;MAE3B;MACA,IAAI,CAACI,QAAQ,CAAC;QAAEC,GAAG,EAAE,IAAI,CAACpB,KAAK,CAACgB,IAAI,CAACI,GAAG;MAAG,CAAC,CAAC;MAE7C,IAAI,CAACpB,KAAK,CAACgB,IAAI,CAACK,IAAI,EAAE;MAEtB,OAAO,IAAIC,OAAO,CAAEC,OAAO,IAAK;QAC9BA,OAAO,EAAE;MACX,CAAC,CAAC,CAACC,IAAI,CAAC,MAAM,IAAI,CAACC,UAAU,EAAE,CAACC,QAAQ,EAAE,CAAC;IAC7C,CAAC;IAAA,KAEDD,UAAU,GAAIE,OAAO,IAAK;MACxBA,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;;MAEvB;MACA,IAAIC,MAAM,GACR,OAAOjD,SAAS,KAAK,UAAU,GAC3BA,SAAS,EAAE,GACX,IAAIkD,MAAM,CAACF,OAAO,CAACG,WAAW,IAAI,cAAc,CAAC;MACvD,IAAIC,mBAAmB;MAEvBC,WAAW,CAAC,MAAM;QAChB,IAAID,mBAAmB,EAAE;UACvB;QACF;QACA,IAAI,IAAI,CAAC/B,KAAK,CAACgB,IAAI,CAACiB,UAAU,EAAE,EAAE;UAChCF,mBAAmB,GAAG,IAAI;QAC5B;MACF,CAAC,EAAE,GAAG,CAAC;MAEP,MAAML,QAAQ,GAAG,MAAM;QACrB,IAAI,CAAC,IAAI,CAAC1B,KAAK,CAACgB,IAAI,CAACiB,UAAU,EAAE,EAAE;UACjCL,MAAM,CAACM,WAAW,CAAC,YAAY,CAAC;UAChCN,MAAM,CAACM,WAAW,CAAC,eAAe,GAAG,IAAI,CAACrB,KAAK,CAACO,GAAG,CAAC;UACpDQ,MAAM,CAACM,WAAW,CAAC,MAAM,CAAC;QAC5B;MACF,CAAC;MAEDN,MAAM,CAACO,SAAS,GAAIC,KAAK,IAAK;QAC5B,IAAIC,IAAI;QAER,IAAID,KAAK,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;UACtCC,IAAI,GAAGD,KAAK,CAACE,IAAI;QACnB,CAAC,MAAM;UACLD,IAAI,GAAGD,KAAK;QACd;QACA,IAAIC,IAAI,CAACE,MAAM,CAAC,CAAC,EAAE,kBAAkB,CAACpD,MAAM,CAAC,KAAK,kBAAkB,EAAE;UACpE,IAAIqD,KAAK,GAAGC,UAAU,CAACJ,IAAI,CAACE,MAAM,CAAC,EAAE,CAAC,CAACA,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;UACpD,IAAI,IAAI,CAAC1B,KAAK,CAAC7B,IAAI,KAAK,OAAO,EAAEwD,KAAK,GAAGA,KAAK,GAAG,CAAC,CAAC;UACnD,IAAI,CAACvC,UAAU,CAACuC,KAAK,EAAE,IAAI,CAAC3B,KAAK,CAACO,GAAG,CAAC;QACxC;MACF,CAAC;MAED,OAAO;QACLsB,KAAK,EAAE,YAAY;UACjBd,MAAM,CAACM,WAAW,CAAC,YAAY,CAAC;UAChCN,MAAM,CAACM,WAAW,CAAC,SAAS,CAAC;UAC7BH,mBAAmB,GAAG,KAAK;QAC7B,CAAC;QACDL,QAAQ,EAAE,YAAY;UACpBA,QAAQ,EAAE;QACZ;MACF,CAAC;IACH,CAAC;IAtGC,IAAI,CAACb,KAAK,GAAG;MACXO,GAAG,EAAE,OAAO;MACZN,IAAI,EAAE,KAAK;MACXhC,OAAO,EAAE,CAAC;IACZ,CAAC;EACH;EAEA6D,iBAAiB,GAAG;IAClB,IAAI,CAAC3C,KAAK,CAACI,MAAM,CAACwC,EAAE,CAAC,kBAAkB,EAAGC,OAAO,IAAK;MACpD,IAAI,CAAC1B,QAAQ,CAAC;QAAEC,GAAG,EAAEyB;MAAQ,CAAC,CAAC;MAC/B,IAAI,CAAC7C,KAAK,CAACgB,IAAI,CAAC8B,IAAI,CAACD,OAAO,CAAC;IAC/B,CAAC,CAAC;IACF,IAAI,CAAC7C,KAAK,CAACI,MAAM,CAACwC,EAAE,CAAC,UAAU,EAAGG,WAAW,IAAK;MAChD,IAAI,IAAI,CAAC/C,KAAK,CAACjB,OAAO,EAAE,IAAI,CAACoC,QAAQ,CAAC;QAAEL,IAAI,EAAEiC;MAAY,CAAC,CAAC,CAAC,KACxD,IAAI,CAAC5B,QAAQ,CAAC;QAAEL,IAAI,EAAE,CAACiC;MAAY,CAAC,CAAC;IAC5C,CAAC,CAAC;IACF,IAAI,CAAC/C,KAAK,CAACI,MAAM,CAACwC,EAAE,CAAC,gBAAgB,EAAGI,KAAK,IAAK;MAChD,IAAIC,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAAC;MAChC,IAAI,CAAC7B,QAAQ,CAAC;QAAErC,OAAO,EAAEmE;MAAS,CAAC,CAAC,CAAC,CAAC;IACxC,CAAC,CAAC;;IACF,IAAI,CAACjD,KAAK,CAACI,MAAM,CAACwC,EAAE,CAAC,YAAY,EAAE,MAAM;MACvC,IAAI,IAAI,CAAC5C,KAAK,CAACjB,OAAO,EAAE,IAAI,CAACoC,QAAQ,CAAC;QAAEL,IAAI,EAAE;MAAK,CAAC,CAAE;IAExD,CAAC,CAAC;EACJ;EAiFAsC,MAAM,GAAG;IAEP,IAAIC,MAAM,GAAI,IAAI,CAACxC,KAAK,CAACC,IAAI,GAAG,MAAM,GAAG,UAAW;IAEpD,MAAMwC,SAAS,GAAIC,MAAM,IAAK;MAC5B,IAAIA,MAAM,EAAE,oBAAQ,QAAC,SAAS;QAAC,OAAO,EAAE,MAAM,IAAI,CAACvD,KAAK,CAACI,MAAM,CAACC,IAAI,CAAC,YAAY,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAkB;IACvG,CAAC;IAED,IAAIrB,IAAI,GAAG,IAAI,CAACgB,KAAK,CAACjB,OAAO,GAAG,OAAO,GAAG,OAAO;IAEjD,oBACE,QAAC,WAAW;MAAA,wBACV,QAAC,UAAU;QACT,EAAE,EAAC,QAAQ;QACX,QAAQ,EAAE,IAAI,CAAC8B,KAAK,CAACO,GAAI;QACzB,MAAM,EAAE,IAAI,CAACV,MAAO;QACpB,UAAU,EAAE8C,UAAW;QACvB,WAAW,EAAExE,IAAK;QAClB,SAAS,EAAGyE,MAAM,IAAKC,IAAI,CAACC,GAAG,CAACF,MAAM,CAACG,YAAY,GAAG,EAAE,EAAEH,MAAM,CAACI,WAAW,GAAG,GAAG;MAAE;QAAA;QAAA;QAAA;MAAA,QACpF,eAEF;QAAK,KAAK,EAAE;UAAEtE,OAAO,EAAE,MAAM;UAAE,gBAAgB,EAAE,QAAQ;UAAE,iBAAiB,EAAE,eAAe;UAAEG,MAAM,EAAE,OAAO;UAAEF,KAAK,EAAE;QAAO,CAAE;QAAA,wBAE9H,QAAC,IAAI;UAAC,KAAK,EAAE;YAAEA,KAAK,EAAE,KAAK;YAAEE,MAAM,EAAE;UAAO;QAAE;UAAA;UAAA;UAAA;QAAA,QAAQ,eAGtD,QAAC,eAAe;UAAA,wBACd;YAAK,KAAK,EAAE;cAAEH,OAAO,EAAE,MAAM;cAAE,WAAW,EAAE,UAAU;cAAE,iBAAiB,EAAE,QAAQ;cAAEG,MAAM,EAAE,aAAa;cAAEF,KAAK,EAAE,MAAM;cAAE,YAAY,EAAE;YAAM,CAAE;YAAA,wBAC/I,QAAC,WAAW;cAAA,wBACV,QAAC,QAAQ;gBAAC,KAAK,EAAC,OAAO;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAAiB,eACxC,QAAC,KAAK;gBAAC,OAAO,EAAE,IAAI,CAACqB,KAAK,CAAC/B,OAAQ;gBAAC,OAAO,EAAE;cAAK;gBAAA;gBAAA;gBAAA;cAAA,QAAG;YAAA;cAAA;cAAA;cAAA;YAAA,QACzC,eACd,QAAC,WAAW;cAAA,wBACV,QAAC,QAAQ;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAAiB,eAC1B,QAAC,KAAK;gBAAC,OAAO,EAAE,IAAI,CAAC+B,KAAK,CAAC/B,OAAQ;gBAAC,OAAO,EAAE;cAAM;gBAAA;gBAAA;gBAAA;cAAA,QAAG;YAAA;cAAA;cAAA;cAAA;YAAA,QAC1C;UAAA;YAAA;YAAA;YAAA;UAAA,QACV,eAEN;YAAK,KAAK,EAAE;cAAES,OAAO,EAAE,MAAM;cAAEE,cAAc,EAAE,cAAc;cAAED,KAAK,EAAE,KAAK;cAAEE,MAAM,EAAE;YAAK,CAAE;YAAA,WACzF4D,SAAS,CAAC,IAAI,CAACtD,KAAK,CAAC8D,IAAI,CAAC,eAC3B,QAAC,UAAU;cAAC,IAAI,EAAC,OAAO;cAAC,OAAO,EAAEC,CAAC,IAAI,IAAI,CAACxD,UAAU,CAAC,IAAI,CAAE;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAA0B;UAAA;YAAA;YAAA;YAAA;UAAA,QACnF,eAEN;YAAA,WAAK8C,MAAM;UAAA;YAAA;YAAA;YAAA;UAAA,QAAW;QAAA;UAAA;UAAA;UAAA;QAAA,QACN,eAElB;UAAS,EAAE,EAAC,QAAQ;UAAC,KAAK,EAAE;YAAE9D,OAAO,EAAE,MAAM;YAAEC,KAAK,EAAE,MAAM;YAAEwE,MAAM,EAAE,eAAe;YAAE,iBAAiB,EAAE;UAAQ,CAAE;UAAA,wBAClH,QAAC,aAAa;YAAC,KAAK,EAAE;cAAEtE,MAAM,EAAE,MAAM;cAAEF,KAAK,EAAE;YAAQ;UAAE;YAAA;YAAA;YAAA;UAAA,QAAiB,eAC1E,QAAC,QAAQ;YAAA,qBAAQ,IAAI,CAACQ,KAAK,CAACM,QAAQ;UAAA;YAAA;YAAA;YAAA;UAAA,QAAY;QAAA;UAAA;UAAA;UAAA;QAAA,QACxC;MAAA;QAAA;QAAA;QAAA;MAAA,QAEN;IAAA;MAAA;MAAA;MAAA;IAAA,QACM;EAElB;AACF;AAEA,eAAeR,IAAI;AAEnB,MAAM0D,UAAU,GAAG;EACjBS,MAAM,EAAE,oBAAoB;EAC5BC,SAAS,EAAG,+BAA8B;EAC1C,eAAe,EAAE,KAAK;EACtB/D,QAAQ,EAAE,UAAU;EACpBgE,IAAI,EAAE;AACR,CAAC;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}