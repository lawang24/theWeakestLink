{"ast":null,"code":"import _slicedToArray from\"C:/Users/catas/Desktop/Basic Chess Game/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";// PlayerContext.js\nimport{createContext,useContext,useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";export var PlayerContext=/*#__PURE__*/createContext();export function usePlayerContext(){return useContext(PlayerContext);}export function PlayerProvider(_ref){var children=_ref.children,socket=_ref.socket;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isInRoom=_useState2[0],setInRoom=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),roomCode=_useState4[0],setRoomCode=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),host=_useState6[0],setHost=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),username=_useState8[0],setUsername=_useState8[1];var _useState9=useState(true),_useState10=_slicedToArray(_useState9,2),isWhite=_useState10[0],setIsWhite=_useState10[1];var value={socket:socket,isInRoom:isInRoom,setInRoom:setInRoom,roomCode:roomCode,setRoomCode:setRoomCode,host:host,setHost:setHost,username:username,setUsername:setUsername,isWhite:isWhite,setIsWhite:setIsWhite};return/*#__PURE__*/_jsx(PlayerContext.Provider,{value:value,children:children});}","map":{"version":3,"names":["createContext","useContext","useState","PlayerContext","usePlayerContext","PlayerProvider","children","socket","isInRoom","setInRoom","roomCode","setRoomCode","host","setHost","username","setUsername","isWhite","setIsWhite","value"],"sources":["C:/Users/catas/Desktop/Basic Chess Game/client/src/contexts/PlayerContext.js"],"sourcesContent":["// PlayerContext.js\r\n\r\nimport { createContext, useContext, useState } from 'react';\r\n\r\nexport const PlayerContext = createContext();\r\n\r\nexport function usePlayerContext() {\r\n  return useContext(PlayerContext);\r\n}\r\n\r\nexport function PlayerProvider({ children , socket }) {\r\n  const [isInRoom, setInRoom] = useState(false);\r\n  const [roomCode, setRoomCode] = useState(\"\");\r\n  const [host, setHost] = useState(false);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [isWhite, setIsWhite] = useState(true);\r\n\r\n  const value = {\r\n    socket,\r\n    isInRoom,\r\n    setInRoom,\r\n    roomCode,\r\n    setRoomCode,\r\n    host,\r\n    setHost,\r\n    username,\r\n    setUsername,\r\n    isWhite,\r\n    setIsWhite,\r\n  };\r\n  \r\n  return <PlayerContext.Provider value={value}>{children}</PlayerContext.Provider>;\r\n  \r\n}\r\n"],"mappings":"oIAAA;AAEA,OAASA,aAAa,CAAEC,UAAU,CAAEC,QAAQ,KAAQ,OAAO,CAAC,2CAE5D,MAAO,IAAMC,cAAa,cAAGH,aAAa,EAAE,CAE5C,MAAO,SAASI,iBAAgB,EAAG,CACjC,MAAOH,WAAU,CAACE,aAAa,CAAC,CAClC,CAEA,MAAO,SAASE,eAAc,MAAwB,IAArBC,SAAQ,MAARA,QAAQ,CAAGC,MAAM,MAANA,MAAM,CAChD,cAA8BL,QAAQ,CAAC,KAAK,CAAC,wCAAtCM,QAAQ,eAAEC,SAAS,eAC1B,eAAgCP,QAAQ,CAAC,EAAE,CAAC,yCAArCQ,QAAQ,eAAEC,WAAW,eAC5B,eAAwBT,QAAQ,CAAC,KAAK,CAAC,yCAAhCU,IAAI,eAAEC,OAAO,eACpB,eAAgCX,QAAQ,CAAC,EAAE,CAAC,yCAArCY,QAAQ,eAAEC,WAAW,eAC5B,eAA8Bb,QAAQ,CAAC,IAAI,CAAC,0CAArCc,OAAO,gBAAEC,UAAU,gBAE1B,GAAMC,MAAK,CAAG,CACZX,MAAM,CAANA,MAAM,CACNC,QAAQ,CAARA,QAAQ,CACRC,SAAS,CAATA,SAAS,CACTC,QAAQ,CAARA,QAAQ,CACRC,WAAW,CAAXA,WAAW,CACXC,IAAI,CAAJA,IAAI,CACJC,OAAO,CAAPA,OAAO,CACPC,QAAQ,CAARA,QAAQ,CACRC,WAAW,CAAXA,WAAW,CACXC,OAAO,CAAPA,OAAO,CACPC,UAAU,CAAVA,UACF,CAAC,CAED,mBAAO,KAAC,aAAa,CAAC,QAAQ,EAAC,KAAK,CAAEC,KAAM,UAAEZ,QAAQ,EAA0B,CAElF"},"metadata":{},"sourceType":"module","externalDependencies":[]}