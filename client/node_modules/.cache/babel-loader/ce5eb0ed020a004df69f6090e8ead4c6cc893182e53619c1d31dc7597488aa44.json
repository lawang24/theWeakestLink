{"ast":null,"code":"var _jsxFileName = \"/Users/lawrence/Documents/Projects/theWeakestLink/client/src/main_pages/gameFunctional.js\",\n  _s = $RefreshSig$();\nimport Chessboard from \"chessboardjsx\";\nimport { Chess } from \"chess.js\";\nimport { useState, useEffect, useRef } from \"react\";\nimport { SettingButton } from \"../styled_components/settingButton\";\nimport { Logo } from \"../styled_components\";\nimport { GameWrapper, RoomCode as RoomCodeButton, TeamName, GameplaySection, NonChessboard } from \"../styled_components/gameComponents\";\nimport { TeamSection } from \"../styled_components/gameComponents\";\nimport { Teams, Ratings, Gameover } from \"../items/display_components.js\";\nimport { GameControls } from \"../items/interactive_components\";\nimport { CountdownTimer } from \"../items/client_clock.js\";\nimport { usePlayerContext } from '../contexts/PlayerContext';\nimport { begin_game_handler, next_turn_handler, room_joined_handler, timer_handler, update_teams_handler } from \"../handlers/socket_handlers.js\";\nimport { sendRating, squareStyling } from \"../handlers/helpers.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst STOCKFISH = window.STOCKFISH;\nconst game = new Chess();\nconst engine = typeof STOCKFISH === \"function\" ? STOCKFISH() : new Worker(options.stockfishjs || \"stockfish.js\");\nconsole.log(\"Game functional loaded\");\nconst engineGame = options => {\n  options = options || {};\n  const evalMove = () => {\n    engine.postMessage(\"ucinewgame\");\n    console.log(\"proposedMove.current:\" + proposedMove.current);\n    engine.postMessage(\"position fen \" + proposedMove.current);\n    // engine.postMessage(\"eval\");\n    // if (!game.isGameOver()) {\n    //   engine.postMessage(\"ucinewgame\");\n    //   console.log(\"proposedMove.current:\" + proposedMove.current)\n    //   engine.postMessage(\"position fen \" + proposedMove.current);\n    //   engine.postMessage(\"eval\");\n    // }\n  };\n\n  engine.onmessage = event => {\n    let line;\n    if (event && typeof event === \"object\") {\n      line = event.data;\n    } else {\n      line = event;\n    }\n    console.log(line);\n    if (line.substr(0, \"Total Evaluation\".length) === \"Total Evaluation\") {\n      let score = parseFloat(line.substr(18).substr(0, 4));\n      if (!isWhite) score = score * -1;\n      sendRating(socket, score, proposedMove.current, roomCode, isWhite, username, target, source);\n    }\n  };\n  return {\n    start: function () {\n      console.log(\"starting\");\n      engine.postMessage(\"ucinewgame\");\n      engine.postMessage(\"isready\");\n      // announced_game_over = false;\n    },\n\n    evalMove: function () {\n      evalMove();\n    }\n  };\n};\nconst Game = () => {\n  _s();\n  const [fen, setFen] = useState(\"start\");\n  const [turn, setTurn] = useState(false);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [canSubmitMove, setCanSubmitMove] = useState(false);\n  const [whiteTurn, setWhiteTurn] = useState(false);\n  const [isCheckmate, setIsCheckmate] = useState(false);\n  const [timeOut, setTimeOut] = useState(false);\n  const [whiteTime, setWhiteTime] = useState(50);\n  const [blackTime, setBlackTime] = useState(50);\n  const [whiteTeam, setWhiteTeam] = useState(new Map());\n  const [blackTeam, setBlackTeam] = useState(new Map());\n  const [history, setHistory] = useState([]);\n  const [squareStyles, setSquareStyles] = useState({});\n  const proposedMove = useRef(\"\");\n  const target = useRef(\"\");\n  const source = useRef(\"\");\n  const {\n    socket,\n    roomCode,\n    setRoomCode,\n    host,\n    isWhite,\n    setIsWhite,\n    username\n  } = usePlayerContext();\n  useEffect(() => {\n    room_joined_handler(socket, setRoomCode, setIsWhite);\n    next_turn_handler(socket, game, setFen, setIsCheckmate, setGameStarted, setWhiteTurn, setTurn, isWhite, setCanSubmitMove, roomCode, setHistory, setSquareStyles);\n    update_teams_handler(socket, setWhiteTeam, setBlackTeam);\n    begin_game_handler(socket, game, setWhiteTurn, setGameStarted, setFen, setIsCheckmate, setTimeOut, isWhite, setTurn, setCanSubmitMove, setSquareStyles);\n    timer_handler(socket, setGameStarted, setTimeOut, setTurn, setCanSubmitMove, roomCode, setWhiteTime, setBlackTime);\n    return () => {\n      socket.removeAllListeners();\n    };\n  }, [isWhite, roomCode, setIsWhite, setRoomCode, socket]);\n  const onDrop = _ref => {\n    let {\n      sourceSquare,\n      targetSquare\n    } = _ref;\n    if (!turn || !canSubmitMove) return;\n    const move = game.move({\n      from: sourceSquare,\n      to: targetSquare\n    });\n    if (move === null) return; // illegal move  \n    console.log(game.fen());\n    // grab player proposed position and show it\n    proposedMove.current = game.fen();\n    target.current = targetSquare;\n    source.current = sourceSquare;\n    setFen(proposedMove.current);\n    setCanSubmitMove(false);\n\n    // game.undo();\n\n    // highlight the move made\n    setSquareStyles(squareStyling(sourceSquare, targetSquare));\n    return new Promise(resolve => {\n      resolve();\n    }).then(() => engineGame().evalMove());\n  };\n  return /*#__PURE__*/_jsxDEV(GameWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Chessboard, {\n      id: \"board!\",\n      position: fen,\n      onDrop: onDrop,\n      boardStyle: boardStyle,\n      orientation: isWhite ? \"white\" : \"black\",\n      calcWidth: screen => Math.min(screen.screenHeight * .9, screen.screenWidth * .53),\n      squareStyles: squareStyles\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NonChessboard, {\n      children: [/*#__PURE__*/_jsxDEV(Logo, {\n        style: {\n          width: \"50%\",\n          height: \"auto\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            \"flex-flow\": \"row wrap\",\n            \"justify-content\": \"center\",\n            height: \"fit-content\",\n            width: \"100%\",\n            \"margin-top\": \"17%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(TeamSection, {\n            children: [/*#__PURE__*/_jsxDEV(TeamName, {\n              color: \"white\",\n              children: \"WHITE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Teams, {\n              team: whiteTeam,\n              isWhite: true,\n              gameStarted: gameStarted\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TeamSection, {\n            children: [/*#__PURE__*/_jsxDEV(TeamName, {\n              children: \"BLACK\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Teams, {\n              team: blackTeam,\n              isWhite: false,\n              gameStarted: gameStarted\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Ratings, {\n          team: isWhite ? whiteTeam : blackTeam,\n          gameStarted: gameStarted\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), !gameStarted && /*#__PURE__*/_jsxDEV(GameControls, {\n          socket: socket,\n          roomCode: roomCode,\n          host: host,\n          isWhite: isWhite,\n          username: username,\n          setIsWhite: setIsWhite\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 28\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            color: \"#FFFFFF\"\n          },\n          children: [turn ? \"Your\" : \"Not Your\", \" Turn\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            color: \"#FFFFFF\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Gameover, {\n            isCheckmate: isCheckmate,\n            timeOut: timeOut,\n            whiteTurn: whiteTurn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            height: \"8%\",\n            width: \"30%\",\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(CountdownTimer, {\n            totalSeconds: whiteTime,\n            isRunning: whiteTurn && gameStarted\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CountdownTimer, {\n            totalSeconds: blackTime,\n            isRunning: !whiteTurn && gameStarted\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"section\", {\n        id: \"footer\",\n        style: {\n          display: \"flex\",\n          width: \"100%\",\n          margin: \"0 0 34px 34px\",\n          'justify-content': 'start'\n        },\n        children: [/*#__PURE__*/_jsxDEV(SettingButton, {\n          setWhiteTime: setWhiteTime,\n          setBlackTime: setBlackTime,\n          socket: socket\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RoomCodeButton, {\n          children: [\"ROOM: \", roomCode]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"tj5tzfPE9ASYpo60jyKYdWPziUE=\", false, function () {\n  return [usePlayerContext];\n});\n_c = Game;\nexport default Game;\nconst boardStyle = {\n  border: \"10px solid #868BAC\",\n  boxShadow: `0 5px 15px rgba(0, 0, 0, 0.5)`,\n  \"border-radius\": \"5px\",\n  position: \"relative\",\n  left: \"5%\"\n};\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["Chessboard","Chess","useState","useEffect","useRef","SettingButton","Logo","GameWrapper","RoomCode","RoomCodeButton","TeamName","GameplaySection","NonChessboard","TeamSection","Teams","Ratings","Gameover","GameControls","CountdownTimer","usePlayerContext","begin_game_handler","next_turn_handler","room_joined_handler","timer_handler","update_teams_handler","sendRating","squareStyling","STOCKFISH","window","game","engine","Worker","options","stockfishjs","console","log","engineGame","evalMove","postMessage","proposedMove","current","onmessage","event","line","data","substr","length","score","parseFloat","isWhite","socket","roomCode","username","target","source","start","Game","fen","setFen","turn","setTurn","gameStarted","setGameStarted","canSubmitMove","setCanSubmitMove","whiteTurn","setWhiteTurn","isCheckmate","setIsCheckmate","timeOut","setTimeOut","whiteTime","setWhiteTime","blackTime","setBlackTime","whiteTeam","setWhiteTeam","Map","blackTeam","setBlackTeam","history","setHistory","squareStyles","setSquareStyles","setRoomCode","host","setIsWhite","removeAllListeners","onDrop","sourceSquare","targetSquare","move","from","to","Promise","resolve","then","boardStyle","screen","Math","min","screenHeight","screenWidth","width","height","display","color","justifyContent","alignItems","margin","border","boxShadow","position","left"],"sources":["/Users/lawrence/Documents/Projects/theWeakestLink/client/src/main_pages/gameFunctional.js"],"sourcesContent":["import Chessboard from \"chessboardjsx\";\nimport { Chess } from \"chess.js\";\nimport { useState, useEffect, useRef } from \"react\";\nimport { SettingButton } from \"../styled_components/settingButton\";\nimport { Logo } from \"../styled_components\"\nimport { GameWrapper, RoomCode as RoomCodeButton, TeamName, GameplaySection, NonChessboard } from \"../styled_components/gameComponents\"\nimport { TeamSection } from \"../styled_components/gameComponents\";\nimport { Teams, Ratings, Gameover } from \"../items/display_components.js\";\nimport { GameControls } from \"../items/interactive_components\";\nimport { CountdownTimer } from \"../items/client_clock.js\";\nimport { usePlayerContext } from '../contexts/PlayerContext';\nimport {\n  begin_game_handler, next_turn_handler, room_joined_handler,\n  timer_handler, update_teams_handler\n} from \"../handlers/socket_handlers.js\";\nimport { sendRating, squareStyling } from \"../handlers/helpers.js\"\n\nconst STOCKFISH = window.STOCKFISH;\nconst game = new Chess();\nconst engine =\n  typeof STOCKFISH === \"function\"\n    ? STOCKFISH()\n    : new Worker(options.stockfishjs || \"stockfish.js\");\nconsole.log(\"Game functional loaded\")\n\nconst engineGame = (options) => {\n  options = options || {};\n\n  const evalMove = () => {\n    engine.postMessage(\"ucinewgame\");\n    console.log(\"proposedMove.current:\" + proposedMove.current)\n    engine.postMessage(\"position fen \" + proposedMove.current);\n    // engine.postMessage(\"eval\");\n    // if (!game.isGameOver()) {\n    //   engine.postMessage(\"ucinewgame\");\n    //   console.log(\"proposedMove.current:\" + proposedMove.current)\n    //   engine.postMessage(\"position fen \" + proposedMove.current);\n    //   engine.postMessage(\"eval\");\n    // }\n  };\n\n  engine.onmessage = (event) => {\n    let line;\n\n    if (event && typeof event === \"object\") {\n      line = event.data;\n    } else {\n      line = event;\n    }\n    console.log(line);\n    if (line.substr(0, \"Total Evaluation\".length) === \"Total Evaluation\") {\n      let score = parseFloat(line.substr(18).substr(0, 4));\n      if (!isWhite) score = score * -1;\n      sendRating(socket, score, proposedMove.current, roomCode, isWhite, username, target, source);\n    }\n  };\n\n  return {\n    start: function () {\n      console.log(\"starting\")\n      engine.postMessage(\"ucinewgame\");\n      engine.postMessage(\"isready\");\n      // announced_game_over = false;\n    },\n    evalMove: function () {\n      evalMove();\n    },\n  };\n};\n\nconst Game = () => {\n  const [fen, setFen] = useState(\"start\");\n  const [turn, setTurn] = useState(false);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [canSubmitMove, setCanSubmitMove] = useState(false);\n  const [whiteTurn, setWhiteTurn] = useState(false);\n  const [isCheckmate, setIsCheckmate] = useState(false);\n  const [timeOut, setTimeOut] = useState(false);\n  const [whiteTime, setWhiteTime] = useState(50);\n  const [blackTime, setBlackTime] = useState(50);\n  const [whiteTeam, setWhiteTeam] = useState(new Map());\n  const [blackTeam, setBlackTeam] = useState(new Map());\n  const [history, setHistory] = useState([]);\n  const [squareStyles, setSquareStyles] = useState({});\n  const proposedMove = useRef(\"\");\n  const target = useRef(\"\");\n  const source = useRef(\"\");\n\n\n  const { socket,\n    roomCode,\n    setRoomCode,\n    host,\n    isWhite,\n    setIsWhite,\n    username,\n  } = usePlayerContext();\n\n\n  useEffect(() => {\n\n    room_joined_handler(socket, setRoomCode, setIsWhite);\n\n    next_turn_handler(socket, game, setFen, setIsCheckmate, setGameStarted,\n      setWhiteTurn, setTurn, isWhite, setCanSubmitMove, roomCode, setHistory, setSquareStyles);\n\n    update_teams_handler(socket, setWhiteTeam, setBlackTeam);\n\n    begin_game_handler(socket, game, setWhiteTurn, setGameStarted, setFen, setIsCheckmate,\n      setTimeOut, isWhite, setTurn, setCanSubmitMove, setSquareStyles);\n\n    timer_handler(socket, setGameStarted, setTimeOut, setTurn, setCanSubmitMove, roomCode, setWhiteTime, setBlackTime);\n\n    return () => {\n      socket.removeAllListeners();\n    }\n\n  }, [isWhite, roomCode, setIsWhite, setRoomCode, socket]);\n\n\n\n  const onDrop = ({ sourceSquare, targetSquare }) => {\n\n    if (!turn || !canSubmitMove) return;\n    const move = game.move({ from: sourceSquare, to: targetSquare })\n    if (move === null) return; // illegal move  \n    console.log(game.fen());\n    // grab player proposed position and show it\n    proposedMove.current = game.fen();\n    target.current = targetSquare;\n    source.current = sourceSquare\n    setFen(proposedMove.current);\n    setCanSubmitMove(false);\n\n    // game.undo();\n\n    // highlight the move made\n    setSquareStyles(squareStyling(sourceSquare, targetSquare));\n\n    return new Promise((resolve) => {\n      resolve();\n    }).then(() => engineGame().evalMove());\n  };\n\n  return (\n\n    <GameWrapper>\n      <Chessboard\n        id=\"board!\"\n        position={fen}\n        onDrop={onDrop}\n        boardStyle={boardStyle}\n        orientation={isWhite ? \"white\" : \"black\"}\n        calcWidth={(screen) => Math.min(screen.screenHeight * .9, screen.screenWidth * .53)}\n        squareStyles={squareStyles}\n      />\n\n      <NonChessboard>\n\n        <Logo style={{ width: \"50%\", height: \"auto\" }}></Logo>\n\n        <   >\n          <div style={{ display: \"flex\", \"flex-flow\": \"row wrap\", \"justify-content\": \"center\", height: \"fit-content\", width: \"100%\", \"margin-top\": \"17%\" }}>\n            <TeamSection>\n              <TeamName color=\"white\">WHITE</TeamName>\n              <Teams team={whiteTeam} isWhite={true} gameStarted={gameStarted} />\n            </TeamSection>\n            <TeamSection>\n              <TeamName>BLACK</TeamName>\n              <Teams team={blackTeam} isWhite={false} gameStarted={gameStarted} />\n            </TeamSection>\n          </div>\n\n\n          <Ratings team={isWhite ? whiteTeam : blackTeam} gameStarted={gameStarted} />\n\n          {!gameStarted && <GameControls socket={socket} roomCode={roomCode} host={host}\n            isWhite={isWhite} username={username} setIsWhite={setIsWhite} />}\n\n          <h1 style={{ color: \"#FFFFFF\" }}>{turn ? \"Your\" : \"Not Your\"} Turn</h1>\n          <h1 style={{ color: \"#FFFFFF\" }}>\n            <Gameover isCheckmate={isCheckmate} timeOut={timeOut} whiteTurn={whiteTurn} />\n          </h1>\n\n          <div style={{ display: \"flex\", height: \"8%\", width: \"30%\", justifyContent: \"center\", alignItems: \"center\" }}>\n            <CountdownTimer totalSeconds={whiteTime} isRunning={(whiteTurn && gameStarted)} />\n            <CountdownTimer totalSeconds={blackTime} isRunning={(!whiteTurn && gameStarted)} />\n          </div>\n        </>\n\n        <section id=\"footer\" style={{ display: \"flex\", width: \"100%\", margin: \"0 0 34px 34px\", 'justify-content': 'start' }}>\n          <SettingButton setWhiteTime={setWhiteTime} setBlackTime={setBlackTime} socket={socket} />\n          <RoomCodeButton>ROOM: {roomCode}</RoomCodeButton>\n        </section>\n\n      </NonChessboard>\n\n    </GameWrapper>\n  );\n}\n\nexport default Game;\n\nconst boardStyle = {\n  border: \"10px solid #868BAC\",\n  boxShadow: `0 5px 15px rgba(0, 0, 0, 0.5)`,\n  \"border-radius\": \"5px\",\n  position: \"relative\",\n  left: \"5%\"\n};\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}