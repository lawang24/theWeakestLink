{"ast":null,"code":"import { squareStyling } from \"./helpers\";\nexport const room_joined_handler = (socket, setRoomCode, setIsWhite) => {\n  socket.on(\"room_joined\", (roomCode, isWhite) => {\n    setRoomCode(roomCode);\n    setIsWhite(isWhite);\n  });\n};\nexport const next_turn_handler = (socket, game, setFen, setIsCheckmate, setGameStarted, setWhiteTurn, setTurn, isWhite, setCanSubmitMove, roomCode, setSquareStyles) => {\n  socket.on(\"next_turn\", (worst_fen, nowWhiteTurn, target_square, source_square) => {\n    setFen(worst_fen);\n    game.load(worst_fen);\n    let kingSquare = null;\n\n    // check highlighting\n    if (game.inCheck()) {\n      const pieceColor = nowWhiteTurn ? 'w' : 'b';\n      const boardInCheck = game.board();\n      for (let i = 0; i < boardInCheck.length; i++) {\n        kingSquare = boardInCheck[i].find(piece => piece && piece.type === 'k' && piece.color === pieceColor);\n        if (kingSquare) break;\n      }\n    }\n    setSquareStyles(squareStyling(source_square.current, target_square.current, kingSquare));\n\n    // check game conditions\n    if (game.isCheckmate()) {\n      setIsCheckmate(true);\n      setGameStarted(false);\n      setTurn(false);\n      setCanSubmitMove(false);\n      socket.emit(\"stop_game\", roomCode);\n    }\n    // allow the proper players to move \n    else {\n      setWhiteTurn(whiteTurn => !whiteTurn);\n      setTurn(turn => !turn);\n      if (isWhite === nowWhiteTurn) setCanSubmitMove(true);\n    }\n  });\n};\nexport const update_teams_handler = (socket, setWhiteTeam, setBlackTeam) => {\n  socket.on(\"update_white_team\", white_team => {\n    setWhiteTeam(new Map(JSON.parse(white_team)));\n  });\n  socket.on(\"update_black_team\", black_team => {\n    setBlackTeam(new Map(JSON.parse(black_team)));\n  });\n};\nexport const begin_game_handler = (socket, game, setWhiteTurn, setGameStarted, setFen, setIsCheckmate, setTimeOut, isWhite, setTurn, setCanSubmitMove, setSquareStyles) => {\n  socket.on(\"begin_game\", () => {\n    setWhiteTurn(true);\n    setGameStarted(true);\n    setFen(\"start\");\n    setIsCheckmate(false);\n    setTimeOut(false);\n    setSquareStyles({});\n    if (isWhite) {\n      setTurn(true);\n      setCanSubmitMove(true);\n    }\n    game.reset(); // restart the game\n  });\n};\n\n/* handles socket event listeners for timer functionality in between turns and at the end of the game, resetting the game\nto the initial state in the latter case*/\nexport const timer_handler = (socket, setGameStarted, setTimeOut, setTurn, setCanSubmitMove, roomCode, setWhiteTime, setBlackTime) => {\n  socket.on(\"time_out\", () => {\n    setGameStarted(false);\n    setTimeOut(true);\n    setTurn(false);\n    setCanSubmitMove(false);\n    socket.emit(\"stop_game\", roomCode);\n  });\n  socket.on(\"update_timer\", timer => {\n    console.log(\"update_time:\" + timer.toString());\n    setWhiteTime(timer[0]);\n    setBlackTime(timer[1]);\n  });\n};\n\n// socketHandlers for receiving confirmation of the queried room's existence \nexport function roomListeners(socket, setisHomescreen) {\n  socket.on(\"yes_room\", () => {\n    setisHomescreen(false);\n  });\n  socket.on(\"no_room\", () => {\n    alert(\"Game Not Found\");\n    console.log(\"alert!\");\n  });\n}\n;","map":{"version":3,"names":["squareStyling","room_joined_handler","socket","setRoomCode","setIsWhite","on","roomCode","isWhite","next_turn_handler","game","setFen","setIsCheckmate","setGameStarted","setWhiteTurn","setTurn","setCanSubmitMove","setSquareStyles","worst_fen","nowWhiteTurn","target_square","source_square","load","kingSquare","inCheck","pieceColor","boardInCheck","board","i","length","find","piece","type","color","current","isCheckmate","emit","whiteTurn","turn","update_teams_handler","setWhiteTeam","setBlackTeam","white_team","Map","JSON","parse","black_team","begin_game_handler","setTimeOut","reset","timer_handler","setWhiteTime","setBlackTime","timer","console","log","toString","roomListeners","setisHomescreen","alert"],"sources":["/Users/lawrence/Documents/Projects/theWeakestLink/client/src/handlers/socket_handlers.js"],"sourcesContent":["import { squareStyling } from \"./helpers\";\n\nexport const room_joined_handler = (socket, setRoomCode, setIsWhite) => {\n  socket.on(\"room_joined\", (roomCode, isWhite) => {\n    setRoomCode(roomCode);\n    setIsWhite(isWhite);\n  });\n};\n\nexport const next_turn_handler = (socket, game, setFen, setIsCheckmate, setGameStarted,\n  setWhiteTurn, setTurn, isWhite, setCanSubmitMove, roomCode, setSquareStyles) => {\n\n  socket.on(\"next_turn\", (worst_fen, nowWhiteTurn, target_square, source_square) => {\n    setFen(worst_fen);\n    game.load(worst_fen);\n\n    let kingSquare = null;\n\n    // check highlighting\n    if (game.inCheck()) {\n      const pieceColor = nowWhiteTurn ? 'w' : 'b';\n      const boardInCheck = game.board()\n      for (let i = 0; i < boardInCheck.length; i++) {\n        kingSquare = boardInCheck[i].find(piece => (piece && piece.type === 'k' && piece.color === pieceColor))\n        if (kingSquare) break;\n      }\n    }\n\n    setSquareStyles(squareStyling(source_square.current, target_square.current, kingSquare));\n\n    // check game conditions\n    if (game.isCheckmate()) {\n      setIsCheckmate(true);\n      setGameStarted(false);\n      setTurn(false);\n      setCanSubmitMove(false);\n      socket.emit(\"stop_game\", roomCode);\n    }\n    // allow the proper players to move \n    else {\n      setWhiteTurn((whiteTurn) => !whiteTurn);\n      setTurn((turn) => !turn);\n      if (isWhite === nowWhiteTurn) setCanSubmitMove(true);\n    }\n\n  });\n};\n\nexport const update_teams_handler = (socket, setWhiteTeam, setBlackTeam) => {\n  socket.on(\"update_white_team\", (white_team) => {\n    setWhiteTeam(new Map(JSON.parse(white_team)));\n  });\n\n  socket.on(\"update_black_team\", (black_team) => {\n    setBlackTeam(new Map(JSON.parse(black_team)));\n  });\n};\n\nexport const begin_game_handler = (socket, game, setWhiteTurn, setGameStarted, setFen, setIsCheckmate,\n  setTimeOut, isWhite, setTurn, setCanSubmitMove, setSquareStyles) => {\n\n  socket.on(\"begin_game\", () => {\n    setWhiteTurn(true);\n    setGameStarted(true);\n    setFen(\"start\");\n    setIsCheckmate(false);\n    setTimeOut(false);\n    setSquareStyles({});\n    if (isWhite) {\n      setTurn(true);\n      setCanSubmitMove(true);\n    }\n    game.reset(); // restart the game\n  });\n\n\n};\n\n/* handles socket event listeners for timer functionality in between turns and at the end of the game, resetting the game\nto the initial state in the latter case*/\nexport const timer_handler = (socket, setGameStarted, setTimeOut, setTurn, setCanSubmitMove,\n  roomCode, setWhiteTime, setBlackTime) => {\n\n  socket.on(\"time_out\", () => {\n    setGameStarted(false);\n    setTimeOut(true);\n    setTurn(false);\n    setCanSubmitMove(false);\n    socket.emit(\"stop_game\", roomCode);\n  });\n\n  socket.on(\"update_timer\", (timer) => {\n    console.log(\"update_time:\" + timer.toString())\n    setWhiteTime(timer[0]);\n    setBlackTime(timer[1]);\n  });\n\n};\n\n\n// socketHandlers for receiving confirmation of the queried room's existence \nexport function roomListeners(socket, setisHomescreen) {\n\n  socket.on(\"yes_room\", () => {\n    setisHomescreen(false);\n  });\n\n  socket.on(\"no_room\", () => {\n    alert(\"Game Not Found\");\n    console.log(\"alert!\");\n  });\n\n};\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}