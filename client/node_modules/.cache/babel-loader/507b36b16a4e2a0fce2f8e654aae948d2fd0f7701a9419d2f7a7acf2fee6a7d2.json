{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\catas\\\\Desktop\\\\Basic Chess Game\\\\client\\\\src\\\\contexts\\\\PlayerContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// PlayerContext.js\n\nimport { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PlayerContext = /*#__PURE__*/createContext();\nexport function usePlayerContext() {\n  _s();\n  return useContext(PlayerContext);\n}\n_s(usePlayerContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function PlayerProvider(_ref) {\n  _s2();\n  let {\n    children,\n    socket\n  } = _ref;\n  const [isInRoom, setInRoom] = useState(false);\n  const [roomCode, setRoomCode] = useState(\"\");\n  const [host, setHost] = useState(false);\n  const [username, setUsername] = useState(\"\");\n  const [isWhite, setIsWhite] = useState(true);\n  const value = {\n    socket,\n    isInRoom,\n    setInRoom,\n    roomCode,\n    setRoomCode,\n    host,\n    setHost,\n    username,\n    setUsername,\n    isWhite,\n    setIsWhite\n  };\n  return /*#__PURE__*/_jsxDEV(PlayerContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 10\n  }, this);\n}\n_s2(PlayerProvider, \"PQhreHLD4gT5w9hTi8dW+JAqKac=\");\n_c = PlayerProvider;\nvar _c;\n$RefreshReg$(_c, \"PlayerProvider\");","map":{"version":3,"names":["createContext","useContext","useState","PlayerContext","usePlayerContext","PlayerProvider","children","socket","isInRoom","setInRoom","roomCode","setRoomCode","host","setHost","username","setUsername","isWhite","setIsWhite","value"],"sources":["C:/Users/catas/Desktop/Basic Chess Game/client/src/contexts/PlayerContext.js"],"sourcesContent":["// PlayerContext.js\r\n\r\nimport { createContext, useContext, useState } from 'react';\r\n\r\nexport const PlayerContext = createContext();\r\n\r\nexport function usePlayerContext() {\r\n  return useContext(PlayerContext);\r\n}\r\n\r\nexport function PlayerProvider({ children , socket }) {\r\n  const [isInRoom, setInRoom] = useState(false);\r\n  const [roomCode, setRoomCode] = useState(\"\");\r\n  const [host, setHost] = useState(false);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [isWhite, setIsWhite] = useState(true);\r\n\r\n  const value = {\r\n    socket,\r\n    isInRoom,\r\n    setInRoom,\r\n    roomCode,\r\n    setRoomCode,\r\n    host,\r\n    setHost,\r\n    username,\r\n    setUsername,\r\n    isWhite,\r\n    setIsWhite,\r\n  };\r\n  \r\n  return <PlayerContext.Provider value={value}>{children}</PlayerContext.Provider>;\r\n  \r\n}\r\n"],"mappings":";;;AAAA;;AAEA,SAASA,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAE5D,OAAO,MAAMC,aAAa,gBAAGH,aAAa,EAAE;AAE5C,OAAO,SAASI,gBAAgB,GAAG;EAAA;EACjC,OAAOH,UAAU,CAACE,aAAa,CAAC;AAClC;AAAC,GAFeC,gBAAgB;AAIhC,OAAO,SAASC,cAAc,OAAwB;EAAA;EAAA,IAAvB;IAAEC,QAAQ;IAAGC;EAAO,CAAC;EAClD,MAAM,CAACC,QAAQ,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACvC,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMgB,KAAK,GAAG;IACZX,MAAM;IACNC,QAAQ;IACRC,SAAS;IACTC,QAAQ;IACRC,WAAW;IACXC,IAAI;IACJC,OAAO;IACPC,QAAQ;IACRC,WAAW;IACXC,OAAO;IACPC;EACF,CAAC;EAED,oBAAO,QAAC,aAAa,CAAC,QAAQ;IAAC,KAAK,EAAEC,KAAM;IAAA,UAAEZ;EAAQ;IAAA;IAAA;IAAA;EAAA,QAA0B;AAElF;AAAC,IAvBeD,cAAc;AAAA,KAAdA,cAAc;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}