{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\catas\\\\Desktop\\\\Basic Chess Game\\\\client\\\\src\\\\App.js\";\nimport Chessboard from \"chessboardjsx\";\nimport io from 'socket.io-client';\nimport { Chess } from \"chess.js\";\nimport { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\n// \\\\\\useEffect(() => {\n//   socket.on(\"receive_message\", (data) => {\n//     setMessageReceived(data);\n//   });\n// }, [socket])\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst STOCKFISH = window.STOCKFISH;\nconst socket = io.connect(\"http://localhost:3001\");\nconst game = new Chess();\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.sendRating = () => {\n      socket.emit(\"rating\", this.state.rating);\n    };\n    this.onDrop = _ref => {\n      let {\n        sourceSquare,\n        targetSquare\n      } = _ref;\n      const move = game.move({\n        from: sourceSquare,\n        to: targetSquare\n      });\n\n      // grab player proposed position and show it\n      this.setState({\n        proposed: game.fen()\n      });\n      if (move === null) return; // illegal move  \n\n      game.undo();\n\n      //grab the rating of the move\n      // const rating = engineGame().evalMove(proposed)\n\n      return new Promise(resolve => {\n        this.setState({\n          fen: this.state.proposed\n        });\n        resolve();\n      }).then(() => this.engineGame().evalMove());\n    };\n    this.engineGame = options => {\n      options = options || {};\n\n      /// We can load Stockfish via Web Workers or via STOCKFISH() if loaded from a <script> tag.\n      let engine = typeof STOCKFISH === \"function\" ? STOCKFISH() : new Worker(options.stockfishjs || \"stockfish.js\");\n      let announced_game_over;\n      setInterval(() => {\n        if (announced_game_over) {\n          return;\n        }\n        if (game.isGameOver()) {\n          announced_game_over = true;\n        }\n      }, 500);\n      const evalMove = () => {\n        if (!game.isGameOver()) {\n          engine.postMessage(\"ucinewgame\");\n          engine.postMessage(\"position fen \" + this.state.proposed);\n          engine.postMessage(\"eval\");\n        }\n      };\n      engine.onmessage = event => {\n        let line;\n        if (event && typeof event === \"object\") {\n          line = event.data;\n        } else {\n          line = event;\n        }\n        if (line.substr(0, \"Total Evaluation\".length) === \"Total Evaluation\") {\n          let score = line.substr(18).substr(0, 4);\n          this.setState({\n            rating: score\n          });\n          this.sendMove();\n        }\n      };\n      return {\n        start: function () {\n          engine.postMessage(\"ucinewgame\");\n          engine.postMessage(\"isready\");\n          announced_game_over = false;\n        },\n        evalMove: function () {\n          evalMove();\n        }\n      };\n    };\n    this.state = {\n      fen: \"start\",\n      rating: 'broken',\n      proposed: \"start\"\n    };\n    this.sendMove = this.sendMove.bind(this);\n  }\n  // useEffect(() => {\n  //   socket.on(\"receive_move\", (move) => {\n  //     if (move === null) return;\n  //     setPosition(move);\n  //   });\n  // }, [socket])\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: boardsContainer,\n      children: [/*#__PURE__*/_jsxDEV(Chessboard, {\n        id: \"board!\",\n        position: this.state.proposed,\n        width: 320,\n        onDrop: this.onDrop,\n        boardStyle: boardStyle,\n        orientation: \"white\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: this.state.rating\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }, this);\n  }\n}\nexport default App;\nconst boardsContainer = {\n  display: \"flex\",\n  justifyContent: \"space-around\",\n  alignItems: \"center\"\n};\nconst boardStyle = {\n  borderRadius: \"5px\",\n  boxShadow: `0 5px 15px rgba(0, 0, 0, 0.5)`\n};","map":{"version":3,"names":["Chessboard","io","Chess","Component","PropTypes","STOCKFISH","window","socket","connect","game","App","constructor","props","sendRating","emit","state","rating","onDrop","sourceSquare","targetSquare","move","from","to","setState","proposed","fen","undo","Promise","resolve","then","engineGame","evalMove","options","engine","Worker","stockfishjs","announced_game_over","setInterval","isGameOver","postMessage","onmessage","event","line","data","substr","length","score","sendMove","start","bind","render","boardsContainer","boardStyle","display","justifyContent","alignItems","borderRadius","boxShadow"],"sources":["C:/Users/catas/Desktop/Basic Chess Game/client/src/App.js"],"sourcesContent":["import Chessboard from \"chessboardjsx\";\nimport io from 'socket.io-client';\nimport { Chess } from \"chess.js\";\nimport { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\n\n// \\\\\\useEffect(() => {\n//   socket.on(\"receive_message\", (data) => {\n//     setMessageReceived(data);\n//   });\n// }, [socket])\n\nconst STOCKFISH = window.STOCKFISH;\nconst socket = io.connect(\"http://localhost:3001\");\nconst game = new Chess();\n\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { fen: \"start\", rating: 'broken', proposed: \"start\" };\n    this.sendMove= this.sendMove.bind(this);\n  }\n  \n  sendRating = () => {\n    socket.emit(\"rating\", (this.state.rating));\n  };\n\n  onDrop = ({ sourceSquare, targetSquare }) => {\n    const move = game.move({ from: sourceSquare, to: targetSquare })\n\n    // grab player proposed position and show it\n    this.setState({ proposed: game.fen() })\n\n    if (move === null) return; // illegal move  \n\n    game.undo();\n\n    //grab the rating of the move\n    // const rating = engineGame().evalMove(proposed)\n\n    return new Promise((resolve) => {\n      this.setState({ fen: this.state.proposed });\n      resolve();\n    }).then(() => this.engineGame().evalMove());\n  };\n\n  engineGame = (options) => {\n    options = options || {};\n\n    /// We can load Stockfish via Web Workers or via STOCKFISH() if loaded from a <script> tag.\n    let engine =\n      typeof STOCKFISH === \"function\"\n        ? STOCKFISH()\n        : new Worker(options.stockfishjs || \"stockfish.js\");\n    let announced_game_over;\n\n    setInterval(() => {\n      if (announced_game_over) {\n        return;\n      }\n      if (game.isGameOver()) {\n        announced_game_over = true;\n      }\n    }, 500);\n\n    const evalMove = () => {\n      if (!game.isGameOver()) {\n        engine.postMessage(\"ucinewgame\");\n        engine.postMessage(\"position fen \" + this.state.proposed);\n        engine.postMessage(\"eval\");\n      }\n    };\n\n    engine.onmessage = (event) => {\n      let line;\n\n      if (event && typeof event === \"object\") {\n        line = event.data;\n      } else {\n        line = event;\n      }\n      if (line.substr(0, \"Total Evaluation\".length) === \"Total Evaluation\") {\n        let score = line.substr(18).substr(0, 4);\n        this.setState({ rating: score });\n        this.sendMove();\n      }\n    };\n\n    return {\n      start: function () {\n        engine.postMessage(\"ucinewgame\");\n        engine.postMessage(\"isready\");\n        announced_game_over = false;\n      },\n      evalMove: function () {\n        evalMove();\n      },\n    };\n  };\n\n  // useEffect(() => {\n  //   socket.on(\"receive_move\", (move) => {\n  //     if (move === null) return;\n  //     setPosition(move);\n  //   });\n  // }, [socket])\nrender(){\n  \n\n\n  return(\n    <div style = { boardsContainer } >\n      <Chessboard\n        id=\"board!\"\n        position={this.state.proposed}\n        width={320}\n        onDrop={this.onDrop}\n        boardStyle={boardStyle}\n        orientation=\"white\"\n      />\n      <h1>{this.state.rating}</h1>\n    </div>\n\n  );\n}\n}\n\nexport default App;\n\nconst boardsContainer = {\n  display: \"flex\",\n  justifyContent: \"space-around\",\n  alignItems: \"center\"\n};\nconst boardStyle = {\n  borderRadius: \"5px\",\n  boxShadow: `0 5px 15px rgba(0, 0, 0, 0.5)`\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}