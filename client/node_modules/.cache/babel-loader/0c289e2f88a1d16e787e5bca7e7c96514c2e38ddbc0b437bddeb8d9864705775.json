{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\catas\\\\Desktop\\\\Basic Chess Game\\\\client\\\\src\\\\App.js\";\nimport Chessboard from \"chessboardjsx\";\nimport io from 'socket.io-client';\nimport { Chess } from \"chess.js\";\nimport { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io.connect(\"http://localhost:3001\");\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.sendRating = (rating, position) => {\n      socket.emit(\"player_move\", {\n        rating: rating,\n        position: position\n      });\n      this.setState({\n        turn: false\n      });\n    };\n    this.joinTeam = team => {\n      socket.emit(\"join_team\", team);\n      this.setState({\n        team: team\n      });\n    };\n    this.onDrop = _ref => {\n      let {\n        sourceSquare,\n        targetSquare\n      } = _ref;\n      if (!this.state.turn) return;\n      const move = game.move({\n        from: sourceSquare,\n        to: targetSquare\n      });\n      if (move === null) return; // illegal move  \n\n      // grab player proposed position and show it\n      this.setState({\n        fen: game.fen()\n      });\n      game.undo();\n      return new Promise(resolve => {\n        resolve();\n      }).then(() => this.engineGame().evalMove());\n    };\n    this.engineGame = options => {\n      options = options || {};\n\n      /// We can load Stockfish via Web Workers or via STOCKFISH() if loaded from a <script> tag.\n      let engine = typeof STOCKFISH === \"function\" ? STOCKFISH() : new Worker(options.stockfishjs || \"stockfish.js\");\n      let announced_game_over;\n      setInterval(() => {\n        if (announced_game_over) {\n          return;\n        }\n        if (game.isGameOver()) {\n          announced_game_over = true;\n        }\n      }, 500);\n      const evalMove = () => {\n        if (!game.isGameOver()) {\n          engine.postMessage(\"ucinewgame\");\n          engine.postMessage(\"position fen \" + this.state.fen);\n          engine.postMessage(\"eval\");\n        }\n      };\n      engine.onmessage = event => {\n        let line;\n        if (event && typeof event === \"object\") {\n          line = event.data;\n        } else {\n          line = event;\n        }\n        if (line.substr(0, \"Total Evaluation\".length) === \"Total Evaluation\") {\n          let score = parseFloat(line.substr(18).substr(0, 4));\n          if (this.state.team === \"black\") score = score * -1;\n          this.sendRating(score, this.state.fen);\n        }\n      };\n      return {\n        start: function () {\n          engine.postMessage(\"ucinewgame\");\n          engine.postMessage(\"isready\");\n          announced_game_over = false;\n        },\n        evalMove: function () {\n          evalMove();\n        }\n      };\n    };\n    this.state = {\n      fen: \"start\",\n      turn: true,\n      team: \"none\"\n    };\n    this.sendRating = this.sendRating.bind(this);\n    this.onDrop = this.onDrop.bind(this);\n    this.joinTeam = this.joinTeam.bind(this);\n  }\n  componentDidMount() {\n    socket.on(\"weakest_position\", weakest => {\n      this.setState({\n        fen: weakest\n      });\n      game.load(weakest);\n    });\n    socket.on(\"play\", () => {\n      this.setState({\n        turn: true\n      });\n    });\n  }\n  render() {\n    let status = this.state.turn ? \"Your\" : \"Not Your\";\n    let team;\n    switch (this.state.team) {\n      case \"white\":\n        team = \"White\";\n        break;\n      case \"black\":\n        team = \"Black\";\n        break;\n      default:\n        team = \"Spectating\";\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: boardsContainer,\n      children: [/*#__PURE__*/_jsxDEV(Chessboard, {\n        id: \"board!\",\n        position: this.state.fen,\n        width: 320,\n        onDrop: this.onDrop,\n        boardStyle: boardStyle,\n        orientation: \"white\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        value: \"white\",\n        onClick: e => this.joinTeam(e.target.value, true),\n        children: \"Join White Team\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        value: \"black\",\n        onClick: e => this.joinTeam(e.target.value, false),\n        children: \"Join Black Team\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [team, \" Player\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [status, \" Turn \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;\nconst boardsContainer = {\n  display: \"flex\",\n  justifyContent: \"space-evenly\",\n  alignItems: \"center\"\n};\nconst boardStyle = {\n  borderRadius: \"5px\",\n  boxShadow: `0 5px 15px rgba(0, 0, 0, 0.5)`\n};","map":{"version":3,"names":["Chessboard","io","Chess","Component","socket","connect","App","constructor","props","sendRating","rating","position","emit","setState","turn","joinTeam","team","onDrop","sourceSquare","targetSquare","state","move","game","from","to","fen","undo","Promise","resolve","then","engineGame","evalMove","options","engine","STOCKFISH","Worker","stockfishjs","announced_game_over","setInterval","isGameOver","postMessage","onmessage","event","line","data","substr","length","score","parseFloat","start","bind","componentDidMount","on","weakest","load","render","status","boardsContainer","boardStyle","e","target","value","display","justifyContent","alignItems","borderRadius","boxShadow"],"sources":["C:/Users/catas/Desktop/Basic Chess Game/client/src/App.js"],"sourcesContent":["import Chessboard from \"chessboardjsx\";\nimport io from 'socket.io-client';\nimport { Chess } from \"chess.js\";\nimport { Component } from \"react\";\n\nconst socket = io.connect(\"http://localhost:3001\");\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fen: \"start\",\n      turn: true,\n      team: \"none\"\n    };\n    this.sendRating = this.sendRating.bind(this);\n    this.onDrop = this.onDrop.bind(this);\n    this.joinTeam = this.joinTeam.bind(this);\n  };\n\n  componentDidMount() {\n    socket.on(\"weakest_position\", (weakest) => {\n      this.setState({ fen: weakest });\n      game.load(weakest);\n    });\n    socket.on(\"play\", () => {\n      this.setState({ turn: true });\n    });\n  };\n\n  sendRating = (rating, position) => {\n    socket.emit(\"player_move\", ({ rating: rating, position: position }));\n    this.setState({ turn: false });\n  };\n\n  joinTeam = (team) => {\n    socket.emit(\"join_team\", team);\n    this.setState({ team: team });\n  }\n\n  onDrop = ({ sourceSquare, targetSquare }) => {\n    if (!this.state.turn) return;\n    const move = game.move({ from: sourceSquare, to: targetSquare })\n    if (move === null) return; // illegal move  \n\n    // grab player proposed position and show it\n    this.setState({ fen: game.fen() })\n\n    game.undo();\n\n    return new Promise((resolve) => {\n      resolve();\n    }).then(() => this.engineGame().evalMove());\n  };\n\n  engineGame = (options) => {\n    options = options || {};\n\n    /// We can load Stockfish via Web Workers or via STOCKFISH() if loaded from a <script> tag.\n    let engine =\n      typeof STOCKFISH === \"function\"\n        ? STOCKFISH()\n        : new Worker(options.stockfishjs || \"stockfish.js\");\n    let announced_game_over;\n\n    setInterval(() => {\n      if (announced_game_over) {\n        return;\n      }\n      if (game.isGameOver()) {\n        announced_game_over = true;\n      }\n    }, 500);\n\n    const evalMove = () => {\n      if (!game.isGameOver()) {\n        engine.postMessage(\"ucinewgame\");\n        engine.postMessage(\"position fen \" + this.state.fen);\n        engine.postMessage(\"eval\");\n      }\n    };\n\n    engine.onmessage = (event) => {\n      let line;\n\n      if (event && typeof event === \"object\") {\n        line = event.data;\n      } else {\n        line = event;\n      }\n      if (line.substr(0, \"Total Evaluation\".length) === \"Total Evaluation\") {\n        let score = parseFloat(line.substr(18).substr(0, 4));\n        if (this.state.team === \"black\") score = score * -1;\n        this.sendRating(score, this.state.fen);\n      }\n    };\n\n    return {\n      start: function () {\n        engine.postMessage(\"ucinewgame\");\n        engine.postMessage(\"isready\");\n        announced_game_over = false;\n      },\n      evalMove: function () {\n        evalMove();\n      },\n    };\n  };\n\n  render() {\n\n    let status = (this.state.turn ? \"Your\" : \"Not Your\")\n   \n    let team;\n    switch (this.state.team){\n      case \"white\":\n        team = \"White\"\n        break;\n      case \"black\":\n        team = \"Black\"\n        break;\n      default :\n        team = \"Spectating\"\n    }\n\n    return (\n      <div style={boardsContainer} >\n        <Chessboard\n          id=\"board!\"\n          position={this.state.fen}\n          width={320}\n          onDrop={this.onDrop}\n          boardStyle={boardStyle}\n          orientation=\"white\"\n        />\n        <button value=\"white\" onClick={e => this.joinTeam(e.target.value, true)} >Join White Team</button>\n        <button value=\"black\" onClick={e => this.joinTeam(e.target.value, false)} >Join Black Team</button>\n        <h1>{team} Player</h1>\n        <h1>{status} Turn </h1>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\nconst boardsContainer = {\n  display: \"flex\",\n  justifyContent: \"space-evenly\",\n  alignItems: \"center\"\n};\nconst boardStyle = {\n  borderRadius: \"5px\",\n  boxShadow: `0 5px 15px rgba(0, 0, 0, 0.5)`\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}