{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\catas\\\\Desktop\\\\Basic Chess Game\\\\client\\\\src\\\\pages\\\\game.js\";\nimport Chessboard from \"chessboardjsx\";\nimport { React, Component } from \"react\";\nimport { Logo, SettingButton } from \"../StyledComponents\";\nimport { GameWrapper, RoomCode as RoomCodeButton, ChangeTeam, TeamName, StartGame, GameplaySection } from \"../StyledComponents/gameComponents\";\nimport { TeamSection } from \"../StyledComponents/gameComponents\";\nimport { Chess } from \"chess.js\";\nimport { Teams, Ratings, CountdownTimer } from \"../items/displayItems\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst STOCKFISH = window.STOCKFISH;\nconst game = new Chess();\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n    this.sendRating = (rating, position) => {\n      this.props.socket.emit(\"send_rating\", rating, position, this.props.roomCode, this.props.isWhite, this.props.username);\n    };\n    this.changeTeam = () => {\n      this.props.socket.emit(\"change_team\", this.props.isWhite, this.props.roomCode, this.props.username);\n      this.props.setisWhite(!this.props.isWhite);\n    };\n    this.onDrop = _ref => {\n      let {\n        sourceSquare,\n        targetSquare\n      } = _ref;\n      console.log(this.state.canSubmitMove);\n      if (!this.state.turn || !this.state.canSubmitMove) return;\n      const move = game.move({\n        from: sourceSquare,\n        to: targetSquare\n      });\n      if (move === null) return; // illegal move  \n\n      // grab player proposed position and show it\n      this.setState({\n        fen: game.fen()\n      });\n      this.setState({\n        canSubmitMove: false\n      });\n      game.undo();\n      return new Promise(resolve => {\n        resolve();\n      }).then(() => this.engineGame().evalMove());\n    };\n    this.engineGame = options => {\n      options = options || {};\n\n      /// We can load Stockfish via Web Workers or via STOCKFISH() if loaded from a <script> tag.\n      let engine = typeof STOCKFISH === \"function\" ? STOCKFISH() : new Worker(options.stockfishjs || \"stockfish.js\");\n      let announced_game_over;\n      setInterval(() => {\n        if (announced_game_over) {\n          return;\n        }\n        if (game.isGameOver()) {\n          announced_game_over = true;\n        }\n      }, 500);\n      const evalMove = () => {\n        if (!game.isGameOver()) {\n          engine.postMessage(\"ucinewgame\");\n          engine.postMessage(\"position fen \" + this.state.fen);\n          engine.postMessage(\"eval\");\n        }\n      };\n      engine.onmessage = event => {\n        let line;\n        if (event && typeof event === \"object\") {\n          line = event.data;\n        } else {\n          line = event;\n        }\n        if (line.substr(0, \"Total Evaluation\".length) === \"Total Evaluation\") {\n          let score = parseFloat(line.substr(18).substr(0, 4));\n          if (!this.props.isWhite) score = score * -1;\n          this.sendRating(score, this.state.fen);\n        }\n      };\n      return {\n        start: function () {\n          engine.postMessage(\"ucinewgame\");\n          engine.postMessage(\"isready\");\n          announced_game_over = false;\n        },\n        evalMove: function () {\n          evalMove();\n        }\n      };\n    };\n    this.increment_whitetime = time => {\n      this.setState({\n        white_time: time\n      });\n    };\n    this.increment_blacktime = () => {\n      this.setState(state => ({\n        black_time: state.black_time - 1\n      }));\n    };\n    this.state = {\n      fen: \"start\",\n      turn: false,\n      gameStarted: false,\n      players: {},\n      scorecard: {},\n      canSubmitMove: false,\n      whiteTurn: false,\n      isCheckmate: false,\n      timeOut: false,\n      ratings: [],\n      white_time: 600,\n      black_time: 600\n    };\n    this.increment_whitetime = this.increment_whitetime.bind(this);\n    this.increment_blacktime = this.increment_blacktime.bind(this);\n  }\n  // socket client reactions to server events\n  componentDidMount() {\n    this.props.socket.on(\"nextTurn\", (weakest, isWhiteTurn, ratings, scorecard) => {\n      console.log(weakest);\n      console.log(scorecard);\n      this.setState({\n        fen: weakest,\n        scorecard: scorecard\n      });\n      game.load(weakest);\n\n      // if no longer your turn, update last turn's ratings so you can see who's the bum\n      if (this.props.isWhite !== isWhiteTurn) this.setState({\n        ratings: ratings\n      });\n\n      // check if checkmate\n      if (game.isCheckmate() === true) this.setState({\n        gameStarted: false,\n        isCheckmate: true\n      });else {\n        this.setState({\n          whiteTurn: !this.state.whiteTurn,\n          turn: !this.state.turn\n        });\n        if (this.props.isWhite === isWhiteTurn) this.setState({\n          canSubmitMove: true\n        });\n      }\n      ;\n    });\n    this.props.socket.on(\"update_players\", teams => {\n      this.setState({\n        players: JSON.parse(teams)\n      });\n    });\n    this.props.socket.on(\"begin_game\", scorecard => {\n      const Scorecard = JSON.parse(scorecard);\n      this.setState({\n        whiteTurn: true,\n        gameStarted: true,\n        scorecard: Scorecard,\n        fen: \"start\",\n        isCheckmate: false,\n        timeOut: false,\n        white_time: 600,\n        black_time: 600\n      });\n      if (this.props.isWhite) this.setState({\n        turn: true,\n        canSubmitMove: true\n      });\n      game.reset(); // restart the game\n    });\n\n    this.props.socket.on(\"time_out\", () => {\n      this.setState({\n        gameStarted: false,\n        timeOut: true\n      });\n    });\n    this.props.socket.on(\"update_timer\", timer => {\n      this.setState({\n        white_time: timer[0],\n        black_time: timer[1]\n      });\n    });\n  }\n\n  // send the client's rating to the server\n\n  render() {\n    const startGame = () => {\n      if (this.props.host) return /*#__PURE__*/_jsxDEV(StartGame, {\n        onClick: () => this.props.socket.emit(\"start_game\", this.props.roomCode),\n        children: \"START\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 36\n      }, this);\n    };\n    const GameControls = () => {\n      if (!this.state.gameStarted) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"space-evenly\",\n            width: \"70%\",\n            height: \"9%\"\n          },\n          children: [startGame(), /*#__PURE__*/_jsxDEV(ChangeTeam, {\n            team: \"white\",\n            onClick: e => this.changeTeam(true),\n            children: \"CHANGE TEAM\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this);\n      }\n    };\n    const Gameover = () => {\n      if (this.state.isCheckmate) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"CHECKMATE BUCKO\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this);\n      } else if (this.state.timeOut) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [team.toUpperCase(), \" WINS ON TIME\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this);\n      }\n    };\n    let team = this.props.isWhite ? \"white\" : \"black\";\n    let status = this.state.turn ? \"Your\" : \"Not Your\";\n    return /*#__PURE__*/_jsxDEV(GameWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(Chessboard, {\n        id: \"board!\",\n        position: this.state.fen,\n        onDrop: this.onDrop,\n        boardStyle: boardStyle,\n        orientation: team,\n        calcWidth: screen => Math.min(screen.screenHeight * .9, screen.screenWidth * .53)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          \"flex-direction\": 'column',\n          \"justify-content\": \"space-between\",\n          height: \"100vh\",\n          width: \"33vw\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Logo, {\n          style: {\n            width: \"50%\",\n            height: \"auto\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GameplaySection, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              \"flex-flow\": \"row wrap\",\n              \"justify-content\": \"center\",\n              height: \"fit-content\",\n              width: \"100%\",\n              \"margin-top\": \"17%\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(TeamSection, {\n              children: [/*#__PURE__*/_jsxDEV(TeamName, {\n                color: \"white\",\n                children: \"WHITE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Teams, {\n                players: this.state.players,\n                isWhite: true,\n                scorecard: this.state.scorecard,\n                gameStarted: this.state.gameStarted\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TeamSection, {\n              children: [/*#__PURE__*/_jsxDEV(TeamName, {\n                children: \"BLACK\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Teams, {\n                players: this.state.players,\n                isWhite: false,\n                scorecard: this.state.scorecard,\n                gameStarted: this.state.gameStarted\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Ratings, {\n            ratings: this.state.ratings\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(GameControls, {\n            gameStarted: this.state.gameStarted\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            style: {\n              color: \"#FFFFFF\"\n            },\n            children: [status, \" Turn\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            style: {\n              color: \"#FFFFFF\"\n            },\n            children: Gameover()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              height: \"8%\",\n              width: \"30%\",\n              justifyContent: \"center\",\n              alignItems: \"center\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(CountdownTimer, {\n              totalSeconds: this.state.white_time,\n              increment: this.increment_whitetime,\n              isRunning: this.state.whiteTurn\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CountdownTimer, {\n              totalSeconds: this.state.black_time,\n              increment: this.increment_blacktime,\n              isRunning: !this.state.whiteTurn && this.state.gameStarted\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          id: \"footer\",\n          style: {\n            display: \"flex\",\n            width: \"100%\",\n            margin: \"0 0 34px 34px\",\n            'justify-content': 'start'\n          },\n          children: [/*#__PURE__*/_jsxDEV(SettingButton, {\n            style: {\n              height: \"48px\",\n              width: \"48px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(RoomCodeButton, {\n            children: [\"ROOM: \", this.props.roomCode]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Game;\nconst boardStyle = {\n  border: \"10px solid #868BAC\",\n  boxShadow: `0 5px 15px rgba(0, 0, 0, 0.5)`,\n  \"border-radius\": \"5px\",\n  position: \"relative\",\n  left: \"5%\"\n};","map":{"version":3,"names":["Chessboard","React","Component","Logo","SettingButton","GameWrapper","RoomCode","RoomCodeButton","ChangeTeam","TeamName","StartGame","GameplaySection","TeamSection","Chess","Teams","Ratings","CountdownTimer","STOCKFISH","window","game","Game","constructor","props","sendRating","rating","position","socket","emit","roomCode","isWhite","username","changeTeam","setisWhite","onDrop","sourceSquare","targetSquare","console","log","state","canSubmitMove","turn","move","from","to","setState","fen","undo","Promise","resolve","then","engineGame","evalMove","options","engine","Worker","stockfishjs","announced_game_over","setInterval","isGameOver","postMessage","onmessage","event","line","data","substr","length","score","parseFloat","start","increment_whitetime","time","white_time","increment_blacktime","black_time","gameStarted","players","scorecard","whiteTurn","isCheckmate","timeOut","ratings","bind","componentDidMount","on","weakest","isWhiteTurn","load","teams","JSON","parse","Scorecard","reset","timer","render","startGame","host","GameControls","display","justifyContent","width","height","e","Gameover","team","toUpperCase","status","boardStyle","screen","Math","min","screenHeight","screenWidth","color","alignItems","margin","border","boxShadow","left"],"sources":["C:/Users/catas/Desktop/Basic Chess Game/client/src/pages/game.js"],"sourcesContent":["import Chessboard from \"chessboardjsx\";\r\nimport { React, Component } from \"react\";\r\nimport { Logo, SettingButton } from \"../StyledComponents\"\r\nimport { GameWrapper, RoomCode as RoomCodeButton, ChangeTeam, TeamName, StartGame, GameplaySection } from \"../StyledComponents/gameComponents\"\r\nimport { TeamSection } from \"../StyledComponents/gameComponents\";\r\nimport { Chess } from \"chess.js\";\r\nimport { Teams, Ratings, CountdownTimer } from \"../items/displayItems\";\r\n\r\nconst STOCKFISH = window.STOCKFISH;\r\nconst game = new Chess();\r\n\r\nclass Game extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      fen: \"start\",\r\n      turn: false,\r\n      gameStarted: false,\r\n      players: {},\r\n      scorecard: {},\r\n      canSubmitMove: false,\r\n      whiteTurn: false,\r\n      isCheckmate: false,\r\n      timeOut: false,\r\n      ratings: [],\r\n      white_time: 600,\r\n      black_time: 600,\r\n    }\r\n    this.increment_whitetime = this.increment_whitetime.bind(this);\r\n    this.increment_blacktime = this.increment_blacktime.bind(this);\r\n  };\r\n\r\n  // socket client reactions to server events\r\n  componentDidMount() {\r\n    this.props.socket.on(\"nextTurn\", (weakest, isWhiteTurn, ratings, scorecard) => {\r\n      console.log(weakest);\r\n      console.log(scorecard);\r\n      this.setState({ fen: weakest, scorecard: scorecard });\r\n      game.load(weakest);\r\n\r\n      // if no longer your turn, update last turn's ratings so you can see who's the bum\r\n      if (this.props.isWhite !== isWhiteTurn) this.setState({ ratings: ratings });\r\n\r\n      // check if checkmate\r\n      if (game.isCheckmate() === true) this.setState({ gameStarted: false, isCheckmate: true })\r\n      else {\r\n        this.setState({ whiteTurn: !this.state.whiteTurn, turn: !this.state.turn });\r\n        if (this.props.isWhite === isWhiteTurn) this.setState({ canSubmitMove: true });\r\n      };\r\n    });\r\n\r\n    this.props.socket.on(\"update_players\", (teams) => {\r\n      this.setState({ players: JSON.parse(teams) });\r\n    });\r\n\r\n    this.props.socket.on(\"begin_game\", (scorecard) => {\r\n      const Scorecard = JSON.parse(scorecard);\r\n      this.setState({\r\n        whiteTurn: true,\r\n        gameStarted: true,\r\n        scorecard: Scorecard,\r\n        fen: \"start\",\r\n        isCheckmate: false,\r\n        timeOut: false,\r\n        white_time: 600,\r\n        black_time: 600,\r\n      });\r\n      if (this.props.isWhite) this.setState({ turn: true, canSubmitMove: true });\r\n\r\n      game.reset(); // restart the game\r\n\r\n    })\r\n\r\n    this.props.socket.on(\"time_out\", () => {\r\n      this.setState({ gameStarted: false, timeOut: true });\r\n    })\r\n\r\n    this.props.socket.on(\"update_timer\", (timer) => {\r\n      this.setState({ white_time: timer[0], black_time: timer[1] });\r\n    });\r\n\r\n  }\r\n\r\n  // send the client's rating to the server\r\n  sendRating = (rating, position) => {\r\n    this.props.socket.emit(\"send_rating\", rating, position, this.props.roomCode, this.props.isWhite, this.props.username);\r\n  };\r\n\r\n  changeTeam = () => {\r\n    this.props.socket.emit(\"change_team\", this.props.isWhite, this.props.roomCode, this.props.username);\r\n    this.props.setisWhite(!this.props.isWhite);\r\n  }\r\n\r\n  onDrop = ({ sourceSquare, targetSquare }) => {\r\n    console.log(this.state.canSubmitMove);\r\n    if (!this.state.turn || !this.state.canSubmitMove) return;\r\n    const move = game.move({ from: sourceSquare, to: targetSquare })\r\n    if (move === null) return; // illegal move  \r\n\r\n    // grab player proposed position and show it\r\n    this.setState({ fen: game.fen() })\r\n    this.setState({ canSubmitMove: false });\r\n\r\n    game.undo();\r\n\r\n    return new Promise((resolve) => {\r\n      resolve();\r\n    }).then(() => this.engineGame().evalMove());\r\n  };\r\n\r\n  engineGame = (options) => {\r\n    options = options || {};\r\n\r\n    /// We can load Stockfish via Web Workers or via STOCKFISH() if loaded from a <script> tag.\r\n    let engine =\r\n      typeof STOCKFISH === \"function\"\r\n        ? STOCKFISH()\r\n        : new Worker(options.stockfishjs || \"stockfish.js\");\r\n    let announced_game_over;\r\n\r\n    setInterval(() => {\r\n      if (announced_game_over) {\r\n        return;\r\n      }\r\n      if (game.isGameOver()) {\r\n        announced_game_over = true;\r\n      }\r\n    }, 500);\r\n\r\n    const evalMove = () => {\r\n      if (!game.isGameOver()) {\r\n        engine.postMessage(\"ucinewgame\");\r\n        engine.postMessage(\"position fen \" + this.state.fen);\r\n        engine.postMessage(\"eval\");\r\n      }\r\n    };\r\n\r\n    engine.onmessage = (event) => {\r\n      let line;\r\n\r\n      if (event && typeof event === \"object\") {\r\n        line = event.data;\r\n      } else {\r\n        line = event;\r\n      }\r\n      if (line.substr(0, \"Total Evaluation\".length) === \"Total Evaluation\") {\r\n        let score = parseFloat(line.substr(18).substr(0, 4));\r\n        if (!this.props.isWhite) score = score * -1;\r\n        this.sendRating(score, this.state.fen);\r\n      }\r\n    };\r\n\r\n    return {\r\n      start: function () {\r\n        engine.postMessage(\"ucinewgame\");\r\n        engine.postMessage(\"isready\");\r\n        announced_game_over = false;\r\n      },\r\n      evalMove: function () {\r\n        evalMove();\r\n      },\r\n    };\r\n  };\r\n\r\n  increment_whitetime = (time) => {\r\n    this.setState( {white_time : time } ) \r\n  }\r\n\r\n  increment_blacktime = () => {\r\n    this.setState((state) => ({\r\n      black_time: state.black_time - 1\r\n    }));\r\n  };\r\n\r\n  render() {\r\n\r\n    const startGame = () => {\r\n      if (this.props.host) return (<StartGame onClick={() => this.props.socket.emit(\"start_game\", this.props.roomCode)}>START</StartGame>);\r\n    };\r\n\r\n    const GameControls = () => {\r\n      if (!this.state.gameStarted) {\r\n        return (\r\n          <div style={{ display: \"flex\", justifyContent: \"space-evenly\", width: \"70%\", height: \"9%\" }}>\r\n            {startGame()}\r\n            <ChangeTeam team=\"white\" onClick={e => this.changeTeam(true)} >CHANGE TEAM</ChangeTeam>\r\n          </div>\r\n        )\r\n      }\r\n    }\r\n\r\n    const Gameover = () => {\r\n      if (this.state.isCheckmate) {\r\n        return (\r\n          <div>CHECKMATE BUCKO</div>\r\n        )\r\n      }\r\n      else if (this.state.timeOut) {\r\n        return (\r\n          <div>{team.toUpperCase()} WINS ON TIME</div>\r\n        )\r\n      }\r\n    }\r\n\r\n    let team = this.props.isWhite ? \"white\" : \"black\"\r\n    let status = (this.state.turn ? \"Your\" : \"Not Your\");\r\n\r\n\r\n    return (\r\n      <GameWrapper>\r\n        <Chessboard\r\n          id=\"board!\"\r\n          position={this.state.fen}\r\n          onDrop={this.onDrop}\r\n          boardStyle={boardStyle}\r\n          orientation={team}\r\n          calcWidth={(screen) => Math.min(screen.screenHeight * .9, screen.screenWidth * .53)}\r\n        />\r\n\r\n        <div style={{ display: \"flex\", \"flex-direction\": 'column', \"justify-content\": \"space-between\", height: \"100vh\", width: \"33vw\" }}>\r\n\r\n          <Logo style={{ width: \"50%\", height: \"auto\" }}></Logo>\r\n\r\n\r\n          <GameplaySection>\r\n            <div style={{ display: \"flex\", \"flex-flow\": \"row wrap\", \"justify-content\": \"center\", height: \"fit-content\", width: \"100%\", \"margin-top\": \"17%\" }}>\r\n              <TeamSection>\r\n                <TeamName color=\"white\">WHITE</TeamName>\r\n                <Teams players={this.state.players} isWhite={true} scorecard={this.state.scorecard} gameStarted={this.state.gameStarted} />\r\n              </TeamSection>\r\n              <TeamSection>\r\n                <TeamName>BLACK</TeamName>\r\n                <Teams players={this.state.players} isWhite={false} scorecard={this.state.scorecard} gameStarted={this.state.gameStarted} />\r\n              </TeamSection>\r\n            </div>\r\n\r\n            <Ratings ratings={this.state.ratings} />\r\n\r\n            <GameControls gameStarted={this.state.gameStarted} />\r\n\r\n            <h1 style={{ color: \"#FFFFFF\" }}>{status} Turn</h1>\r\n            <h1 style={{ color: \"#FFFFFF\" }}>{Gameover()}</h1>\r\n            <div style={{ display: \"flex\", height: \"8%\", width: \"30%\", justifyContent: \"center\", alignItems: \"center\" }}>\r\n\r\n              <CountdownTimer totalSeconds={this.state.white_time} increment={this.increment_whitetime} isRunning={this.state.whiteTurn} />\r\n              <CountdownTimer totalSeconds={this.state.black_time} increment={this.increment_blacktime}\r\n                isRunning={(!this.state.whiteTurn && this.state.gameStarted)} />\r\n\r\n            </div>\r\n          </GameplaySection>\r\n\r\n          <section id=\"footer\" style={{ display: \"flex\", width: \"100%\", margin: \"0 0 34px 34px\", 'justify-content': 'start' }}>\r\n            <SettingButton style={{ height: \"48px\", width: \"48px\", }}></SettingButton>\r\n            <RoomCodeButton>ROOM: {this.props.roomCode}</RoomCodeButton>\r\n          </section>\r\n\r\n        </div>\r\n      </GameWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Game;\r\n\r\nconst boardStyle = {\r\n  border: \"10px solid #868BAC\",\r\n  boxShadow: `0 5px 15px rgba(0, 0, 0, 0.5)`,\r\n  \"border-radius\": \"5px\",\r\n  position: \"relative\",\r\n  left: \"5%\"\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}