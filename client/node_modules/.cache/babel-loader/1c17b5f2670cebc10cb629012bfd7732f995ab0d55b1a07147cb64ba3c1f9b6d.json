{"ast":null,"code":"var _jsxFileName = \"/Users/lawrence/Documents/Projects/theWeakestLink/client/src/main_pages/gameFunctional.js\",\n  _s = $RefreshSig$();\nimport Chessboard from \"chessboardjsx\";\nimport { Chess } from \"chess.js\";\nimport { useState, useEffect, useRef } from \"react\";\nimport { Logo } from \"../styled_components\";\nimport { RoomCode as RoomCodeButton } from \"../styled_components/gameComponents\";\nimport { MatchClock } from \"../items/matchClock.js\";\nimport { usePlayerContext } from '../contexts/PlayerContext';\nimport { begin_game_handler, next_turn_handler, room_joined_handler, timer_handler, update_teams_handler } from \"../handlers/socket_handlers.js\";\nimport { sendRating, squareStyling } from \"../handlers/helpers.js\";\nimport TeamRoster from \"../items/teamRoster.js\";\nimport styled from 'styled-components';\nimport { Ratings, Gameover } from \"../items/display_components.js\";\nimport { GameControls, TurnDisplay } from \"../items/interactive_components.js\";\nimport Settings from \"../items/settingsMenu.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconsole.log(\"Game functional loaded\");\nconst engine = new Worker(\"stockfish.js\");\nconst game = new Chess();\n\n// function chessBoardWidth(screen){\n//   return \n// }\n\nconst Game = () => {\n  _s();\n  const [fen, setFen] = useState(\"start\");\n  const [turn, setTurn] = useState(false);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [canSubmitMove, setCanSubmitMove] = useState(false);\n  const [whiteTurn, setWhiteTurn] = useState(false);\n  const [isCheckmate, setIsCheckmate] = useState(false);\n  const [timeOut, setTimeOut] = useState(false);\n  const [whiteTime, setWhiteTime] = useState(50);\n  const [blackTime, setBlackTime] = useState(50);\n  const [whiteTeam, setWhiteTeam] = useState(new Map());\n  const [blackTeam, setBlackTeam] = useState(new Map());\n  const [squareStyles, setSquareStyles] = useState({});\n  const proposedMove = useRef(\"\");\n  const target = useRef(\"\");\n  const source = useRef(\"\");\n  const {\n    socket,\n    roomCode,\n    setRoomCode,\n    host,\n    isWhite,\n    setIsWhite,\n    username\n  } = usePlayerContext();\n\n  // core logic handler mounts\n  useEffect(() => {\n    room_joined_handler(socket, setRoomCode, setIsWhite);\n    next_turn_handler(socket, game, setFen, setIsCheckmate, setGameStarted, setWhiteTurn, setTurn, isWhite, setCanSubmitMove, roomCode, setSquareStyles);\n    update_teams_handler(socket, setWhiteTeam, setBlackTeam);\n    begin_game_handler(socket, game, setWhiteTurn, setGameStarted, setFen, setIsCheckmate, setTimeOut, isWhite, setTurn, setCanSubmitMove, setSquareStyles);\n    timer_handler(socket, setGameStarted, setTimeOut, setTurn, setCanSubmitMove, roomCode, setWhiteTime, setBlackTime);\n    return () => {\n      socket.removeAllListeners();\n    };\n  }, [isWhite, roomCode, setIsWhite, setRoomCode, socket]);\n  const engineGame = () => {\n    const evalMove = () => {\n      engine.postMessage(\"ucinewgame\");\n      console.log(\"proposedMove.current:\" + proposedMove.current);\n      engine.postMessage(\"position fen \" + proposedMove.current);\n      engine.postMessage(\"go depth 5\");\n\n      // engine.postMessage(\"eval\");\n      // if (!game.isGameOver()) {\n      //   engine.postMessage(\"ucinewgame\");\n      //   console.log(\"proposedMove.current:\" + proposedMove.current)\n      //   engine.postMessage(\"position fen \" + proposedMove.current);\n      //   engine.postMessage(\"eval\");\n      // }\n    };\n\n    engine.onmessage = event => {\n      let line;\n      console.log(\"trigger\");\n      if (event && typeof event === \"object\") {\n        line = event.data;\n      } else {\n        line = event;\n      }\n      console.log(line);\n      if (line.substring(0, 8) === \"bestmove\") {\n        let score = line.substring(line.indexOf(\"score\") + 6);\n        console.log(score);\n        // if (!isWhite) score = score * -1;\n        sendRating(socket, score, proposedMove.current, roomCode, isWhite, username, target, source);\n      }\n    };\n    return {\n      start: function () {\n        console.log(\"starting\");\n        engine.postMessage(\"ucinewgame\");\n        engine.postMessage(\"isready\");\n        // announced_game_over = false;\n      },\n\n      evalMove: function () {\n        evalMove();\n      }\n    };\n  };\n  const onDrop = _ref => {\n    let {\n      sourceSquare,\n      targetSquare\n    } = _ref;\n    if (!turn || !canSubmitMove) return;\n    const move = game.move({\n      from: sourceSquare,\n      to: targetSquare\n    });\n    if (move === null) return; // illegal move  \n    console.log(game.fen());\n    // grab player proposed position and show it\n    proposedMove.current = game.fen();\n    target.current = targetSquare;\n    source.current = sourceSquare;\n    setFen(proposedMove.current);\n    setCanSubmitMove(false);\n\n    // game.undo();\n\n    // highlight the move made\n    setSquareStyles(squareStyling(sourceSquare, targetSquare));\n    return new Promise(resolve => {\n      resolve();\n    }).then(() => engineGame().evalMove());\n  };\n  const GameStateDisplay = () => {\n    return /*#__PURE__*/_jsxDEV(GameStateDisplayWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(Ratings, {\n        team: isWhite ? whiteTeam : blackTeam,\n        gameStarted: gameStarted\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GameControls, {\n        gameStarted: gameStarted,\n        socket: socket,\n        roomCode: roomCode,\n        host: host,\n        isWhite: isWhite,\n        username: username,\n        setIsWhite: setIsWhite\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TurnDisplay, {\n        gameStarted: gameStarted,\n        turn: turn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Gameover, {\n        isCheckmate: isCheckmate,\n        timeOut: timeOut,\n        whiteTurn: whiteTurn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(GameWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(ChessboardWrapper, {\n      children: /*#__PURE__*/_jsxDEV(Chessboard, {\n        id: \"board!\",\n        position: fen,\n        onDrop: onDrop,\n        boardStyle: BoardStyle,\n        orientation: isWhite ? \"white\" : \"black\",\n        calcWidth: screen => Math.min(screen.screenHeight, screen.screenWidth) * .9,\n        squareStyles: squareStyles\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TeamRoster, {\n      whiteTeam: whiteTeam,\n      blackTeam: blackTeam,\n      gameStarted: gameStarted\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GameStateDisplay, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {\n      children: [/*#__PURE__*/_jsxDEV(Settings, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RoomCodeButton, {\n        children: [\"ROOM: \", roomCode]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MatchClock, {\n        whiteTime: whiteTime,\n        blackTime: blackTime,\n        whiteTurn: whiteTurn,\n        gameStarted: gameStarted\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"HBrBVQYY7Lok8igjcejRlIPcDSE=\", false, function () {\n  return [usePlayerContext];\n});\n_c = Game;\nconst Footer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items:center;\n  width: 100%;\n  height: 100%;\n  gap: 3%;\n  grid-area: footer;\n`;\n_c2 = Footer;\nconst BoardStyle = {};\nconst GameStateDisplayWrapper = styled.div`\n  grid-area: control;\n`;\n_c3 = GameStateDisplayWrapper;\nconst ChessboardWrapper = styled.div`\n  border: 5px solid #868BAC;\n  border-radius: 5px;\n  grid-area: chessboard;\n`;\n_c4 = ChessboardWrapper;\nconst GameWrapper = styled.div`\ndisplay: grid;\nposition: relative;\ngrid-template:\n    \"logo chessboard\" 1fr\n    \"roster chessboard\" 1fr \n    \"roster chessboard\" 1fr\n    \"control chessboard\" 1fr\n    \"footer chessboard\" 1fr \n    / 1fr 2fr;\nmargin:0;\npadding:0;\nbackground-color: rgb(38,40,56,0.93);\nheight:100;\nwidth: 100dvw;\nmax-width: 1800px;\njustify-items: center;\nalign-items: center;\nbox-sizing: border-box;\n\n@media screen and (width<=600px){\n    grid-template:\n    \"footer logo\" 1fr\n    \"roster roster\" 2fr\n    \"control control\" 1fr\n    \"chessboard chessboard\" 3fr\n    / 3fr 1fr;\n    padding: 5px 0 15px 0;\n\n}\n`;\n_c5 = GameWrapper;\nexport default Game;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Game\");\n$RefreshReg$(_c2, \"Footer\");\n$RefreshReg$(_c3, \"GameStateDisplayWrapper\");\n$RefreshReg$(_c4, \"ChessboardWrapper\");\n$RefreshReg$(_c5, \"GameWrapper\");","map":{"version":3,"names":["Chessboard","Chess","useState","useEffect","useRef","Logo","RoomCode","RoomCodeButton","MatchClock","usePlayerContext","begin_game_handler","next_turn_handler","room_joined_handler","timer_handler","update_teams_handler","sendRating","squareStyling","TeamRoster","styled","Ratings","Gameover","GameControls","TurnDisplay","Settings","console","log","engine","Worker","game","Game","fen","setFen","turn","setTurn","gameStarted","setGameStarted","canSubmitMove","setCanSubmitMove","whiteTurn","setWhiteTurn","isCheckmate","setIsCheckmate","timeOut","setTimeOut","whiteTime","setWhiteTime","blackTime","setBlackTime","whiteTeam","setWhiteTeam","Map","blackTeam","setBlackTeam","squareStyles","setSquareStyles","proposedMove","target","source","socket","roomCode","setRoomCode","host","isWhite","setIsWhite","username","removeAllListeners","engineGame","evalMove","postMessage","current","onmessage","event","line","data","substring","score","indexOf","start","onDrop","sourceSquare","targetSquare","move","from","to","Promise","resolve","then","GameStateDisplay","BoardStyle","screen","Math","min","screenHeight","screenWidth","Footer","div","GameStateDisplayWrapper","ChessboardWrapper","GameWrapper"],"sources":["/Users/lawrence/Documents/Projects/theWeakestLink/client/src/main_pages/gameFunctional.js"],"sourcesContent":["import Chessboard from \"chessboardjsx\";\nimport { Chess } from \"chess.js\";\nimport { useState, useEffect, useRef } from \"react\";\nimport { Logo } from \"../styled_components\"\nimport { RoomCode as RoomCodeButton } from \"../styled_components/gameComponents\"\nimport { MatchClock } from \"../items/matchClock.js\";\nimport { usePlayerContext } from '../contexts/PlayerContext';\nimport {\n  begin_game_handler, next_turn_handler, room_joined_handler,\n  timer_handler, update_teams_handler\n} from \"../handlers/socket_handlers.js\";\nimport { sendRating, squareStyling } from \"../handlers/helpers.js\"\nimport TeamRoster from \"../items/teamRoster.js\";\nimport styled from 'styled-components';\nimport { Ratings, Gameover } from \"../items/display_components.js\";\nimport { GameControls, TurnDisplay } from \"../items/interactive_components.js\";\nimport Settings from \"../items/settingsMenu.js\";\n\n\nconsole.log(\"Game functional loaded\")\n\nconst engine = new Worker(\"stockfish.js\");\nconst game = new Chess();\n\n// function chessBoardWidth(screen){\n//   return \n// }\n\nconst Game = () => {\n  const [fen, setFen] = useState(\"start\");\n  const [turn, setTurn] = useState(false);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [canSubmitMove, setCanSubmitMove] = useState(false);\n  const [whiteTurn, setWhiteTurn] = useState(false);\n  const [isCheckmate, setIsCheckmate] = useState(false);\n  const [timeOut, setTimeOut] = useState(false);\n  const [whiteTime, setWhiteTime] = useState(50);\n  const [blackTime, setBlackTime] = useState(50);\n  const [whiteTeam, setWhiteTeam] = useState(new Map());\n  const [blackTeam, setBlackTeam] = useState(new Map());\n  const [squareStyles, setSquareStyles] = useState({});\n  const proposedMove = useRef(\"\");\n  const target = useRef(\"\");\n  const source = useRef(\"\");\n\n\n  const { socket,\n    roomCode,\n    setRoomCode,\n    host,\n    isWhite,\n    setIsWhite,\n    username,\n  } = usePlayerContext();\n\n  // core logic handler mounts\n  useEffect(() => {\n    room_joined_handler(socket, setRoomCode, setIsWhite);\n\n    next_turn_handler(socket, game, setFen, setIsCheckmate, setGameStarted,\n      setWhiteTurn, setTurn, isWhite, setCanSubmitMove, roomCode, setSquareStyles);\n\n    update_teams_handler(socket, setWhiteTeam, setBlackTeam);\n\n    begin_game_handler(socket, game, setWhiteTurn, setGameStarted, setFen, setIsCheckmate,\n      setTimeOut, isWhite, setTurn, setCanSubmitMove, setSquareStyles);\n\n    timer_handler(socket, setGameStarted, setTimeOut, setTurn, setCanSubmitMove, roomCode, setWhiteTime, setBlackTime);\n\n    return () => {\n      socket.removeAllListeners();\n    }\n\n  }, [isWhite, roomCode, setIsWhite, setRoomCode, socket]);\n\n\n\n  const engineGame = () => {\n\n    const evalMove = () => {\n      engine.postMessage(\"ucinewgame\");\n      console.log(\"proposedMove.current:\" + proposedMove.current)\n      engine.postMessage(\"position fen \" + proposedMove.current);\n      engine.postMessage(\"go depth 5\")\n\n      // engine.postMessage(\"eval\");\n      // if (!game.isGameOver()) {\n      //   engine.postMessage(\"ucinewgame\");\n      //   console.log(\"proposedMove.current:\" + proposedMove.current)\n      //   engine.postMessage(\"position fen \" + proposedMove.current);\n      //   engine.postMessage(\"eval\");\n      // }\n    };\n\n    engine.onmessage = (event) => {\n      let line;\n      console.log(\"trigger\")\n\n      if (event && typeof event === \"object\") {\n        line = event.data;\n      } else {\n        line = event;\n      }\n      console.log(line);\n      if (line.substring(0, 8) === \"bestmove\") {\n\n        let score = line.substring(line.indexOf(\"score\") + 6);\n        console.log(score)\n        // if (!isWhite) score = score * -1;\n        sendRating(socket, score, proposedMove.current, roomCode, isWhite, username, target, source);\n      }\n    };\n\n    return {\n      start: function () {\n        console.log(\"starting\")\n        engine.postMessage(\"ucinewgame\");\n        engine.postMessage(\"isready\");\n        // announced_game_over = false;\n      },\n      evalMove: function () {\n        evalMove();\n      },\n    };\n  };\n\n  const onDrop = ({ sourceSquare, targetSquare }) => {\n\n    if (!turn || !canSubmitMove) return;\n    const move = game.move({ from: sourceSquare, to: targetSquare })\n    if (move === null) return; // illegal move  \n    console.log(game.fen());\n    // grab player proposed position and show it\n    proposedMove.current = game.fen();\n    target.current = targetSquare;\n    source.current = sourceSquare\n    setFen(proposedMove.current);\n    setCanSubmitMove(false);\n\n    // game.undo();\n\n    // highlight the move made\n    setSquareStyles(squareStyling(sourceSquare, targetSquare));\n\n    return new Promise((resolve) => {\n      resolve();\n    }).then(() => engineGame().evalMove());\n  };\n\n  const GameStateDisplay = () => {\n    return (\n      <GameStateDisplayWrapper>\n        <Ratings team={isWhite ? whiteTeam : blackTeam} gameStarted={gameStarted} />\n        <GameControls gameStarted={gameStarted} socket={socket} roomCode={roomCode} host={host}\n          isWhite={isWhite} username={username} setIsWhite={setIsWhite} />\n        <TurnDisplay gameStarted={gameStarted} turn={turn} />\n          <Gameover isCheckmate={isCheckmate} timeOut={timeOut} whiteTurn={whiteTurn} />\n      </GameStateDisplayWrapper>\n    )\n  }\n\n  return (\n\n    <GameWrapper>\n      <ChessboardWrapper>\n        <Chessboard\n          id=\"board!\"\n          position={fen}\n          onDrop={onDrop}\n          boardStyle={BoardStyle}\n          orientation={isWhite ? \"white\" : \"black\"}\n          calcWidth={(screen) => Math.min(screen.screenHeight, screen.screenWidth) * .9}\n          squareStyles={squareStyles}\n        />\n      </ChessboardWrapper>\n      <Logo/>\n      <TeamRoster whiteTeam={whiteTeam} blackTeam={blackTeam} gameStarted={gameStarted} />\n      <GameStateDisplay />\n      <Footer>\n        {/* <SettingButton setWhiteTime={setWhiteTime} setBlackTime={setBlackTime} socket={socket} /> */}\n        <Settings/>\n        <RoomCodeButton>ROOM: {roomCode}</RoomCodeButton>\n        <MatchClock whiteTime={whiteTime} blackTime={blackTime} whiteTurn={whiteTurn} gameStarted={gameStarted} />\n      </Footer>\n\n    </GameWrapper>\n\n  );\n}\n\nconst Footer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items:center;\n  width: 100%;\n  height: 100%;\n  gap: 3%;\n  grid-area: footer;\n`;\n\nconst BoardStyle = {\n};\n\nconst GameStateDisplayWrapper = styled.div`\n  grid-area: control;\n`;\n\nconst ChessboardWrapper = styled.div`\n  border: 5px solid #868BAC;\n  border-radius: 5px;\n  grid-area: chessboard;\n`\n\nconst GameWrapper = styled.div`\ndisplay: grid;\nposition: relative;\ngrid-template:\n    \"logo chessboard\" 1fr\n    \"roster chessboard\" 1fr \n    \"roster chessboard\" 1fr\n    \"control chessboard\" 1fr\n    \"footer chessboard\" 1fr \n    / 1fr 2fr;\nmargin:0;\npadding:0;\nbackground-color: rgb(38,40,56,0.93);\nheight:100;\nwidth: 100dvw;\nmax-width: 1800px;\njustify-items: center;\nalign-items: center;\nbox-sizing: border-box;\n\n@media screen and (width<=600px){\n    grid-template:\n    \"footer logo\" 1fr\n    \"roster roster\" 2fr\n    \"control control\" 1fr\n    \"chessboard chessboard\" 3fr\n    / 3fr 1fr;\n    padding: 5px 0 15px 0;\n\n}\n`;\n\nexport default Game;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}